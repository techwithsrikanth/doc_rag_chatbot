import*as e from"onnxruntime-node";import*as t from"sharp";var n,r,o={"onnxruntime-node":
/*!***********************************!*\
  !*** external "onnxruntime-node" ***!
  \***********************************/t=>{t.exports=e},sharp:
/*!************************!*\
  !*** external "sharp" ***!
  \************************/e=>{e.exports=t},"?9c66":
/*!****************************************!*\
  !*** onnxruntime-web/webgpu (ignored) ***!
  \****************************************/()=>{},"?7a2c":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/()=>{},"?a42a":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/()=>{},"?569f":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/()=>{},"?3f59":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/()=>{},"?154a":
/*!*********************!*\
  !*** url (ignored) ***!
  \*********************/()=>{},"./node_modules/@huggingface/jinja/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@huggingface/jinja/dist/index.js ***!
  \*******************************************************/(e,t,n)=>{n.r(t),n.d(t,{Environment:()=>Y,Interpreter:()=>K,Template:()=>ee,parse:()=>B,tokenize:()=>d});var r=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),o=Object.freeze({set:r.Set,for:r.For,in:r.In,is:r.Is,if:r.If,else:r.Else,endif:r.EndIf,elif:r.ElseIf,endfor:r.EndFor,and:r.And,or:r.Or,not:r.Not,"not in":r.NotIn,macro:r.Macro,endmacro:r.EndMacro,true:r.BooleanLiteral,false:r.BooleanLiteral,True:r.BooleanLiteral,False:r.BooleanLiteral}),s=class{constructor(e,t){this.value=e,this.type=t}};function a(e){return/\w/.test(e)}function i(e){return/[0-9]/.test(e)}var l=[["{%",r.OpenStatement],["%}",r.CloseStatement],["{{",r.OpenExpression],["}}",r.CloseExpression],["(",r.OpenParen],[")",r.CloseParen],["{",r.OpenCurlyBracket],["}",r.CloseCurlyBracket],["[",r.OpenSquareBracket],["]",r.CloseSquareBracket],[",",r.Comma],[".",r.Dot],[":",r.Colon],["|",r.Pipe],["<=",r.ComparisonBinaryOperator],[">=",r.ComparisonBinaryOperator],["==",r.ComparisonBinaryOperator],["!=",r.ComparisonBinaryOperator],["<",r.ComparisonBinaryOperator],[">",r.ComparisonBinaryOperator],["+",r.AdditiveBinaryOperator],["-",r.AdditiveBinaryOperator],["*",r.MultiplicativeBinaryOperator],["/",r.MultiplicativeBinaryOperator],["%",r.MultiplicativeBinaryOperator],["=",r.Equals]],c=new Map([["n","\n"],["t","\t"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function d(e,t={}){const n=[],d=function(e,t={}){return e.endsWith("\n")&&(e=e.slice(0,-1)),e=e.replace(/{#.*?#}/gs,"{##}"),t.lstrip_blocks&&(e=e.replace(/^[ \t]*({[#%])/gm,"$1")),t.trim_blocks&&(e=e.replace(/([#%]})\n/g,"$1")),e.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(e,t);let u=0;const p=e=>{let t="";for(;e(d[u]);)if("\\"!==d[u]){if(t+=d[u++],u>=d.length)throw new SyntaxError("Unexpected end of input")}else{if(++u,u>=d.length)throw new SyntaxError("Unexpected end of input");const e=d[u++],n=c.get(e);if(void 0===n)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=n}return t};e:for(;u<d.length;){const e=n.at(-1)?.type;if(void 0===e||e===r.CloseStatement||e===r.CloseExpression){let e="";for(;u<d.length&&("{"!==d[u]||"%"!==d[u+1]&&"{"!==d[u+1]);)e+=d[u++];if(e.length>0){n.push(new s(e,r.Text));continue}}p((e=>/\s/.test(e)));const t=d[u];if("-"===t||"+"===t){const e=n.at(-1)?.type;if(e===r.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${t}`);switch(e){case r.Identifier:case r.NumericLiteral:case r.BooleanLiteral:case r.StringLiteral:case r.CloseParen:case r.CloseSquareBracket:break;default:{++u;const e=p(i);n.push(new s(`${t}${e}`,e.length>0?r.NumericLiteral:r.UnaryOperator));continue}}}for(const[e,t]of l){if(d.slice(u,u+e.length)===e){n.push(new s(e,t)),u+=e.length;continue e}}if("'"!==t&&'"'!==t)if(i(t)){const e=p(i);n.push(new s(e,r.NumericLiteral))}else{if(!a(t))throw new SyntaxError(`Unexpected character: ${t}`);{const e=p(a),t=Object.hasOwn(o,e)?o[e]:r.Identifier;t===r.In&&n.at(-1)?.type===r.Not?(n.pop(),n.push(new s("not in",r.NotIn))):n.push(new s(e,t))}}else{++u;const e=p((e=>e!==t));n.push(new s(e,r.StringLiteral)),++u}}return n}var u=class{type="Statement"},p=class extends u{constructor(e){super(),this.body=e}type="Program"},h=class extends u{constructor(e,t,n){super(),this.test=e,this.body=t,this.alternate=n}type="If"},m=class extends u{constructor(e,t,n,r){super(),this.loopvar=e,this.iterable=t,this.body=n,this.defaultBlock=r}type="For"},_=class extends u{constructor(e,t){super(),this.assignee=e,this.value=t}type="Set"},f=class extends u{constructor(e,t,n){super(),this.name=e,this.args=t,this.body=n}type="Macro"},g=class extends u{type="Expression"},M=class extends g{constructor(e,t,n){super(),this.object=e,this.property=t,this.computed=n}type="MemberExpression"},w=class extends g{constructor(e,t){super(),this.callee=e,this.args=t}type="CallExpression"},b=class extends g{constructor(e){super(),this.value=e}type="Identifier"},T=class extends g{constructor(e){super(),this.value=e}type="Literal"},x=class extends T{type="NumericLiteral"},y=class extends T{type="StringLiteral"},k=class extends T{type="BooleanLiteral"},F=class extends T{type="ArrayLiteral"},C=class extends T{type="TupleLiteral"},P=class extends T{type="ObjectLiteral"},v=class extends g{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}type="BinaryExpression"},S=class extends g{constructor(e,t){super(),this.operand=e,this.filter=t}type="FilterExpression"},A=class extends g{constructor(e,t){super(),this.iterable=e,this.test=t}type="SelectExpression"},E=class extends g{constructor(e,t,n){super(),this.operand=e,this.negate=t,this.test=n}type="TestExpression"},L=class extends g{constructor(e,t){super(),this.operator=e,this.argument=t}type="UnaryExpression"},z=class extends g{constructor(e=void 0,t=void 0,n=void 0){super(),this.start=e,this.stop=t,this.step=n}type="SliceExpression"},I=class extends g{constructor(e,t){super(),this.key=e,this.value=t}type="KeywordArgumentExpression"};function B(e){const t=new p([]);let n=0;function o(t,r){const o=e[n++];if(!o||o.type!==t)throw new Error(`Parser Error: ${r}. ${o.type} !== ${t}.`);return o}function s(){switch(e[n].type){case r.Text:return new y(o(r.Text,"Expected text token").value);case r.OpenStatement:return function(){let t;switch(o(r.OpenStatement,"Expected opening statement token"),e[n].type){case r.Set:++n,t=l(),o(r.CloseStatement,"Expected closing statement token");break;case r.If:++n,t=c(),o(r.OpenStatement,"Expected {% token"),o(r.EndIf,"Expected endif token"),o(r.CloseStatement,"Expected %} token");break;case r.Macro:++n,t=function(){const e=q();if("Identifier"!==e.type)throw new SyntaxError("Expected identifier following macro statement");const t=V();o(r.CloseStatement,"Expected closing statement token");const n=[];for(;a(r.OpenStatement,r.EndMacro);)n.push(s());return new f(e,t,n)}(),o(r.OpenStatement,"Expected {% token"),o(r.EndMacro,"Expected endmacro token"),o(r.CloseStatement,"Expected %} token");break;case r.For:++n,t=function(){const e=d(!0);if(!(e instanceof b||e instanceof C))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${e.type} instead`);o(r.In,"Expected `in` keyword following loop variable");const t=u();o(r.CloseStatement,"Expected closing statement token");const l=[];for(;a(r.OpenStatement,r.EndFor)&&a(r.OpenStatement,r.Else);)l.push(s());const c=[];if(i(r.OpenStatement,r.Else))for(++n,++n,o(r.CloseStatement,"Expected closing statement token");a(r.OpenStatement,r.EndFor);)c.push(s());return new m(e,t,l,c)}(),o(r.OpenStatement,"Expected {% token"),o(r.EndFor,"Expected endfor token"),o(r.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${e[n].type}`)}return t}();case r.OpenExpression:return function(){o(r.OpenExpression,"Expected opening expression token");const e=u();return o(r.CloseExpression,"Expected closing expression token"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[n].type}`)}}function a(...t){return n+t.length<=e.length&&t.some(((t,r)=>t!==e[n+r].type))}function i(...t){return n+t.length<=e.length&&t.every(((t,r)=>t===e[n+r].type))}function l(){const e=u();if(i(r.Equals)){++n;const t=l();return new _(e,t)}return e}function c(){const t=u();o(r.CloseStatement,"Expected closing statement token");const a=[],l=[];for(;e[n]?.type!==r.OpenStatement||e[n+1]?.type!==r.ElseIf&&e[n+1]?.type!==r.Else&&e[n+1]?.type!==r.EndIf;)a.push(s());if(e[n]?.type===r.OpenStatement&&e[n+1]?.type!==r.EndIf)if(++n,i(r.ElseIf))o(r.ElseIf,"Expected elseif token"),l.push(c());else for(o(r.Else,"Expected else token"),o(r.CloseStatement,"Expected closing statement token");e[n]?.type!==r.OpenStatement||e[n+1]?.type!==r.EndIf;)l.push(s());return new h(t,a,l)}function d(e=!1){const t=e?q:u,o=[t()],s=i(r.Comma);for(;s&&(++n,o.push(t()),i(r.Comma)););return s?new C(o):o[0]}function u(){return function(){const e=g();if(i(r.If)){++n;const t=g();if(i(r.Else)){++n;const r=g();return new h(t,[e],[r])}return new A(e,t)}return e}()}function g(){let t=T();for(;i(r.Or);){const r=e[n];++n;const o=T();t=new v(r,t,o)}return t}function T(){let t=B();for(;i(r.And);){const r=e[n];++n;const o=B();t=new v(r,t,o)}return t}function B(){let t;for(;i(r.Not);){const r=e[n];++n;const o=B();t=new L(r,o)}return t??function(){let t=N();for(;i(r.ComparisonBinaryOperator)||i(r.In)||i(r.NotIn);){const r=e[n];++n;const o=N();t=new v(r,t,o)}return t}()}function N(){let t=R();for(;i(r.AdditiveBinaryOperator);){const r=e[n];++n;const o=R();t=new v(r,t,o)}return t}function O(){const t=function(){let t=q();for(;i(r.Dot)||i(r.OpenSquareBracket);){const s=e[n];let a;++n;const i=s.type!==r.Dot;if(i)a=j(),o(r.CloseSquareBracket,"Expected closing square bracket");else if(a=q(),"Identifier"!==a.type)throw new SyntaxError("Expected identifier following dot operator");t=new M(t,a,i)}return t}();return i(r.OpenParen)?D(t):t}function D(e){let t=new w(e,V());return i(r.OpenParen)&&(t=D(t)),t}function V(){o(r.OpenParen,"Expected opening parenthesis for arguments list");const e=function(){const e=[];for(;!i(r.CloseParen);){let t=u();if(i(r.Equals)){if(++n,!(t instanceof b))throw new SyntaxError("Expected identifier for keyword argument");const e=u();t=new I(t,e)}e.push(t),i(r.Comma)&&++n}return e}();return o(r.CloseParen,"Expected closing parenthesis for arguments list"),e}function j(){const e=[];let t=!1;for(;!i(r.CloseSquareBracket);)i(r.Colon)?(e.push(void 0),++n,t=!0):(e.push(u()),i(r.Colon)&&(++n,t=!0));if(0===e.length)throw new SyntaxError("Expected at least one argument for member/slice expression");if(t){if(e.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new z(...e)}return e[0]}function R(){let t=G();for(;i(r.MultiplicativeBinaryOperator);){const r=e[n];++n;const o=G();t=new v(r,t,o)}return t}function G(){let e=function(){let e=O();for(;i(r.Pipe);){++n;let t=q();if(!(t instanceof b))throw new SyntaxError("Expected identifier for the filter");i(r.OpenParen)&&(t=D(t)),e=new S(e,t)}return e}();for(;i(r.Is);){++n;const t=i(r.Not);t&&++n;let o=q();if(o instanceof k&&(o=new b(o.value.toString())),!(o instanceof b))throw new SyntaxError("Expected identifier for the test");e=new E(e,t,o)}return e}function q(){const t=e[n];switch(t.type){case r.NumericLiteral:return++n,new x(Number(t.value));case r.StringLiteral:return++n,new y(t.value);case r.BooleanLiteral:return++n,new k("true"===t.value.toLowerCase());case r.Identifier:return++n,new b(t.value);case r.OpenParen:{++n;const t=d();if(e[n].type!==r.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${e[n].type} instead`);return++n,t}case r.OpenSquareBracket:{++n;const e=[];for(;!i(r.CloseSquareBracket);)e.push(u()),i(r.Comma)&&++n;return++n,new F(e)}case r.OpenCurlyBracket:{++n;const e=new Map;for(;!i(r.CloseCurlyBracket);){const t=u();o(r.Colon,"Expected colon between key and value in object literal");const s=u();e.set(t,s),i(r.Comma)&&++n}return++n,new P(e)}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;n<e.length;)t.body.push(s());return t}function N(e,t,n=1){void 0===t&&(t=e,e=0);const r=[];for(let o=e;o<t;o+=n)r.push(o);return r}function O(e,t,n,r=1){const o=Math.sign(r);o>=0?(t=(t??=0)<0?Math.max(e.length+t,0):Math.min(t,e.length),n=(n??=e.length)<0?Math.max(e.length+n,0):Math.min(n,e.length)):(t=(t??=e.length-1)<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),n=(n??=-1)<-1?Math.max(e.length+n,-1):Math.min(n,e.length-1));const s=[];for(let a=t;o*a<o*n;a+=r)s.push(e[a]);return s}function D(e){return e.replace(/\b\w/g,(e=>e.toUpperCase()))}var V=class{type="RuntimeValue";value;builtins=new Map;constructor(e=void 0){this.value=e}__bool__(){return new G(!!this.value)}},j=class extends V{type="NumericValue"},R=class extends V{type="StringValue";builtins=new Map([["upper",new X((()=>new R(this.value.toUpperCase())))],["lower",new X((()=>new R(this.value.toLowerCase())))],["strip",new X((()=>new R(this.value.trim())))],["title",new X((()=>new R(D(this.value))))],["length",new j(this.value.length)]])},G=class extends V{type="BooleanValue"},q=class extends V{type="ObjectValue";__bool__(){return new G(this.value.size>0)}builtins=new Map([["get",new X((([e,t])=>{if(!(e instanceof R))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??t??new Q}))],["items",new X((()=>new W(Array.from(this.value.entries()).map((([e,t])=>new W([new R(e),t]))))))]])},$=class extends q{type="KeywordArgumentsValue"},W=class extends V{type="ArrayValue";builtins=new Map([["length",new j(this.value.length)]]);__bool__(){return new G(this.value.length>0)}},U=class extends W{type="TupleValue"},X=class extends V{type="FunctionValue"},Q=class extends V{type="NullValue"},H=class extends V{type="UndefinedValue"},Y=class{constructor(e){this.parent=e}variables=new Map([["namespace",new X((e=>{if(0===e.length)return new q(new Map);if(1!==e.length||!(e[0]instanceof q))throw new Error("`namespace` expects either zero arguments or a single object argument");return e[0]}))]]);tests=new Map([["boolean",e=>"BooleanValue"===e.type],["callable",e=>e instanceof X],["odd",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "odd" to type: ${e.type}`);return e.value%2!=0}],["even",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "even" to type: ${e.type}`);return e.value%2==0}],["false",e=>"BooleanValue"===e.type&&!e.value],["true",e=>"BooleanValue"===e.type&&e.value],["string",e=>"StringValue"===e.type],["number",e=>"NumericValue"===e.type],["integer",e=>"NumericValue"===e.type&&Number.isInteger(e.value)],["iterable",e=>e instanceof W||e instanceof R],["lower",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toLowerCase()}],["upper",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toUpperCase()}],["none",e=>"NullValue"===e.type],["defined",e=>"UndefinedValue"!==e.type],["undefined",e=>"UndefinedValue"===e.type],["equalto",(e,t)=>e.value===t.value],["eq",(e,t)=>e.value===t.value]]);set(e,t){return this.declareVariable(e,J(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){return this.variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new H}catch{return new H}}},K=class{global;constructor(e){this.global=e??new Y}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const n=this.evaluate(e.left,t);switch(e.operator.value){case"and":return n.__bool__().value?this.evaluate(e.right,t):n;case"or":return n.__bool__().value?n:this.evaluate(e.right,t)}const r=this.evaluate(e.right,t);switch(e.operator.value){case"==":return new G(n.value==r.value);case"!=":return new G(n.value!=r.value)}if(n instanceof H||r instanceof H)throw new Error("Cannot perform operation on undefined values");if(n instanceof Q||r instanceof Q)throw new Error("Cannot perform operation on null values");if(n instanceof j&&r instanceof j)switch(e.operator.value){case"+":return new j(n.value+r.value);case"-":return new j(n.value-r.value);case"*":return new j(n.value*r.value);case"/":return new j(n.value/r.value);case"%":return new j(n.value%r.value);case"<":return new G(n.value<r.value);case">":return new G(n.value>r.value);case">=":return new G(n.value>=r.value);case"<=":return new G(n.value<=r.value)}else if(n instanceof W&&r instanceof W){if("+"===e.operator.value)return new W(n.value.concat(r.value))}else if(r instanceof W){const t=void 0!==r.value.find((e=>e.value===n.value));switch(e.operator.value){case"in":return new G(t);case"not in":return new G(!t)}}if((n instanceof R||r instanceof R)&&"+"===e.operator.value)return new R(n.value.toString()+r.value.toString());if(n instanceof R&&r instanceof R)switch(e.operator.value){case"in":return new G(r.value.includes(n.value));case"not in":return new G(!r.value.includes(n.value))}if(n instanceof R&&r instanceof q)switch(e.operator.value){case"in":return new G(r.value.has(n.value));case"not in":return new G(!r.value.has(n.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${n.type} and ${r.type}`)}evaluateArguments(e,t){const n=[],r=new Map;for(const o of e)if("KeywordArgumentExpression"===o.type){const e=o;r.set(e.key.value,this.evaluate(e.value,t))}else{if(r.size>0)throw new Error("Positional arguments must come before keyword arguments");n.push(this.evaluate(o,t))}return[n,r]}evaluateFilterExpression(e,t){const n=this.evaluate(e.operand,t);if("Identifier"===e.filter.type){const t=e.filter;if("tojson"===t.value)return new R(Z(n));if(n instanceof W)switch(t.value){case"list":return n;case"first":return n.value[0];case"last":return n.value[n.value.length-1];case"length":return new j(n.value.length);case"reverse":return new W(n.value.reverse());case"sort":return new W(n.value.sort(((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case"NumericValue":return e.value-t.value;case"StringValue":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}})));default:throw new Error(`Unknown ArrayValue filter: ${t.value}`)}else if(n instanceof R)switch(t.value){case"length":return new j(n.value.length);case"upper":return new R(n.value.toUpperCase());case"lower":return new R(n.value.toLowerCase());case"title":return new R(D(n.value));case"capitalize":return new R(n.value.charAt(0).toUpperCase()+n.value.slice(1));case"trim":return new R(n.value.trim());case"indent":return new R(n.value.split("\n").map(((e,t)=>0===t||0===e.length?e:"    "+e)).join("\n"));case"string":return n;default:throw new Error(`Unknown StringValue filter: ${t.value}`)}else{if(n instanceof j){if("abs"===t.value)return new j(Math.abs(n.value));throw new Error(`Unknown NumericValue filter: ${t.value}`)}if(n instanceof q)switch(t.value){case"items":return new W(Array.from(n.value.entries()).map((([e,t])=>new W([new R(e),t]))));case"length":return new j(n.value.size);default:throw new Error(`Unknown ObjectValue filter: ${t.value}`)}}throw new Error(`Cannot apply filter "${t.value}" to type: ${n.type}`)}if("CallExpression"===e.filter.type){const r=e.filter;if("Identifier"!==r.callee.type)throw new Error(`Unknown filter: ${r.callee.type}`);const o=r.callee.value;if("tojson"===o){const[,e]=this.evaluateArguments(r.args,t),o=e.get("indent")??new Q;if(!(o instanceof j||o instanceof Q))throw new Error("If set, indent must be a number");return new R(Z(n,o.value))}if(n instanceof W){switch(o){case"selectattr":{if(n.value.some((e=>!(e instanceof q))))throw new Error("`selectattr` can only be applied to array of objects");if(r.args.some((e=>"StringLiteral"!==e.type)))throw new Error("arguments of `selectattr` must be strings");const[e,o,s]=r.args.map((e=>this.evaluate(e,t)));let a;if(o){const e=t.tests.get(o.value);if(!e)throw new Error(`Unknown test: ${o.value}`);a=e}else a=(...e)=>e[0].__bool__().value;const i=n.value.filter((t=>{const n=t.value.get(e.value);return!!n&&a(n,s)}));return new W(i)}case"map":{const[,e]=this.evaluateArguments(r.args,t);if(e.has("attribute")){const t=e.get("attribute");if(!(t instanceof R))throw new Error("attribute must be a string");const r=e.get("default"),o=n.value.map((e=>{if(!(e instanceof q))throw new Error("items in map must be an object");return e.value.get(t.value)??r??new H}));return new W(o)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${o}`)}if(n instanceof R){if("indent"===o){const[e,o]=this.evaluateArguments(r.args,t),s=e.at(0)??o.get("width")??new j(4);if(!(s instanceof j))throw new Error("width must be a number");const a=e.at(1)??o.get("first")??new G(!1),i=e.at(2)??o.get("blank")??new G(!1),l=n.value.split("\n"),c=" ".repeat(s.value),d=l.map(((e,t)=>!a.value&&0===t||!i.value&&0===e.length?e:c+e));return new R(d.join("\n"))}throw new Error(`Unknown StringValue filter: ${o}`)}throw new Error(`Cannot apply filter "${o}" to type: ${n.type}`)}throw new Error(`Unknown filter: ${e.filter.type}`)}evaluateTestExpression(e,t){const n=this.evaluate(e.operand,t),r=t.tests.get(e.test.value);if(!r)throw new Error(`Unknown test: ${e.test.value}`);const o=r(n);return new G(e.negate?!o:o)}evaluateUnaryExpression(e,t){const n=this.evaluate(e.argument,t);if("not"===e.operator.value)return new G(!n.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let n="";for(const r of e){const e=this.evaluate(r,t);"NullValue"!==e.type&&"UndefinedValue"!==e.type&&(n+=e.value)}return new R(n)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const[n,r]=this.evaluateArguments(e.args,t);r.size>0&&n.push(new $(r));const o=this.evaluate(e.callee,t);if("FunctionValue"!==o.type)throw new Error(`Cannot call something that is not a function: got ${o.type}`);return o.value(n,t)}evaluateSliceExpression(e,t,n){if(!(e instanceof W||e instanceof R))throw new Error("Slice object must be an array or string");const r=this.evaluate(t.start,n),o=this.evaluate(t.stop,n),s=this.evaluate(t.step,n);if(!(r instanceof j||r instanceof H))throw new Error("Slice start must be numeric or undefined");if(!(o instanceof j||o instanceof H))throw new Error("Slice stop must be numeric or undefined");if(!(s instanceof j||s instanceof H))throw new Error("Slice step must be numeric or undefined");return e instanceof W?new W(O(e.value,r.value,o.value,s.value)):new R(O(Array.from(e.value),r.value,o.value,s.value).join(""))}evaluateMemberExpression(e,t){const n=this.evaluate(e.object,t);let r,o;if(e.computed){if("SliceExpression"===e.property.type)return this.evaluateSliceExpression(n,e.property,t);r=this.evaluate(e.property,t)}else r=new R(e.property.value);if(n instanceof q){if(!(r instanceof R))throw new Error(`Cannot access property with non-string: got ${r.type}`);o=n.value.get(r.value)??n.builtins.get(r.value)}else if(n instanceof W||n instanceof R)if(r instanceof j)o=n.value.at(r.value),n instanceof R&&(o=new R(n.value.at(r.value)));else{if(!(r instanceof R))throw new Error(`Cannot access property with non-string/non-number: got ${r.type}`);o=n.builtins.get(r.value)}else{if(!(r instanceof R))throw new Error(`Cannot access property with non-string: got ${r.type}`);o=n.builtins.get(r.value)}return o instanceof V?o:new H}evaluateSet(e,t){const n=this.evaluate(e.value,t);if("Identifier"===e.assignee.type){const r=e.assignee.value;t.setVariable(r,n)}else{if("MemberExpression"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);{const r=e.assignee,o=this.evaluate(r.object,t);if(!(o instanceof q))throw new Error("Cannot assign to member of non-object");if("Identifier"!==r.property.type)throw new Error("Cannot assign to member with non-identifier property");o.value.set(r.property.value,n)}}return new Q}evaluateIf(e,t){const n=this.evaluate(e.test,t);return this.evaluateBlock(n.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const n=new Y(t);let r,o;if("SelectExpression"===e.iterable.type){const t=e.iterable;o=this.evaluate(t.iterable,n),r=t.test}else o=this.evaluate(e.iterable,n);if(!(o instanceof W))throw new Error(`Expected iterable type in for loop: got ${o.type}`);const s=[],a=[];for(let t=0;t<o.value.length;++t){const i=new Y(n),l=o.value[t];let c;if("Identifier"===e.loopvar.type)c=t=>t.setVariable(e.loopvar.value,l);else{if("TupleLiteral"!==e.loopvar.type)throw new Error(`Invalid loop variable(s): ${e.loopvar.type}`);{const t=e.loopvar;if("ArrayValue"!==l.type)throw new Error(`Cannot unpack non-iterable type: ${l.type}`);const n=l;if(t.value.length!==n.value.length)throw new Error(`Too ${t.value.length>n.value.length?"few":"many"} items to unpack`);c=e=>{for(let r=0;r<t.value.length;++r){if("Identifier"!==t.value[r].type)throw new Error(`Cannot unpack non-identifier type: ${t.value[r].type}`);e.setVariable(t.value[r].value,n.value[r])}}}}if(r){c(i);if(!this.evaluate(r,i).__bool__().value)continue}s.push(l),a.push(c)}let i="",l=!0;for(let t=0;t<s.length;++t){const r=new Map([["index",new j(t+1)],["index0",new j(t)],["revindex",new j(s.length-t)],["revindex0",new j(s.length-t-1)],["first",new G(0===t)],["last",new G(t===s.length-1)],["length",new j(s.length)],["previtem",t>0?s[t-1]:new H],["nextitem",t<s.length-1?s[t+1]:new H]]);n.setVariable("loop",new q(r)),a[t](n);i+=this.evaluateBlock(e.body,n).value,l=!1}if(l){i+=this.evaluateBlock(e.defaultBlock,n).value}return new R(i)}evaluateMacro(e,t){return t.setVariable(e.name.value,new X(((t,n)=>{const r=new Y(n);let o;t=t.slice(),"KeywordArgumentsValue"===t.at(-1)?.type&&(o=t.pop());for(let n=0;n<e.args.length;++n){const s=e.args[n],a=t[n];if("Identifier"===s.type){const e=s;if(!a)throw new Error(`Missing positional argument: ${e.value}`);r.setVariable(e.value,a)}else{if("KeywordArgumentExpression"!==s.type)throw new Error(`Unknown argument type: ${s.type}`);{const e=s,t=a??o?.value.get(e.key.value)??this.evaluate(e.value,r);r.setVariable(e.key.value,t)}}}return this.evaluateBlock(e.body,r)}))),new Q}evaluate(e,t){if(void 0===e)return new H;switch(e.type){case"Program":return this.evalProgram(e,t);case"Set":return this.evaluateSet(e,t);case"If":return this.evaluateIf(e,t);case"For":return this.evaluateFor(e,t);case"Macro":return this.evaluateMacro(e,t);case"NumericLiteral":return new j(Number(e.value));case"StringLiteral":return new R(e.value);case"BooleanLiteral":return new G(e.value);case"ArrayLiteral":return new W(e.value.map((e=>this.evaluate(e,t))));case"TupleLiteral":return new U(e.value.map((e=>this.evaluate(e,t))));case"ObjectLiteral":{const n=new Map;for(const[r,o]of e.value){const e=this.evaluate(r,t);if(!(e instanceof R))throw new Error(`Object keys must be strings: got ${e.type}`);n.set(e.value,this.evaluate(o,t))}return new q(n)}case"Identifier":return this.evaluateIdentifier(e,t);case"CallExpression":return this.evaluateCallExpression(e,t);case"MemberExpression":return this.evaluateMemberExpression(e,t);case"UnaryExpression":return this.evaluateUnaryExpression(e,t);case"BinaryExpression":return this.evaluateBinaryExpression(e,t);case"FilterExpression":return this.evaluateFilterExpression(e,t);case"TestExpression":return this.evaluateTestExpression(e,t);default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function J(e){switch(typeof e){case"number":return new j(e);case"string":return new R(e);case"boolean":return new G(e);case"undefined":return new H;case"object":return null===e?new Q:Array.isArray(e)?new W(e.map(J)):new q(new Map(Object.entries(e).map((([e,t])=>[e,J(t)]))));case"function":return new X(((t,n)=>J(e(...t.map((e=>e.value)))??null)));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}function Z(e,t,n){const r=n??0;switch(e.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(e.value);case"ArrayValue":case"ObjectValue":{const n=t?" ".repeat(t):"",o="\n"+n.repeat(r),s=o+n;if("ArrayValue"===e.type){const n=e.value.map((e=>Z(e,t,r+1)));return t?`[${s}${n.join(`,${s}`)}${o}]`:`[${n.join(", ")}]`}{const n=Array.from(e.value.entries()).map((([e,n])=>{const o=`"${e}": ${Z(n,t,r+1)}`;return t?`${s}${o}`:o}));return t?`{${n.join(",")}${o}}`:`{${n.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${e.type}`)}}var ee=class{parsed;constructor(e){const t=d(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=B(t)}render(e){const t=new Y;t.set("false",!1),t.set("true",!0),t.set("raise_exception",(e=>{throw new Error(e)})),t.set("range",N);for(const[n,r]of Object.entries(e))t.set(n,r);return new K(t).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":
/*!******************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/backend-impl.js ***!
  \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{registerBackend:()=>s,resolveBackendAndExecutionProviders:()=>i});const r=new Map,o=[],s=(e,t,n)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createInferenceSessionHandler)throw new TypeError("not a valid backend");{const s=r.get(e);if(void 0===s)r.set(e,{backend:t,priority:n});else{if(s.priority>n)return;if(s.priority===n&&s.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){const t=o.indexOf(e);-1!==t&&o.splice(t,1);for(let t=0;t<o.length;t++)if(r.get(o[t]).priority<=n)return void o.splice(t,0,e);o.push(e)}}},a=async e=>{const t=r.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{const n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(e){return n||(t.error=`${e}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},i=async e=>{const t=e.executionProviders||[],n=t.map((e=>"string"==typeof e?e:e.name)),r=0===n.length?o:n;let s;const i=[],l=new Set;for(const e of r){const t=await a(e);"string"==typeof t?i.push({name:e,err:t}):(s||(s=t),s===t&&l.add(e))}if(!s)throw new Error(`no available backend found. ERR: ${i.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`);for(const{name:e,err:t}of i)n.includes(e)&&console.warn(`removing requested execution provider "${e}" from session options because it is not available: ${t}`);const c=t.filter((e=>l.has("string"==typeof e?e:e.name)));return[s,new Proxy(e,{get:(e,t)=>"executionProviders"===t?c:Reflect.get(e,t)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":
/*!*************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/backend.js ***!
  \*************************************************************/(e,t,n)=>{n.r(t),n.d(t,{registerBackend:()=>r.registerBackend});var r=n(/*! ./backend-impl.js */"./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":
/*!**************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/env-impl.js ***!
  \**************************************************************/(e,t,n)=>{n.r(t),n.d(t,{env:()=>s});var r=n(/*! ./version.js */"./node_modules/onnxruntime-common/dist/esm/version.js");let o="warning";const s={wasm:{},webgl:{},webgpu:{},versions:{common:r.version},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);o=e}},get logLevel(){return o}};Object.defineProperty(s,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":
/*!*********************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/env.js ***!
  \*********************************************************/(e,t,n)=>{n.r(t),n.d(t,{env:()=>r});const r=n(/*! ./env-impl.js */"./node_modules/onnxruntime-common/dist/esm/env-impl.js").env},"./node_modules/onnxruntime-common/dist/esm/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/index.js ***!
  \***********************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>s.InferenceSession,TRACE:()=>i.TRACE,TRACE_FUNC_BEGIN:()=>i.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>i.TRACE_FUNC_END,Tensor:()=>a.Tensor,TrainingSession:()=>l.TrainingSession,env:()=>o.env,registerBackend:()=>r.registerBackend});var r=n(/*! ./backend.js */"./node_modules/onnxruntime-common/dist/esm/backend.js"),o=n(/*! ./env.js */"./node_modules/onnxruntime-common/dist/esm/env.js"),s=n(/*! ./inference-session.js */"./node_modules/onnxruntime-common/dist/esm/inference-session.js"),a=n(/*! ./tensor.js */"./node_modules/onnxruntime-common/dist/esm/tensor.js"),i=(n(/*! ./tensor-conversion.js */"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),n(/*! ./tensor-factory.js */"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js"),n(/*! ./trace.js */"./node_modules/onnxruntime-common/dist/esm/trace.js")),l=(n(/*! ./onnx-model.js */"./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),n(/*! ./onnx-value.js */"./node_modules/onnxruntime-common/dist/esm/onnx-value.js"),n(/*! ./training-session.js */"./node_modules/onnxruntime-common/dist/esm/training-session.js"))},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":
/*!****************************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js ***!
  \****************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>a});var r=n(/*! ./backend-impl.js */"./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),o=n(/*! ./tensor.js */"./node_modules/onnxruntime-common/dist/esm/tensor.js"),s=n(/*! ./trace.js */"./node_modules/onnxruntime-common/dist/esm/trace.js");class a{constructor(e){this.handler=e}async run(e,t,n){(0,s.TRACE_FUNC_BEGIN)();const r={};let a={};if("object"!=typeof e||null===e||e instanceof o.Tensor||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof o.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)a=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else{let e=!1;const s=Object.getOwnPropertyNames(t);for(const n of this.outputNames)if(-1!==s.indexOf(n)){const s=t[n];(null===s||s instanceof o.Tensor)&&(e=!0,i=!1,r[n]=s)}if(e){if("object"==typeof n&&null!==n)a=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else a=t}}else if(void 0!==t)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const t of this.inputNames)if(void 0===e[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(i)for(const e of this.outputNames)r[e]=null;const l=await this.handler.run(e,r,a),c={};for(const e in l)if(Object.hasOwnProperty.call(l,e)){const t=l[e];t instanceof o.Tensor?c[e]=t:c[e]=new o.Tensor(t.type,t.data,t.dims)}return(0,s.TRACE_FUNC_END)(),c}async release(){return this.handler.dispose()}static async create(e,t,n,o){let i;(0,s.TRACE_FUNC_BEGIN)();let l={};if("string"==typeof e){if(i=e,"object"==typeof t&&null!==t)l=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,"object"==typeof t&&null!==t)l=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else{if(!(e instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&e instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const r=e;let s=0,a=e.byteLength;if("object"==typeof t&&null!==t)l=t;else if("number"==typeof t){if(s=t,!Number.isSafeInteger(s))throw new RangeError("'byteOffset' must be an integer.");if(s<0||s>=r.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(a=e.byteLength-s,"number"==typeof n){if(a=n,!Number.isSafeInteger(a))throw new RangeError("'byteLength' must be an integer.");if(a<=0||s+a>r.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${r.byteLength-s}].`);if("object"==typeof o&&null!==o)l=o;else if(void 0!==o)throw new TypeError("'options' must be an object.")}else if(void 0!==n)throw new TypeError("'byteLength' must be a number.")}else if(void 0!==t)throw new TypeError("'options' must be an object.");i=new Uint8Array(r,s,a)}}const[c,d]=await(0,r.resolveBackendAndExecutionProviders)(l),u=await c.createInferenceSessionHandler(i,d);return(0,s.TRACE_FUNC_END)(),new a(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":
/*!***********************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/inference-session.js ***!
  \***********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>r});const r=n(/*! ./inference-session-impl.js */"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js").InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":
/*!****************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/onnx-model.js ***!
  \****************************************************************/(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":
/*!****************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/onnx-value.js ***!
  \****************************************************************/(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":
/*!****************************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js ***!
  \****************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{tensorToDataURL:()=>r,tensorToImageData:()=>o});const r=(e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];const r=n.getContext("2d");if(null!=r){let o,s;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(o=e.dims[2],s=e.dims[3]):(o=e.dims[3],s=e.dims[2]);const a=void 0!==t?.format?t.format:"RGB",i=t?.norm;let l,c;void 0===i||void 0===i.mean?l=[255,255,255,255]:"number"==typeof i.mean?l=[i.mean,i.mean,i.mean,i.mean]:(l=[i.mean[0],i.mean[1],i.mean[2],0],void 0!==i.mean[3]&&(l[3]=i.mean[3])),void 0===i||void 0===i.bias?c=[0,0,0,0]:"number"==typeof i.bias?c=[i.bias,i.bias,i.bias,i.bias]:(c=[i.bias[0],i.bias[1],i.bias[2],0],void 0!==i.bias[3]&&(c[3]=i.bias[3]));const d=s*o;let u=0,p=d,h=2*d,m=-1;"RGBA"===a?(u=0,p=d,h=2*d,m=3*d):"RGB"===a?(u=0,p=d,h=2*d):"RBG"===a&&(u=0,h=d,p=2*d);for(let t=0;t<s;t++)for(let n=0;n<o;n++){const o=(e.data[u++]-c[0])*l[0],s=(e.data[p++]-c[1])*l[1],a=(e.data[h++]-c[2])*l[2],i=-1===m?255:(e.data[m++]-c[3])*l[3];r.fillStyle="rgba("+o+","+s+","+a+","+i+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},o=(e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let r;if(null==n)throw new Error("Can not access image data");{let o,s,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(o=e.dims[2],s=e.dims[1],a=e.dims[3]):(o=e.dims[3],s=e.dims[2],a=e.dims[1]);const i=void 0!==t&&void 0!==t.format?t.format:"RGB",l=t?.norm;let c,d;void 0===l||void 0===l.mean?c=[255,255,255,255]:"number"==typeof l.mean?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],void 0!==l.mean[3]&&(c[3]=l.mean[3])),void 0===l||void 0===l.bias?d=[0,0,0,0]:"number"==typeof l.bias?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(d[3]=l.bias[3]));const u=s*o;if(void 0!==t&&(void 0!==t.format&&4===a&&"RGBA"!==t.format||3===a&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");const p=4;let h=0,m=1,_=2,f=3,g=0,M=u,w=2*u,b=-1;"RGBA"===i?(g=0,M=u,w=2*u,b=3*u):"RGB"===i?(g=0,M=u,w=2*u):"RBG"===i&&(g=0,w=u,M=2*u),r=n.createImageData(o,s);for(let t=0;t<s*o;h+=p,m+=p,_+=p,f+=p,t++)r.data[h]=(e.data[g++]-d[0])*c[0],r.data[m]=(e.data[M++]-d[1])*c[1],r.data[_]=(e.data[w++]-d[2])*c[2],r.data[f]=-1===b?255:(e.data[b++]-d[3])*c[3]}return r}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":
/*!***********************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js ***!
  \***********************************************************************/(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":
/*!*************************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js ***!
  \*************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{bufferToTensor:()=>o,tensorFromGpuBuffer:()=>i,tensorFromImage:()=>s,tensorFromPinnedBuffer:()=>l,tensorFromTexture:()=>a});var r=n(/*! ./tensor-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const o=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:n,width:o}=t,s=t.norm??{mean:255,bias:0};let a,i;a="number"==typeof s.mean?[s.mean,s.mean,s.mean,s.mean]:[s.mean[0],s.mean[1],s.mean[2],s.mean[3]??255],i="number"==typeof s.bias?[s.bias,s.bias,s.bias,s.bias]:[s.bias[0],s.bias[1],s.bias[2],s.bias[3]??0];const l=void 0!==t.format?t.format:"RGBA",c=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",d=n*o,u="RGBA"===c?new Float32Array(4*d):new Float32Array(3*d);let p=4,h=0,m=1,_=2,f=3,g=0,M=d,w=2*d,b=-1;"RGB"===l&&(p=3,h=0,m=1,_=2,f=-1),"RGBA"===c?b=3*d:"RBG"===c?(g=0,w=d,M=2*d):"BGR"===c&&(w=0,M=d,g=2*d);for(let t=0;t<d;t++,h+=p,_+=p,m+=p,f+=p)u[g++]=(e[h]+i[0])/a[0],u[M++]=(e[m]+i[1])/a[1],u[w++]=(e[_]+i[2])/a[2],-1!==b&&-1!==f&&(u[b++]=(e[f]+i[3])/a[3]);return"RGBA"===c?new r.Tensor("float32",u,[1,4,n,o]):new r.Tensor("float32",u,[1,3,n,o])},s=async(e,t)=>{const n="undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,r="undefined"!=typeof ImageData&&e instanceof ImageData,s="undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap,a="string"==typeof e;let i,l=t??{};const c=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},d=e=>e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(n){const n=c();n.width=e.width,n.height=e.height;const r=d(n);if(null==r)throw new Error("Can not access image data");{let n=e.height,o=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(n=t.resizedHeight,o=t.resizedWidth),void 0!==t){if(l=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");l.tensorFormat="RGBA",l.height=n,l.width=o}else l.tensorFormat="RGBA",l.height=n,l.width=o;r.drawImage(e,0,0),i=r.getImageData(0,0,o,n).data}}else{if(!r){if(s){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");const n=c();n.width=e.width,n.height=e.height;const r=d(n);if(null!=r){const t=e.height,n=e.width;return r.drawImage(e,0,0,n,t),i=r.getImageData(0,0,n,t).data,l.height=t,l.width=n,o(i,l)}throw new Error("Can not access image data")}if(a)return new Promise(((t,n)=>{const r=c(),s=d(r);if(!e||!s)return n();const a=new Image;a.crossOrigin="Anonymous",a.src=e,a.onload=()=>{r.width=a.width,r.height=a.height,s.drawImage(a,0,0,r.width,r.height);const e=s.getImageData(0,0,r.width,r.height);l.height=r.height,l.width=r.width,t(o(e.data,l))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let n,r;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(n=t.resizedHeight,r=t.resizedWidth):(n=e.height,r=e.width),void 0!==t&&(l=t),l.format="RGBA",l.height=n,l.width=r,void 0!==t){const t=c();t.width=r,t.height=n;const o=d(t);if(null==o)throw new Error("Can not access image data");o.putImageData(e,0,0),i=o.getImageData(0,0,r,n).data}else i=e.data}}if(void 0!==i)return o(i,l);throw new Error("Input data provided is not supported - aborted tensor creation")},a=(e,t)=>{const{width:n,height:o,download:s,dispose:a}=t,i=[1,o,n,4];return new r.Tensor({location:"texture",type:"float32",texture:e,dims:i,download:s,dispose:a})},i=(e,t)=>{const{dataType:n,dims:o,download:s,dispose:a}=t;return new r.Tensor({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:o,download:s,dispose:a})},l=(e,t,n)=>new r.Tensor({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":
/*!********************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-factory.js ***!
  \********************************************************************/(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":
/*!******************************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js ***!
  \******************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>o,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>r,checkTypedArray:()=>a});const r=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),o=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let s=!1;const a=()=>{if(!s){s=!0;const e="undefined"!=typeof BigInt64Array&&BigInt64Array.from,t="undefined"!=typeof BigUint64Array&&BigUint64Array.from,n="undefined"!=typeof Float16Array&&Float16Array.from;e&&(r.set("int64",BigInt64Array),o.set(BigInt64Array,"int64")),t&&(r.set("uint64",BigUint64Array),o.set(BigUint64Array,"uint64")),n?(r.set("float16",Float16Array),o.set(Float16Array,"float16")):r.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":
/*!*****************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-impl.js ***!
  \*****************************************************************/(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>i});var r=n(/*! ./tensor-conversion-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),o=n(/*! ./tensor-factory-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),s=n(/*! ./tensor-impl-type-mapping.js */"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),a=n(/*! ./tensor-utils-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class i{constructor(e,t,n){let r,o;if((0,s.checkTypedArray)(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,o=e.dims,e.location){case"cpu-pinned":{const t=s.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,i;if("string"==typeof e)if(r=e,i=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const n=s.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");a="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else{if(!(t instanceof n))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);a=t}}else if(i=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)r="string",a=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",a=Uint8Array.from(e)}}else{const t=s.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,a=e}if(void 0===i)i=[a.length];else if(!Array.isArray(i))throw new TypeError("A tensor's dims must be a number array");o=i,this.cpuData=a,this.dataLocation="cpu"}const i=(0,a.calculateSize)(o);if(this.cpuData&&i!==this.cpuData.length)throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=o,this.size=i}static async fromImage(e,t){return(0,o.tensorFromImage)(e,t)}static fromTexture(e,t){return(0,o.tensorFromTexture)(e,t)}static fromGpuBuffer(e,t){return(0,o.tensorFromGpuBuffer)(e,t)}static fromPinnedBuffer(e,t,n){return(0,o.tensorFromPinnedBuffer)(e,t,n)}toDataURL(e){return(0,r.tensorToDataURL)(this,e)}toImageData(e){return(0,r.tensorToImageData)(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,a.tensorReshape)(this,e)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":
/*!***********************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js ***!
  \***********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{calculateSize:()=>o,tensorReshape:()=>s});var r=n(/*! ./tensor-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const o=e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},s=(e,t)=>{switch(e.location){case"cpu":return new r.Tensor(e.type,e.data,t);case"cpu-pinned":return new r.Tensor({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new r.Tensor({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new r.Tensor({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":
/*!************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/tensor.js ***!
  \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>r});const r=n(/*! ./tensor-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js").Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":
/*!***********************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/trace.js ***!
  \***********************************************************/(e,t,n)=>{n.r(t),n.d(t,{TRACE:()=>o,TRACE_FUNC_BEGIN:()=>a,TRACE_FUNC_END:()=>i});var r=n(/*! ./env-impl.js */"./node_modules/onnxruntime-common/dist/esm/env-impl.js");const o=(e,t)=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&console.timeStamp(`${e}::ORT::${t}`)},s=(e,t)=>{const n=(new Error).stack?.split(/\r\n|\r|\n/g)||[];let r=!1;for(let s=0;s<n.length;s++){if(r&&!n[s].includes("TRACE_FUNC")){let r=`FUNC_${e}::${n[s].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void o("CPU",r)}n[s].includes("TRACE_FUNC")&&(r=!0)}},a=e=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&s("BEGIN",e)},i=e=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&s("END",e)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":
/*!***************************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/training-session-impl.js ***!
  \***************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{TrainingSession:()=>s});var r=n(/*! ./backend-impl.js */"./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),o=n(/*! ./tensor.js */"./node_modules/onnxruntime-common/dist/esm/tensor.js");class s{constructor(e,t,n){this.handler=e,this.hasOptimizerModel=t,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,t){const n=e.evalModel||"",o=e.optimizerModel||"",a=t||{},[i,l]=await(0,r.resolveBackendAndExecutionProviders)(a);if(i.createTrainingSessionHandler){const t=await i.createTrainingSessionHandler(e.checkpointState,e.trainModel,n,o,l);return new s(t,!!e.optimizerModel,!!e.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(e,t,n,r,s){const a={};let i={};if("object"!=typeof n||null===n||n instanceof o.Tensor||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let l=!0;if("object"==typeof r){if(null===r)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof o.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw new TypeError("'fetches' cannot be an empty array.");l=!1;for(const e of r){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===t.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);a[e]=null}if("object"==typeof s&&null!==s)i=s;else if(void 0!==s)throw new TypeError("'options' must be an object.")}else{let e=!1;const n=Object.getOwnPropertyNames(r);for(const s of t)if(-1!==n.indexOf(s)){const t=r[s];(null===t||t instanceof o.Tensor)&&(e=!0,l=!1,a[s]=t)}if(e){if("object"==typeof s&&null!==s)i=s;else if(void 0!==s)throw new TypeError("'options' must be an object.")}else i=r}}else if(void 0!==r)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const t of e)if(void 0===n[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(l)for(const e of t)a[e]=null;return[a,i]}convertHandlerReturnTypeToMapOfTensors(e){const t={};for(const n in e)if(Object.hasOwnProperty.call(e,n)){const r=e[n];r instanceof o.Tensor?t[n]=r:t[n]=new o.Tensor(r.type,r.data,r.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,t,n){const[r,o]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,t,n),s=await this.handler.runTrainStep(e,r,o);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(e||{})}async runEvalStep(e,t,n){if(this.hasEvalModel){const[r,o]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,t,n),s=await this.handler.runEvalStep(e,r,o);return this.convertHandlerReturnTypeToMapOfTensors(s)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,t=!0){const n=await this.getParametersSize(t);if(e.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,t)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":
/*!**********************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/training-session.js ***!
  \**********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{TrainingSession:()=>r});const r=n(/*! ./training-session-impl.js */"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js").TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":
/*!*************************************************************!*\
  !*** ./node_modules/onnxruntime-common/dist/esm/version.js ***!
  \*************************************************************/(e,t,n)=>{n.r(t),n.d(t,{version:()=>r});const r="1.18.0"},"./src/backends/onnx.js":
/*!******************************!*\
  !*** ./src/backends/onnx.js ***!
  \******************************/(e,t,n)=>{var r;n.r(t),n.d(t,{Tensor:()=>i.Tensor,createInferenceSession:()=>m,deviceToExecutionProviders:()=>p,isONNXProxy:()=>g,isONNXTensor:()=>_});var o=n(/*! ../env.js */"./src/env.js"),s=n(/*! onnxruntime-node */"onnxruntime-node"),a=n(/*! onnxruntime-web/webgpu */"?9c66"),i=n(/*! onnxruntime-common */"./node_modules/onnxruntime-common/dist/esm/index.js");const l=[];let c,d;o.apis.IS_NODE_ENV?(d=s.default??s,l.push("cpu"),c=["cpu"]):(d=r||(r=n.t(a,2)),o.apis.IS_WEBGPU_AVAILABLE&&l.push("webgpu"),l.push("wasm"),c=["wasm"]);const u=d.InferenceSession;function p(e){let t=c;if(e){if(!l.includes(e))throw new Error(`Unsupported device: "${e}". Should be one of: ${l.join(", ")}.`);t=[e]}return t}let h=null;async function m(e,t){h&&await h;const n=u.create(e,t);return h??=n,await n}function _(e){return e instanceof d.Tensor}const f=d?.env;if(f?.wasm){f.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${o.env.version}/dist/`,f.wasm.proxy=!o.apis.IS_WEBWORKER_ENV,"undefined"!=typeof crossOriginIsolated&&crossOriginIsolated||(f.wasm.numThreads=1);"undefined"!=typeof navigator&&/iP(hone|od|ad).+16_4.+AppleWebKit/.test(navigator.userAgent)&&(f.wasm.simd=!1)}function g(){return f?.wasm?.proxy}f?.webgpu&&(f.webgpu.powerPreference="high-performance"),o.env.backends.onnx=f},"./src/configs.js":
/*!************************!*\
  !*** ./src/configs.js ***!
  \************************/(e,t,n)=>{n.r(t),n.d(t,{AutoConfig:()=>l,PretrainedConfig:()=>i,getKeyValueShapes:()=>a});var r=n(/*! ./utils/core.js */"./src/utils/core.js"),o=n(/*! ./utils/hub.js */"./src/utils/hub.js");function s(e){const t={};let n={};switch(e.model_type){case"llava":case"paligemma":case"florence2":n=s(e.text_config);break;case"moondream1":n=s(e.phi_config);break;case"musicgen":n=s(e.decoder);break;case"gpt2":case"gptj":case"codegen":case"gpt_bigcode":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":t.num_heads="num_attention_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size";break;case"llama":case"cohere":case"mistral":case"starcoder2":case"qwen2":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size",t.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.dim_kv="head_dim";break;case"openelm":t.num_heads="num_kv_heads",t.num_layers="num_transformer_layers",t.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":t.num_heads="num_heads",t.num_layers="num_layers",t.hidden_size="hidden_size";break;case"bloom":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="hidden_size";break;case"mpt":t.num_heads="n_heads",t.num_layers="n_layers",t.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":t.num_decoder_layers="num_decoder_layers",t.num_decoder_heads="num_heads",t.decoder_dim_kv="d_kv",t.num_encoder_layers="num_layers",t.num_encoder_heads="num_heads",t.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="d_model",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="d_model";break;case"speecht5":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="hidden_size",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="hidden_size";break;case"trocr":t.num_encoder_layers=t.num_decoder_layers="decoder_layers",t.num_encoder_heads=t.num_decoder_heads="decoder_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="d_model";break;case"musicgen_decoder":t.num_encoder_layers=t.num_decoder_layers="num_hidden_layers",t.num_encoder_heads=t.num_decoder_heads="num_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const o=s(e.decoder),a="num_decoder_layers"in o,i=(0,r.pick)(e,["model_type","is_encoder_decoder"]);return a?(i.num_decoder_layers=o.num_decoder_layers,i.num_decoder_heads=o.num_decoder_heads,i.decoder_hidden_size=o.decoder_hidden_size,i.num_encoder_layers=o.num_encoder_layers,i.num_encoder_heads=o.num_encoder_heads,i.encoder_hidden_size=o.encoder_hidden_size):(i.num_layers=o.num_layers,i.num_heads=o.num_heads,i.hidden_size=o.hidden_size),i}const o={...n,...(0,r.pick)(e,["model_type","multi_query","is_encoder_decoder"])};for(const n in t)o[n]=e[t[n]];return o}function a(e,{prefix:t="past_key_values"}={}){const n={},r=e.normalized_config;if(r.is_encoder_decoder&&"num_encoder_heads"in r&&"num_decoder_heads"in r){const e=r.encoder_dim_kv??r.encoder_hidden_size/r.num_encoder_heads,o=r.decoder_dim_kv??r.decoder_hidden_size/r.num_decoder_heads,s=[1,r.num_encoder_heads,0,e],a=[1,r.num_decoder_heads,0,o];for(let e=0;e<r.num_decoder_layers;++e)n[`${t}.${e}.encoder.key`]=s,n[`${t}.${e}.encoder.value`]=s,n[`${t}.${e}.decoder.key`]=a,n[`${t}.${e}.decoder.value`]=a}else{const e=r.num_heads,o=r.num_layers,s=r.dim_kv??r.hidden_size/(r.num_attention_heads??e);if("falcon"===r.model_type){const r=[1*e,0,s];for(let e=0;e<o;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=r}else if(r.multi_query){const r=[1*e,0,2*s];for(let e=0;e<o;++e)n[`${t}.${e}.key_value`]=r}else if("bloom"===r.model_type){const r=[1*e,s,0],a=[1*e,0,s];for(let e=0;e<o;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=a}else if("openelm"===r.model_type)for(let r=0;r<o;++r){const o=[1,e[r],0,s];n[`${t}.${r}.key`]=o,n[`${t}.${r}.value`]=o}else{const r=[1,e,0,s];for(let e=0;e<o;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=r}}return n}class i{max_position_embeddings;constructor(e){this.model_type=null,this.is_encoder_decoder=!1,Object.assign(this,e),this.normalized_config=s(this)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:a="main"}={}){!n||n instanceof i||(n=new i(n));const l=n??await async function(e,t){return await(0,o.getModelJSON)(e,"config.json",!0,t)}(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:a});return new this(l)}}class l{static async from_pretrained(...e){return i.from_pretrained(...e)}}},"./src/env.js":
/*!********************!*\
  !*** ./src/env.js ***!
  \********************/(e,t,n)=>{n.r(t),n.d(t,{apis:()=>m,env:()=>w});var r=n(/*! fs */"?569f"),o=n(/*! path */"?3f59"),s=n(/*! url */"?154a");const a="undefined"!=typeof self,i=a&&"DedicatedWorkerGlobalScope"===self.constructor.name,l=a&&"caches"in self,c="undefined"!=typeof navigator&&"gpu"in navigator,d="undefined"!=typeof process,u=d&&"node"===process?.release?.name,p=!b(r),h=!b(o),m=Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:i,IS_WEB_CACHE_AVAILABLE:l,IS_WEBGPU_AVAILABLE:c,IS_PROCESS_AVAILABLE:d,IS_NODE_ENV:u,IS_FS_AVAILABLE:p,IS_PATH_AVAILABLE:h}),_=p&&h,f=_?o.dirname(o.dirname(s.fileURLToPath(import.meta.url))):"./",g=_?o.join(f,"/.cache/"):null,M="/models/",w={version:"3.0.0-alpha.5",backends:{onnx:{},tfjs:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!a,localModelPath:_?o.join(f,M):M,useFS:p,useBrowserCache:l,useFSCache:p,cacheDir:g,useCustomCache:!1,customCache:null};function b(e){return 0===Object.keys(e).length}},"./src/generation/configuration_utils.js":
/*!***********************************************!*\
  !*** ./src/generation/configuration_utils.js ***!
  \***********************************************/(e,t,n)=>{n.r(t),n.d(t,{GenerationConfig:()=>o});var r=n(/*! ../utils/core.js */"./src/utils/core.js");class o{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(e){Object.assign(this,(0,r.pick)(e,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":
/*!******************************************!*\
  !*** ./src/generation/logits_process.js ***!
  \******************************************/(e,t,n)=>{n.r(t),n.d(t,{ClassifierFreeGuidanceLogitsProcessor:()=>g,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>s,LogitsProcessorList:()=>i,LogitsWarper:()=>a,MinLengthLogitsProcessor:()=>m,MinNewTokensLengthLogitsProcessor:()=>_,NoBadWordsLogitsProcessor:()=>f,NoRepeatNGramLogitsProcessor:()=>p,RepetitionPenaltyLogitsProcessor:()=>h,SuppressTokensAtBeginLogitsProcessor:()=>d,TemperatureLogitsWarper:()=>M,TopKLogitsWarper:()=>b,TopPLogitsWarper:()=>w,WhisperTimeStampLogitsProcessor:()=>u});var r=n(/*! ../utils/generic.js */"./src/utils/generic.js"),o=(n(/*! ../utils/tensor.js */"./src/utils/tensor.js"),n(/*! ../utils/maths.js */"./src/utils/maths.js"));class s extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class a extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class i extends r.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){let n=t;for(const t of this.processors)n=t(e,n);return n}[Symbol.iterator](){return this.processors.values()}}class l extends s{constructor(e){super(),this.bos_token_id=e}_call(e,t){for(let n=0;n<e.length;++n)if(1===e[n].length){const e=t[n];e.data.fill(-1/0),e.data[this.bos_token_id]=0}return t}}class c extends s{constructor(e,t){super(),this.max_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.max_length-1){const e=t[n];e.data.fill(-1/0);for(const t of this.eos_token_id)e.data[t]=0}return t}}class d extends s{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.begin_index){const e=t[n];for(const t of this.begin_suppress_tokens)e.data[t]=-1/0}return t}}class u extends s{constructor(e,t){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=t.length,t.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;if(r[this.no_timestamps_token_id]=-1/0,e[n].length===this.begin_index-1){r.fill(-1/0),r[this.timestamp_begin]=0;continue}const s=e[n].slice(this.begin_index),a=s.length>=1&&s[s.length-1]>=this.timestamp_begin,i=s.length<2||s[s.length-2]>=this.timestamp_begin;if(a&&(i?r.subarray(this.timestamp_begin).fill(-1/0):r.subarray(0,this.eos_token_id).fill(-1/0)),e[n].length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;r.subarray(e+1).fill(-1/0)}const l=(0,o.log_softmax)(r);Math.log(l.subarray(this.timestamp_begin).map(Math.exp).reduce(((e,t)=>e+t)))>(0,o.max)(l.subarray(0,this.timestamp_begin))[0]&&r.subarray(0,this.timestamp_begin).fill(-1/0)}return t}}class p extends s{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,n=[];for(let r=0;r<t+1-this.no_repeat_ngram_size;++r){const t=[];for(let n=0;n<this.no_repeat_ngram_size;++n)t.push(e[r+n]);n.push(t.map(Number))}const r=new Map;for(const e of n){const t=e.slice(0,e.length-1),n=JSON.stringify(t),o=r.get(n)??[];o.push(e[e.length-1]),r.set(n,o)}return r}getGeneratedNgrams(e,t){const n=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(n.map(Number)))??[]}calcBannedNgramTokens(e){const t=[];if(e.length+1<this.no_repeat_ngram_size)return t;{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n],o=this.calcBannedNgramTokens(e[n]);for(const e of o)r.data[e]=-1/0}return t}}class h extends s{constructor(e){super(),this.penalty=e}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n];for(const t of e[n])r.data[t]<0?r.data[t]*=this.penalty:r.data[t]/=this.penalty}return t}}class m extends s{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length<this.min_length){const e=t[n];for(const t of this.eos_token_id)e.data[t]=-1/0}return t}}class _ extends s{constructor(e,t,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,t){for(let n=0;n<e.length;++n){if(e[n].length-this.prompt_length_to_skip<this.min_new_tokens){const e=t[n];for(const t of this.eos_token_id)e[t]=-1/0}}return t}}class f extends s{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n];for(const t of this.bad_words_ids){let n=!0;for(let r=1;r<=t.length-1&&t.length<e[r].length;++r)if(t.at(-r-1)!==Number(e[r].at(-r))){n=!1;break}n&&(r[t.at(-1)]=-1/0)}}return t}}class g extends s{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,t){if(t.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${t.dims[0]} for the logits and ${e.length} for the input ids.`);const n=e.length,r=t.slice([0,n],null),o=t.slice([n,t.dims[0]],null);for(let e=0;e<o.data.length;++e)o.data[e]+=(r.data[e]-o.data[e])*this.guidance_scale;return o}}class M extends a{constructor(e){if(super(),"number"!=typeof e||e<=0){let t=`\`temperature\` (=${e}) must be a strictly positive float, otherwise your next token scores will be invalid.`;0===e&&(t+=" If you're looking for greedy decoding strategies, set `do_sample=false`.")}this.temperature=e}_call(e,t){const n=t.data;for(let e=0;e<n.length;++e)n[e]/=this.temperature;return t}}class w extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(n)||n<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${n}`);this.top_p=e,this.filter_value=t,this.min_tokens_to_keep=n}}class b extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,n),this.filter_value=t}}},"./src/generation/logits_sampler.js":
/*!******************************************!*\
  !*** ./src/generation/logits_sampler.js ***!
  \******************************************/(e,t,n)=>{n.r(t),n.d(t,{LogitsSampler:()=>a});var r=n(/*! ../utils/generic.js */"./src/utils/generic.js"),o=n(/*! ../utils/tensor.js */"./src/utils/tensor.js"),s=n(/*! ../utils/maths.js */"./src/utils/maths.js");n(/*! ../generation/configuration_utils.js */"./src/generation/configuration_utils.js");class a extends r.Callable{constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let n=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-n);else{let e=t*n;r=r.slice(e,e+n)}return r}randomSelect(e){let t=0;for(let n=0;n<e.length;++n)t+=e[n];let n=Math.random()*t;for(let t=0;t<e.length;++t)if(n-=e[t],n<=0)return t;return 0}static getSampler(e){if(e.do_sample)return new l(e);if(e.num_beams>1)return new c(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new i(e)}}class i extends a{async sample(e){const t=(0,s.max)(e.data)[1];return[[BigInt(t),0]]}}class l extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,o.topk)(e,t),a=(0,s.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},(()=>{const e=this.randomSelect(a);return[r.data[e],Math.log(a[e])]}))}}class c extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,o.topk)(e,t),a=(0,s.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},((e,t)=>[r.data[t],Math.log(a[t])]))}}},"./src/generation/stopping_criteria.js":
/*!*********************************************!*\
  !*** ./src/generation/stopping_criteria.js ***!
  \*********************************************/(e,t,n)=>{n.r(t),n.d(t,{EosTokenCriteria:()=>i,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>a,StoppingCriteria:()=>o,StoppingCriteriaList:()=>s});var r=n(/*! ../utils/generic.js */"./src/utils/generic.js");class o extends r.Callable{_call(e,t){throw Error("StoppingCriteria needs to be subclassed")}}class s extends r.Callable{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof s?e=e.criteria:e instanceof o&&(e=[e]),this.criteria.push(...e)}_call(e,t){const n=new Array(e.length).fill(!1);for(const r of this.criteria){const o=r(e,t);for(let e=0;e<n.length;++e)n[e]||=o[e]}return n}[Symbol.iterator](){return this.criteria.values()}}class a extends o{constructor(e,t=null){super(),this.max_length=e,this.max_position_embeddings=t}_call(e){return e.map((e=>e.length>=this.max_length))}}class i extends o{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,t){return e.map((e=>{const t=e.at(-1);return this.eos_token_id.some((e=>t==e))}))}}class l extends o{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(e,t){return new Array(e.length).fill(this.interrupted)}}},"./src/generation/streamers.js":
/*!*************************************!*\
  !*** ./src/generation/streamers.js ***!
  \*************************************/(e,t,n)=>{n.r(t),n.d(t,{BaseStreamer:()=>a,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var r=n(/*! ../utils/core.js */"./src/utils/core.js"),o=n(/*! ../tokenizers.js */"./src/tokenizers.js"),s=n(/*! ../env.js */"./src/env.js");class a{put(e){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const i=s.apis.IS_PROCESS_AVAILABLE?e=>process.stdout.write(e):e=>console.log(e);class l extends a{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,decode_kwargs:o={},...s}={}){super(),this.tokenizer=e,this.skip_prompt=t,this.callback_function=n??i,this.token_callback_function=r,this.decode_kwargs={...o,...s},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(e){if(e.length>1)throw Error("TextStreamer only supports batch size of 1");const t=e[0];if(this.token_callback_function?.(t),this.skip_prompt&&this.next_tokens_are_prompt)return void(this.next_tokens_are_prompt=!1);this.token_cache=(0,r.mergeArrays)(this.token_cache,t);const n=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let s;n.endsWith("\n")?(s=n.slice(this.print_len),this.token_cache=[],this.print_len=0):n.length>0&&(0,o.is_chinese_char)(n.charCodeAt(n.length-1))?(s=n.slice(this.print_len),this.print_len+=s.length):(s=n.slice(this.print_len,n.lastIndexOf(" ")+1),this.print_len+=s.length),this.on_finalized_text(s,!1)}end(){let e;if(this.token_cache.length>0){e=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0}else e="";this.next_tokens_are_prompt=!0,this.on_finalized_text(e,!0)}on_finalized_text(e,t){e.length>0&&this.callback_function?.(e),t&&this.callback_function===i&&s.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.("\n")}}class c extends l{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,on_chunk_start:o=null,on_chunk_end:s=null,on_finalize:a=null,time_precision:i=.02,skip_special_tokens:l=!0,decode_kwargs:c={}}={}){super(e,{skip_prompt:t,callback_function:n,token_callback_function:r,decode_kwargs:{skip_special_tokens:l,...c}}),this.timestamp_begin=e.timestamp_begin,this.on_chunk_start=o,this.on_chunk_end=s,this.on_finalize=a,this.time_precision=i,this.waiting_for_timestamp=!1}put(e){if(e.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const t=e[0];if(1===t.length){const n=Number(t[0])-this.timestamp_begin;if(n>=0){const t=n*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(t):this.on_chunk_start?.(t),this.waiting_for_timestamp=!this.waiting_for_timestamp,e=[[]]}}return super.put(e)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":
/*!***********************!*\
  !*** ./src/models.js ***!
  \***********************/(e,t,n)=>{n.r(t),n.d(t,{ASTForAudioClassification:()=>nn,ASTModel:()=>tn,ASTPreTrainedModel:()=>en,AlbertForMaskedLM:()=>ut,AlbertForQuestionAnswering:()=>dt,AlbertForSequenceClassification:()=>ct,AlbertModel:()=>lt,AlbertPreTrainedModel:()=>it,AutoModel:()=>ni,AutoModelForAudioClassification:()=>bi,AutoModelForAudioFrameClassification:()=>xi,AutoModelForCTC:()=>wi,AutoModelForCausalLM:()=>ci,AutoModelForDepthEstimation:()=>Ci,AutoModelForDocumentQuestionAnswering:()=>yi,AutoModelForImageClassification:()=>hi,AutoModelForImageFeatureExtraction:()=>Pi,AutoModelForImageMatting:()=>ki,AutoModelForImageSegmentation:()=>mi,AutoModelForImageToImage:()=>Fi,AutoModelForMaskGeneration:()=>Mi,AutoModelForMaskedLM:()=>di,AutoModelForObjectDetection:()=>fi,AutoModelForQuestionAnswering:()=>ui,AutoModelForSemanticSegmentation:()=>_i,AutoModelForSeq2SeqLM:()=>si,AutoModelForSequenceClassification:()=>ri,AutoModelForSpeechSeq2Seq:()=>ai,AutoModelForTextToSpectrogram:()=>ii,AutoModelForTextToWaveform:()=>li,AutoModelForTokenClassification:()=>oi,AutoModelForVision2Seq:()=>pi,AutoModelForXVector:()=>Ti,AutoModelForZeroShotObjectDetection:()=>gi,BartForConditionalGeneration:()=>yt,BartForSequenceClassification:()=>kt,BartModel:()=>xt,BartPretrainedModel:()=>Tt,BaseModelOutput:()=>q,BeitForImageClassification:()=>Wr,BeitModel:()=>$r,BeitPreTrainedModel:()=>qr,BertForMaskedLM:()=>U,BertForQuestionAnswering:()=>H,BertForSequenceClassification:()=>X,BertForTokenClassification:()=>Q,BertModel:()=>W,BertPreTrainedModel:()=>$,BlenderbotForConditionalGeneration:()=>Lt,BlenderbotModel:()=>Et,BlenderbotPreTrainedModel:()=>At,BlenderbotSmallForConditionalGeneration:()=>Bt,BlenderbotSmallModel:()=>It,BlenderbotSmallPreTrainedModel:()=>zt,BloomForCausalLM:()=>fr,BloomModel:()=>_r,BloomPreTrainedModel:()=>mr,CLIPModel:()=>mn,CLIPPreTrainedModel:()=>hn,CLIPSegForImageSegmentation:()=>Fn,CLIPSegModel:()=>kn,CLIPSegPreTrainedModel:()=>yn,CLIPTextModelWithProjection:()=>_n,CLIPVisionModelWithProjection:()=>fn,CamembertForMaskedLM:()=>Me,CamembertForQuestionAnswering:()=>Te,CamembertForSequenceClassification:()=>we,CamembertForTokenClassification:()=>be,CamembertModel:()=>ge,CamembertPreTrainedModel:()=>fe,CausalLMOutput:()=>Ii,CausalLMOutputWithPast:()=>Bi,ChineseCLIPModel:()=>xn,ChineseCLIPPreTrainedModel:()=>Tn,ClapAudioModelWithProjection:()=>Hs,ClapModel:()=>Xs,ClapPreTrainedModel:()=>Us,ClapTextModelWithProjection:()=>Qs,CodeGenForCausalLM:()=>qn,CodeGenModel:()=>Gn,CodeGenPreTrainedModel:()=>Rn,CohereForCausalLM:()=>Hn,CohereModel:()=>Qn,CoherePreTrainedModel:()=>Xn,ConvBertForMaskedLM:()=>ae,ConvBertForQuestionAnswering:()=>ce,ConvBertForSequenceClassification:()=>ie,ConvBertForTokenClassification:()=>le,ConvBertModel:()=>se,ConvBertPreTrainedModel:()=>oe,ConvNextForImageClassification:()=>Eo,ConvNextModel:()=>Ao,ConvNextPreTrainedModel:()=>So,ConvNextV2ForImageClassification:()=>Io,ConvNextV2Model:()=>zo,ConvNextV2PreTrainedModel:()=>Lo,DPTForDepthEstimation:()=>To,DPTModel:()=>bo,DPTPreTrainedModel:()=>wo,DebertaForMaskedLM:()=>ke,DebertaForQuestionAnswering:()=>Pe,DebertaForSequenceClassification:()=>Fe,DebertaForTokenClassification:()=>Ce,DebertaModel:()=>ye,DebertaPreTrainedModel:()=>xe,DebertaV2ForMaskedLM:()=>Ae,DebertaV2ForQuestionAnswering:()=>ze,DebertaV2ForSequenceClassification:()=>Ee,DebertaV2ForTokenClassification:()=>Le,DebertaV2Model:()=>Se,DebertaV2PreTrainedModel:()=>ve,DeiTForImageClassification:()=>lo,DeiTModel:()=>io,DeiTPreTrainedModel:()=>ao,DepthAnythingForDepthEstimation:()=>yo,DepthAnythingPreTrainedModel:()=>xo,DetrForObjectDetection:()=>Qr,DetrForSegmentation:()=>Hr,DetrModel:()=>Xr,DetrObjectDetectionOutput:()=>Yr,DetrPreTrainedModel:()=>Ur,DetrSegmentationOutput:()=>Kr,Dinov2ForImageClassification:()=>Oo,Dinov2Model:()=>No,Dinov2PreTrainedModel:()=>Bo,DistilBertForMaskedLM:()=>Ve,DistilBertForQuestionAnswering:()=>De,DistilBertForSequenceClassification:()=>Ne,DistilBertForTokenClassification:()=>Oe,DistilBertModel:()=>Be,DistilBertPreTrainedModel:()=>Ie,DonutSwinModel:()=>vo,DonutSwinPreTrainedModel:()=>Po,EfficientNetForImageClassification:()=>ia,EfficientNetModel:()=>aa,EfficientNetPreTrainedModel:()=>sa,ElectraForMaskedLM:()=>pe,ElectraForQuestionAnswering:()=>_e,ElectraForSequenceClassification:()=>he,ElectraForTokenClassification:()=>me,ElectraModel:()=>ue,ElectraPreTrainedModel:()=>de,EsmForMaskedLM:()=>Ge,EsmForSequenceClassification:()=>qe,EsmForTokenClassification:()=>$e,EsmModel:()=>Re,EsmPreTrainedModel:()=>je,FalconForCausalLM:()=>Ws,FalconModel:()=>$s,FalconPreTrainedModel:()=>qs,FastViTForImageClassification:()=>vr,FastViTModel:()=>Pr,FastViTPreTrainedModel:()=>Cr,Florence2ForConditionalGeneration:()=>pn,Florence2PreTrainedModel:()=>un,GLPNForDepthEstimation:()=>Co,GLPNModel:()=>Fo,GLPNPreTrainedModel:()=>ko,GPT2LMHeadModel:()=>vn,GPT2Model:()=>Pn,GPT2PreTrainedModel:()=>Cn,GPTBigCodeForCausalLM:()=>jn,GPTBigCodeModel:()=>Vn,GPTBigCodePreTrainedModel:()=>Dn,GPTJForCausalLM:()=>On,GPTJModel:()=>Nn,GPTJPreTrainedModel:()=>Bn,GPTNeoForCausalLM:()=>En,GPTNeoModel:()=>An,GPTNeoPreTrainedModel:()=>Sn,GPTNeoXForCausalLM:()=>In,GPTNeoXModel:()=>zn,GPTNeoXPreTrainedModel:()=>Ln,Gemma2ForCausalLM:()=>tr,Gemma2Model:()=>er,Gemma2PreTrainedModel:()=>Zn,GemmaForCausalLM:()=>Jn,GemmaModel:()=>Kn,GemmaPreTrainedModel:()=>Yn,HubertForCTC:()=>xs,HubertForSequenceClassification:()=>ys,HubertModel:()=>Ts,HubertPreTrainedModel:()=>bs,ImageMattingOutput:()=>Ni,LlamaForCausalLM:()=>Un,LlamaModel:()=>Wn,LlamaPreTrainedModel:()=>$n,LlavaForConditionalGeneration:()=>cn,LlavaPreTrainedModel:()=>ln,LongT5ForConditionalGeneration:()=>gt,LongT5Model:()=>ft,LongT5PreTrainedModel:()=>_t,M2M100ForConditionalGeneration:()=>Yo,M2M100Model:()=>Ho,M2M100PreTrainedModel:()=>Qo,MBartForCausalLM:()=>St,MBartForConditionalGeneration:()=>Pt,MBartForSequenceClassification:()=>vt,MBartModel:()=>Ct,MBartPreTrainedModel:()=>Ft,MPNetForMaskedLM:()=>Je,MPNetForQuestionAnswering:()=>tt,MPNetForSequenceClassification:()=>Ze,MPNetForTokenClassification:()=>et,MPNetModel:()=>Ke,MPNetPreTrainedModel:()=>Ye,MT5ForConditionalGeneration:()=>bt,MT5Model:()=>wt,MT5PreTrainedModel:()=>Mt,MarianMTModel:()=>Xo,MarianModel:()=>Uo,MarianPreTrainedModel:()=>Wo,MaskedLMOutput:()=>Li,MistralForCausalLM:()=>Vs,MistralModel:()=>Ds,MistralPreTrainedModel:()=>Os,MobileBertForMaskedLM:()=>Xe,MobileBertForQuestionAnswering:()=>He,MobileBertForSequenceClassification:()=>Qe,MobileBertModel:()=>Ue,MobileBertPreTrainedModel:()=>We,MobileNetV1ForImageClassification:()=>ma,MobileNetV1Model:()=>ha,MobileNetV1PreTrainedModel:()=>pa,MobileNetV2ForImageClassification:()=>ga,MobileNetV2Model:()=>fa,MobileNetV2PreTrainedModel:()=>_a,MobileNetV3ForImageClassification:()=>ba,MobileNetV3Model:()=>wa,MobileNetV3PreTrainedModel:()=>Ma,MobileNetV4ForImageClassification:()=>ya,MobileNetV4Model:()=>xa,MobileNetV4PreTrainedModel:()=>Ta,MobileViTForImageClassification:()=>zr,MobileViTModel:()=>Lr,MobileViTPreTrainedModel:()=>Er,MobileViTV2ForImageClassification:()=>Nr,MobileViTV2Model:()=>Br,MobileViTV2PreTrainedModel:()=>Ir,ModelOutput:()=>G,Moondream1ForConditionalGeneration:()=>dn,MptForCausalLM:()=>wr,MptModel:()=>Mr,MptPreTrainedModel:()=>gr,MusicgenForCausalLM:()=>da,MusicgenForConditionalGeneration:()=>ua,MusicgenModel:()=>ca,MusicgenPreTrainedModel:()=>la,NomicBertModel:()=>K,NomicBertPreTrainedModel:()=>Y,OPTForCausalLM:()=>xr,OPTModel:()=>Tr,OPTPreTrainedModel:()=>br,OpenELMForCausalLM:()=>or,OpenELMModel:()=>rr,OpenELMPreTrainedModel:()=>nr,OwlViTForObjectDetection:()=>Vr,OwlViTModel:()=>Dr,OwlViTPreTrainedModel:()=>Or,Owlv2ForObjectDetection:()=>Gr,Owlv2Model:()=>Rr,Owlv2PreTrainedModel:()=>jr,Phi3ForCausalLM:()=>hr,Phi3Model:()=>pr,Phi3PreTrainedModel:()=>ur,PhiForCausalLM:()=>dr,PhiModel:()=>cr,PhiPreTrainedModel:()=>lr,PreTrainedModel:()=>R,PretrainedMixin:()=>ka,PyAnnoteForAudioFrameClassification:()=>os,PyAnnoteModel:()=>rs,PyAnnotePreTrainedModel:()=>ns,QuestionAnsweringModelOutput:()=>zi,Qwen2ForCausalLM:()=>ir,Qwen2Model:()=>ar,Qwen2PreTrainedModel:()=>sr,RTDetrForObjectDetection:()=>eo,RTDetrModel:()=>Zr,RTDetrObjectDetectionOutput:()=>to,RTDetrPreTrainedModel:()=>Jr,ResNetForImageClassification:()=>po,ResNetModel:()=>uo,ResNetPreTrainedModel:()=>co,RoFormerForMaskedLM:()=>ee,RoFormerForQuestionAnswering:()=>re,RoFormerForSequenceClassification:()=>te,RoFormerForTokenClassification:()=>ne,RoFormerModel:()=>Z,RoFormerPreTrainedModel:()=>J,RobertaForMaskedLM:()=>Dt,RobertaForQuestionAnswering:()=>Rt,RobertaForSequenceClassification:()=>Vt,RobertaForTokenClassification:()=>jt,RobertaModel:()=>Ot,RobertaPreTrainedModel:()=>Nt,SamImageSegmentationOutput:()=>$o,SamModel:()=>qo,SamPreTrainedModel:()=>Go,SegformerForImageClassification:()=>ea,SegformerForSemanticSegmentation:()=>ta,SegformerModel:()=>Zs,SegformerPreTrainedModel:()=>Js,Seq2SeqLMOutput:()=>vi,SequenceClassifierOutput:()=>Si,SiglipModel:()=>Mn,SiglipPreTrainedModel:()=>gn,SiglipTextModel:()=>wn,SiglipVisionModel:()=>bn,SpeechT5ForSpeechToText:()=>Ls,SpeechT5ForTextToSpeech:()=>zs,SpeechT5HifiGan:()=>Is,SpeechT5Model:()=>Es,SpeechT5PreTrainedModel:()=>As,SqueezeBertForMaskedLM:()=>ot,SqueezeBertForQuestionAnswering:()=>at,SqueezeBertForSequenceClassification:()=>st,SqueezeBertModel:()=>rt,SqueezeBertPreTrainedModel:()=>nt,StableLmForCausalLM:()=>oa,StableLmModel:()=>ra,StableLmPreTrainedModel:()=>na,Starcoder2ForCausalLM:()=>Gs,Starcoder2Model:()=>Rs,Starcoder2PreTrainedModel:()=>js,Swin2SRForImageSuperResolution:()=>Mo,Swin2SRModel:()=>go,Swin2SRPreTrainedModel:()=>fo,SwinForImageClassification:()=>_o,SwinModel:()=>mo,SwinPreTrainedModel:()=>ho,T5ForConditionalGeneration:()=>mt,T5Model:()=>ht,T5PreTrainedModel:()=>pt,TableTransformerForObjectDetection:()=>oo,TableTransformerModel:()=>ro,TableTransformerObjectDetectionOutput:()=>so,TableTransformerPreTrainedModel:()=>no,TokenClassifierOutput:()=>Ei,TrOCRForCausalLM:()=>Ns,TrOCRPreTrainedModel:()=>Bs,UniSpeechForCTC:()=>cs,UniSpeechForSequenceClassification:()=>ds,UniSpeechModel:()=>ls,UniSpeechPreTrainedModel:()=>is,UniSpeechSatForAudioFrameClassification:()=>_s,UniSpeechSatForCTC:()=>hs,UniSpeechSatForSequenceClassification:()=>ms,UniSpeechSatModel:()=>ps,UniSpeechSatPreTrainedModel:()=>us,ViTForImageClassification:()=>Fr,ViTModel:()=>kr,ViTPreTrainedModel:()=>yr,VisionEncoderDecoderModel:()=>an,VitMatteForImageMatting:()=>Ar,VitMattePreTrainedModel:()=>Sr,VitsModel:()=>Ks,VitsModelOutput:()=>Oi,VitsPreTrainedModel:()=>Ys,Wav2Vec2BertForCTC:()=>Ms,Wav2Vec2BertForSequenceClassification:()=>ws,Wav2Vec2BertModel:()=>gs,Wav2Vec2BertPreTrainedModel:()=>fs,Wav2Vec2ForAudioFrameClassification:()=>ts,Wav2Vec2ForCTC:()=>Zo,Wav2Vec2ForSequenceClassification:()=>es,Wav2Vec2Model:()=>Jo,Wav2Vec2PreTrainedModel:()=>Ko,WavLMForAudioFrameClassification:()=>Ss,WavLMForCTC:()=>Cs,WavLMForSequenceClassification:()=>Ps,WavLMForXVector:()=>vs,WavLMModel:()=>Fs,WavLMPreTrainedModel:()=>ks,WeSpeakerResNetModel:()=>as,WeSpeakerResNetPreTrainedModel:()=>ss,WhisperForConditionalGeneration:()=>sn,WhisperModel:()=>on,WhisperPreTrainedModel:()=>rn,XLMForQuestionAnswering:()=>Xt,XLMForSequenceClassification:()=>Wt,XLMForTokenClassification:()=>Ut,XLMModel:()=>qt,XLMPreTrainedModel:()=>Gt,XLMRobertaForMaskedLM:()=>Yt,XLMRobertaForQuestionAnswering:()=>Zt,XLMRobertaForSequenceClassification:()=>Kt,XLMRobertaForTokenClassification:()=>Jt,XLMRobertaModel:()=>Ht,XLMRobertaPreTrainedModel:()=>Qt,XLMWithLMHeadModel:()=>$t,XVectorOutput:()=>Ai,YolosForObjectDetection:()=>jo,YolosModel:()=>Vo,YolosObjectDetectionOutput:()=>Ro,YolosPreTrainedModel:()=>Do});var r=n(/*! ./configs.js */"./src/configs.js"),o=n(/*! ./backends/onnx.js */"./src/backends/onnx.js"),s=n(/*! ./utils/dtypes.js */"./src/utils/dtypes.js"),a=n(/*! ./utils/generic.js */"./src/utils/generic.js"),i=n(/*! ./utils/core.js */"./src/utils/core.js"),l=n(/*! ./utils/hub.js */"./src/utils/hub.js"),c=n(/*! ./generation/logits_process.js */"./src/generation/logits_process.js"),d=n(/*! ./generation/configuration_utils.js */"./src/generation/configuration_utils.js"),u=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),p=n(/*! ./utils/maths.js */"./src/utils/maths.js"),h=n(/*! ./generation/stopping_criteria.js */"./src/generation/stopping_criteria.js"),m=n(/*! ./generation/logits_sampler.js */"./src/generation/logits_sampler.js"),_=n(/*! ./env.js */"./src/env.js"),f=n(/*! ./models/whisper/generation_whisper.js */"./src/models/whisper/generation_whisper.js"),g=n(/*! ./models/whisper/common_whisper.js */"./src/models/whisper/common_whisper.js");const M=0,w=1,b=2,T=3,x=4,y=5,k=6,F=7,C=new Map,P=new Map,v=new Map;async function S(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map((async a=>{const{buffer:i,session_options:c}=await async function(e,t,n){let a=n.device;a&&"string"!=typeof a&&(a.hasOwnProperty(t)?a=a[t]:(console.warn(`device not specified for "${t}". Using the default device.`),a=null));const i=(0,o.deviceToExecutionProviders)(a);let c=n.dtype;if("string"!=typeof c&&(c&&c.hasOwnProperty(t)?c=c[t]:(c=s.DEFAULT_DEVICE_DTYPE_MAPPING[i[0]],console.warn(`dtype not specified for "${t}". Using the default dtype for this device (${c}).`))),!s.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(c))throw new Error(`Invalid dtype: ${c}. Should be one of: ${Object.keys(s.DATA_TYPES).join(", ")}`);if(c===s.DATA_TYPES.fp16&&"webgpu"===a&&!await(0,s.isWebGpuFp16Supported)())throw new Error(`The device (${a}) does not support fp16.`);const d=s.DEFAULT_DTYPE_SUFFIX_MAPPING[c],u=`${n.subfolder??""}/${t}${d}.onnx`,p={...n.session_options}??{};p.executionProviders??=i;const h=(0,l.getModelFile)(e,u,!0,n);let m=[];if(n.use_external_data_format&&(!0===n.use_external_data_format||"object"==typeof n.use_external_data_format&&n.use_external_data_format.hasOwnProperty(t)&&!0===n.use_external_data_format[t])){if(_.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const r=`${t}${d}.onnx_data`,o=`${n.subfolder??""}/${r}`;m.push(new Promise((async(t,s)=>{const a=await(0,l.getModelFile)(e,o,!0,n);t({path:r,data:a})})))}else void 0!==p.externalData&&(m=p.externalData.map((async t=>{if("string"==typeof t.data){const r=await(0,l.getModelFile)(e,t.data,!0,n);return{...t,data:r}}return t})));if(m.length>0&&(p.externalData=await Promise.all(m)),"webgpu"===a){const e=(0,r.getKeyValueShapes)(n.config,{prefix:"present"});if(Object.keys(e).length>0&&!(0,o.isONNXProxy)()){const t={};for(const n in e)t[n]="gpu-buffer";p.preferredOutputLocation=t}}return{buffer:await h,session_options:p}}(e,t[a],n);return[a,await(0,o.createInferenceSession)(i,c)]}))))}async function A(e,t){const n=function(e,t){const n=Object.create(null),r=[];for(const s of e.inputNames){const e=t[s];e instanceof u.Tensor?n[s]=(0,o.isONNXProxy)()?e.clone():e:r.push(s)}if(r.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${r.join(", ")}.`);const s=Object.keys(t).length,a=e.inputNames.length;if(s>a){let n=Object.keys(t).filter((t=>!e.inputNames.includes(t)));console.warn(`WARNING: Too many inputs were provided (${s} > ${a}). The following inputs will be ignored: "${n.join(", ")}".`)}return n}(e,t);try{const t=Object.fromEntries(Object.entries(n).map((([e,t])=>[e,t.ort_tensor])));let r=await e.run(t);return r=E(r),r}catch(e){throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",n),e}}function E(e){for(let t in e)(0,o.isONNXTensor)(e[t])?e[t]=new u.Tensor(e[t]):"object"==typeof e[t]&&E(e[t]);return e}function L(e){if(e instanceof u.Tensor)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some((t=>t.length!==e[0].length)))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new u.Tensor("int64",BigInt64Array.from(e.flat().map((e=>BigInt(e)))),[e.length,e[0].length])}return new u.Tensor("int64",BigInt64Array.from(e.map((e=>BigInt(e)))),[1,e.length])}function z(e){return new u.Tensor("bool",[e],[1])}async function I(e,t){let{encoder_outputs:n,input_ids:r,decoder_input_ids:o,...s}=t;if(!n){const r=(0,i.pick)(t,e.sessions.model.inputNames);n=(await B(e,r)).last_hidden_state}s.input_ids=o,s.encoder_hidden_states=n,e.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(s.encoder_attention_mask=t.attention_mask);return await N(e,s,!0)}async function B(e,t){const n=e.sessions.model,r=(0,i.pick)(t,n.inputNames);if(n.inputNames.includes("inputs_embeds")&&!r.inputs_embeds){if(!t.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");r.inputs_embeds=await e.encode_text({input_ids:t.input_ids})}return n.inputNames.includes("token_type_ids")&&!r.token_type_ids&&(r.token_type_ids=new u.Tensor("int64",new BigInt64Array(r.input_ids.data.length),r.input_ids.dims)),await A(n,r)}async function N(e,t,n=!1){const r=e.sessions[n?"decoder_model_merged":"model"],{past_key_values:o,...s}=t;r.inputNames.includes("use_cache_branch")&&(s.use_cache_branch=z(!!o)),r.inputNames.includes("position_ids")&&s.attention_mask&&!s.position_ids&&(s.position_ids=function(e,t=null){const{input_ids:n,inputs_embeds:r,attention_mask:o}=e,[s,a]=o.dims,i=new BigInt64Array(o.data.length);for(let e=0;e<s;++e){const t=e*a;let n=BigInt(0);for(let e=0;e<a;++e){const r=t+e;0n===o.data[r]?i[r]=BigInt(1):(i[r]=n,n+=o.data[r])}}let l=new u.Tensor("int64",i,o.dims);if(t){const e=-(n??r).dims.at(1);l=l.slice(null,[e,null])}return l}(s,o)),e.addPastKeyValues(s,o);const a=(0,i.pick)(s,r.inputNames);return await A(r,a)}async function O(e,{input_ids:t=null,attention_mask:n=null,pixel_values:r=null,position_ids:o=null,inputs_embeds:s=null,past_key_values:a=null,generation_config:i=null,logits_processor:l=null,...c}){if(!s)if(s=await e.encode_text({input_ids:t}),r&&1!==t.dims[1]){const o=await e.encode_image({pixel_values:r});({inputs_embeds:s,attention_mask:n}=e._merge_input_ids_with_image_features({image_features:o,inputs_embeds:s,input_ids:t,attention_mask:n}))}else if(a&&r&&1===t.dims[1]){const e=t.dims[1],r=Object.values(a)[0].dims.at(-2);n=(0,u.cat)([(0,u.ones)([t.dims[0],r]),n.slice(null,[n.dims[1]-e,n.dims[1]])],1)}return await N(e,{inputs_embeds:s,past_key_values:a,attention_mask:n,position_ids:o,generation_config:i,logits_processor:l},!0)}function D(e,t,n,r){if(n.past_key_values){const t=Object.values(n.past_key_values)[0].dims.at(-2),{input_ids:r,attention_mask:o}=n;if(o&&o.dims[1]>r.dims[1]);else if(t<r.dims[1])n.input_ids=r.slice(null,[t,null]);else if(null!=e.config.image_token_index&&r.data.some((t=>t==e.config.image_token_index))){const o=e.config.num_image_tokens;if(!o)throw new Error("`num_image_tokens` is missing in the model configuration.");const s=r.dims[1]-(t-o);n.input_ids=r.slice(null,[-s,null]),n.attention_mask=(0,u.ones)([1,t+s])}}return n}function V(e,t,n,r){return n.past_key_values&&(t=t.map((e=>[e.at(-1)]))),{...n,decoder_input_ids:L(t)}}function j(e,...t){return e.config.is_encoder_decoder?V(e,...t):D(e,...t)}class R extends a.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(e,t){super(),this.config=e,this.sessions=t;const n=v.get(this.constructor),r=C.get(n);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,r){case x:this.can_generate=!0,this._forward=N,this._prepare_inputs_for_generation=D;break;case b:case T:case F:this.can_generate=!0,this._forward=I,this._prepare_inputs_for_generation=V;break;case w:this._forward=I;break;case k:this.can_generate=!0,this._forward=O,this._prepare_inputs_for_generation=j;break;default:this._forward=B}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const e=[];for(const t of Object.values(this.sessions))t?.handler?.dispose&&e.push(t.handler.dispose());return await Promise.all(e)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:o=null,local_files_only:s=!1,revision:a="main",model_file_name:i=null,subfolder:c="onnx",device:d=null,dtype:u=null,use_external_data_format:p=null,session_options:h={}}={}){let m={progress_callback:t,config:n,cache_dir:o,local_files_only:s,revision:a,model_file_name:i,subfolder:c,device:d,dtype:u,use_external_data_format:p,session_options:h};const _=v.get(this),f=C.get(_);let g;if(n=m.config=await r.AutoConfig.from_pretrained(e,m),f===x)g=await Promise.all([S(e,{model:m.model_file_name??"model"},m),(0,l.getModelJSON)(e,"generation_config.json",!1,m)]);else if(f===b||f===T)g=await Promise.all([S(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},m),(0,l.getModelJSON)(e,"generation_config.json",!1,m)]);else if(f===y)g=await Promise.all([S(e,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},m)]);else if(f===w)g=await Promise.all([S(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},m)]);else if(f===k){const t={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};n.is_encoder_decoder&&(t.model="encoder_model"),g=await Promise.all([S(e,t,m),(0,l.getModelJSON)(e,"generation_config.json",!1,m)])}else f===F?g=await Promise.all([S(e,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},m),(0,l.getModelJSON)(e,"generation_config.json",!1,m)]):(f!==M&&console.warn(`Model type for '${_??n?.model_type}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),g=await Promise.all([S(e,{model:m.model_file_name??"model"},m)]));return new this(n,...g)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}_get_logits_warper(e){const t=new c.LogitsProcessorList;return null!==e.temperature&&1!==e.temperature&&t.push(new c.TemperatureLogitsWarper(e.temperature)),null!==e.top_k&&0!==e.top_k&&t.push(new c.TopKLogitsWarper(e.top_k)),null!==e.top_p&&e.top_p<1&&t.push(new c.TopPLogitsWarper(e.top_p)),t}_get_logits_processor(e,t,n=null){const r=new c.LogitsProcessorList;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new c.RepetitionPenaltyLogitsProcessor(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new c.NoRepeatNGramLogitsProcessor(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&r.push(new c.NoBadWordsLogitsProcessor(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&r.push(new c.MinLengthLogitsProcessor(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&r.push(new c.MinNewTokensLengthLogitsProcessor(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&r.push(new c.ForcedBOSTokenLogitsProcessor(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new c.ForcedEOSTokenLogitsProcessor(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){const n=t>1||null===e.forced_bos_token_id?t:t+1;r.push(new c.SuppressTokensAtBeginLogitsProcessor(e.begin_suppress_tokens,n))}return null!==e.guidance_scale&&e.guidance_scale>1&&r.push(new c.ClassifierFreeGuidanceLogitsProcessor(e.guidance_scale)),null!==n&&r.extend(n),r}_prepare_generation_config(e,t,n=d.GenerationConfig){const r={...this.config};for(const e of["decoder","generator","text_config"])e in r&&Object.assign(r,r[e]);const o=new n(r);return"generation_config"in this&&Object.assign(o,this.generation_config),e&&Object.assign(o,e),t&&Object.assign(o,(0,i.pick)(t,Object.getOwnPropertyNames(o))),o}_get_stopping_criteria(e,t=null){const n=new h.StoppingCriteriaList;return null!==e.max_length&&n.push(new h.MaxLengthCriteria(e.max_length,this.config.max_position_embeddings??null)),null!==e.eos_token_id&&n.push(new h.EosTokenCriteria(e.eos_token_id)),t&&n.extend(t),n}_validate_model_class(){if(!this.can_generate){const e=[Ia,Oa,za,va],t=v.get(this.constructor),n=new Set,r=this.config.model_type;for(const t of e){const e=t.get(r);e&&n.add(e[0])}let o=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw n.size>0&&(o+=` Please use the following class instead: ${[...n].join(", ")}`),Error(o)}}prepare_inputs_for_generation(...e){return this._prepare_inputs_for_generation(this,...e)}_update_model_kwargs_for_generation({generated_input_ids:e,outputs:t,model_inputs:n,is_encoder_decoder:r}){return n.past_key_values=this.getPastKeyValues(t,n.past_key_values),n.input_ids=new u.Tensor("int64",e.flat(),[e.length,1]),r||(n.attention_mask=(0,u.cat)([n.attention_mask,(0,u.ones)([n.attention_mask.dims[0],1])],1)),n.position_ids=null,n}_prepare_model_inputs({inputs:e,bos_token_id:t,model_kwargs:n}){const r=(0,i.pick)(n,this.forward_params),o=this.main_input_name;if(o in r){if(e)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else r[o]=e;return{inputs_tensor:r[o],model_inputs:r,model_input_name:o}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:e,model_inputs:t,model_input_name:n,generation_config:r}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!t.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:e,pixel_values:n,attention_mask:r,...o}=t,s=await this._prepare_inputs_embeds(t);t={...o,...(0,i.pick)(s,["inputs_embeds","attention_mask"])}}let{last_hidden_state:o}=await B(this,t);if(null!==r.guidance_scale&&r.guidance_scale>1)o=(0,u.cat)([o,(0,u.full_like)(o,0)],0),"attention_mask"in t&&(t.attention_mask=(0,u.cat)([t.attention_mask,(0,u.zeros_like)(t.attention_mask)],0));else if(t.decoder_input_ids){const e=L(t.decoder_input_ids).dims[0];if(e!==o.dims[0]){if(1!==o.dims[0])throw new Error(`The encoder outputs have a different batch size (${o.dims[0]}) than the decoder inputs (${e}).`);o=(0,u.cat)(Array.from({length:e},(()=>o)),0)}}return t.encoder_outputs=o,t}_prepare_decoder_input_ids_for_generation({batch_size:e,model_input_name:t,model_kwargs:n,decoder_start_token_id:r,bos_token_id:o,generation_config:s}){let{decoder_input_ids:a,...i}=n;if(a)Array.isArray(a[0])||(a=Array.from({length:e},(()=>a)));else if(r??=o,"musicgen"===this.config.model_type)a=Array.from({length:e*this.config.decoder.num_codebooks},(()=>[r]));else if(Array.isArray(r)){if(r.length!==e)throw new Error(`\`decoder_start_token_id\` expcted to have length ${e} but got ${r.length}`);a=r}else a=Array.from({length:e},(()=>[r]));return a=L(a),n.decoder_attention_mask=(0,u.ones_like)(a),{input_ids:a,model_inputs:i}}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,streamer:o=null,...s}){this._validate_model_class(),t=this._prepare_generation_config(t,s);let{inputs_tensor:a,model_inputs:i,model_input_name:l}=this._prepare_model_inputs({inputs:e,model_kwargs:s});const c=this.config.is_encoder_decoder;let d;c&&("encoder_outputs"in i||(i=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:a,model_inputs:i,model_input_name:l,generation_config:t}))),c?({input_ids:d,model_inputs:i}=this._prepare_decoder_input_ids_for_generation({batch_size:i[l].dims.at(0),model_input_name:l,model_kwargs:i,decoder_start_token_id:t.decoder_start_token_id,bos_token_id:t.bos_token_id,generation_config:t})):d=i[l];let p=d.dims.at(-1);null!==t.max_new_tokens&&(t.max_length=p+t.max_new_tokens);const h=this._get_logits_processor(t,p,n),_=this._get_stopping_criteria(t,r),f=i[l].dims.at(0),g=m.LogitsSampler.getSampler(t),M=new Array(f).fill(0),w=d.tolist();o&&o.put(w);let b=null,T={};for(;;){i=this.prepare_inputs_for_generation(w,i,t);const e=await this.forward(i);if(t.output_attentions&&t.return_dict_in_generate){const t=this.getAttentions(e);for(const e in t)e in T||(T[e]=[]),T[e].push(t[e])}const n=h(w,e.logits.slice(null,-1,null)),r=[];for(let e=0;e<n.dims.at(0);++e){const t=n[e],o=await g(t);for(const[t,n]of o){const o=BigInt(t);M[e]+=n,w[e].push(o),r.push([o]);break}}o&&o.put(r);if(_(w).every((e=>e))){t.return_dict_in_generate&&(b=this.getPastKeyValues(e,i.past_key_values,!1));break}i=this._update_model_kwargs_for_generation({generated_input_ids:r,outputs:e,model_inputs:i,is_encoder_decoder:c})}o&&o.end();const x=new u.Tensor("int64",w.flat(),[w.length,w[0].length]);return t.return_dict_in_generate?{sequences:x,past_key_values:b,...T}:x}getPastKeyValues(e,t,n=!0){const r=Object.create(null);for(const o in e)if(o.startsWith("present")){const s=o.replace("present","past_key_values");if(t&&o.includes("encoder"))r[s]=t[s];else{if(n&&t){const e=t[s];"gpu-buffer"===e.location&&e.dispose()}r[s]=e[o]}}return r}getAttentions(e){const t={};for(const n of["cross_attentions","encoder_attentions","decoder_attentions"])for(const r in e)r.startsWith(n)&&(n in t||(t[n]=[]),t[n].push(e[r]));return t}addPastKeyValues(e,t){if(t)Object.assign(e,t);else{const t=this.custom_config.kv_cache_dtype??"float32",n="float16"===t?new Uint16Array:[],o=(0,r.getKeyValueShapes)(this.config);for(const r in o)e[r]=new u.Tensor(t,n,o[r])}}async encode_image({pixel_values:e}){const t=(await A(this.sessions.vision_encoder,{pixel_values:e})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${t.dims[1]}).`),this.config.num_image_tokens=t.dims[1]),t}async encode_text({input_ids:e}){return(await A(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}}class G{}class q extends G{constructor({last_hidden_state:e,hidden_states:t=null,attentions:n=null}){super(),this.last_hidden_state=e,this.hidden_states=t,this.attentions=n}}class $ extends R{}class W extends ${}class U extends ${async _call(e){return new Li(await super._call(e))}}class X extends ${async _call(e){return new Si(await super._call(e))}}class Q extends ${async _call(e){return new Ei(await super._call(e))}}class H extends ${async _call(e){return new zi(await super._call(e))}}class Y extends R{}class K extends Y{}class J extends R{}class Z extends J{}class ee extends J{async _call(e){return new Li(await super._call(e))}}class te extends J{async _call(e){return new Si(await super._call(e))}}class ne extends J{async _call(e){return new Ei(await super._call(e))}}class re extends J{async _call(e){return new zi(await super._call(e))}}class oe extends R{}class se extends oe{}class ae extends oe{async _call(e){return new Li(await super._call(e))}}class ie extends oe{async _call(e){return new Si(await super._call(e))}}class le extends oe{async _call(e){return new Ei(await super._call(e))}}class ce extends oe{async _call(e){return new zi(await super._call(e))}}class de extends R{}class ue extends de{}class pe extends de{async _call(e){return new Li(await super._call(e))}}class he extends de{async _call(e){return new Si(await super._call(e))}}class me extends de{async _call(e){return new Ei(await super._call(e))}}class _e extends de{async _call(e){return new zi(await super._call(e))}}class fe extends R{}class ge extends fe{}class Me extends fe{async _call(e){return new Li(await super._call(e))}}class we extends fe{async _call(e){return new Si(await super._call(e))}}class be extends fe{async _call(e){return new Ei(await super._call(e))}}class Te extends fe{async _call(e){return new zi(await super._call(e))}}class xe extends R{}class ye extends xe{}class ke extends xe{async _call(e){return new Li(await super._call(e))}}class Fe extends xe{async _call(e){return new Si(await super._call(e))}}class Ce extends xe{async _call(e){return new Ei(await super._call(e))}}class Pe extends xe{async _call(e){return new zi(await super._call(e))}}class ve extends R{}class Se extends ve{}class Ae extends ve{async _call(e){return new Li(await super._call(e))}}class Ee extends ve{async _call(e){return new Si(await super._call(e))}}class Le extends ve{async _call(e){return new Ei(await super._call(e))}}class ze extends ve{async _call(e){return new zi(await super._call(e))}}class Ie extends R{}class Be extends Ie{}class Ne extends Ie{async _call(e){return new Si(await super._call(e))}}class Oe extends Ie{async _call(e){return new Ei(await super._call(e))}}class De extends Ie{async _call(e){return new zi(await super._call(e))}}class Ve extends Ie{async _call(e){return new Li(await super._call(e))}}class je extends R{}class Re extends je{}class Ge extends je{async _call(e){return new Li(await super._call(e))}}class qe extends je{async _call(e){return new Si(await super._call(e))}}class $e extends je{async _call(e){return new Ei(await super._call(e))}}class We extends R{}class Ue extends We{}class Xe extends We{async _call(e){return new Li(await super._call(e))}}class Qe extends We{async _call(e){return new Si(await super._call(e))}}class He extends We{async _call(e){return new zi(await super._call(e))}}class Ye extends R{}class Ke extends Ye{}class Je extends Ye{async _call(e){return new Li(await super._call(e))}}class Ze extends Ye{async _call(e){return new Si(await super._call(e))}}class et extends Ye{async _call(e){return new Ei(await super._call(e))}}class tt extends Ye{async _call(e){return new zi(await super._call(e))}}class nt extends R{}class rt extends nt{}class ot extends nt{async _call(e){return new Li(await super._call(e))}}class st extends nt{async _call(e){return new Si(await super._call(e))}}class at extends nt{async _call(e){return new zi(await super._call(e))}}class it extends R{}class lt extends it{}class ct extends it{async _call(e){return new Si(await super._call(e))}}class dt extends it{async _call(e){return new zi(await super._call(e))}}class ut extends it{async _call(e){return new Li(await super._call(e))}}class pt extends R{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];constructor(e,t,n){super(e,t),this.generation_config=n}}class ht extends pt{}class mt extends pt{}class _t extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class ft extends _t{}class gt extends _t{}class Mt extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class wt extends Mt{}class bt extends Mt{}class Tt extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class xt extends Tt{}class yt extends Tt{}class kt extends Tt{async _call(e){return new Si(await super._call(e))}}class Ft extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Ct extends Ft{}class Pt extends Ft{}class vt extends Ft{async _call(e){return new Si(await super._call(e))}}class St extends Ft{}class At extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Et extends At{}class Lt extends At{}class zt extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class It extends zt{}class Bt extends zt{}class Nt extends R{}class Ot extends Nt{}class Dt extends Nt{async _call(e){return new Li(await super._call(e))}}class Vt extends Nt{async _call(e){return new Si(await super._call(e))}}class jt extends Nt{async _call(e){return new Ei(await super._call(e))}}class Rt extends Nt{async _call(e){return new zi(await super._call(e))}}class Gt extends R{}class qt extends Gt{}class $t extends Gt{async _call(e){return new Li(await super._call(e))}}class Wt extends Gt{async _call(e){return new Si(await super._call(e))}}class Ut extends Gt{async _call(e){return new Ei(await super._call(e))}}class Xt extends Gt{async _call(e){return new zi(await super._call(e))}}class Qt extends R{}class Ht extends Qt{}class Yt extends Qt{async _call(e){return new Li(await super._call(e))}}class Kt extends Qt{async _call(e){return new Si(await super._call(e))}}class Jt extends Qt{async _call(e){return new Ei(await super._call(e))}}class Zt extends Qt{async _call(e){return new zi(await super._call(e))}}class en extends R{}class tn extends en{}class nn extends en{}class rn extends R{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"];constructor(e,t,n){super(e,t),this.generation_config=n}}class on extends rn{}class sn extends rn{_prepare_generation_config(e,t){return super._prepare_generation_config(e,t,f.WhisperGenerationConfig)}_retrieve_init_tokens(e){const t=[e.decoder_start_token_id];let n=e.language;const r=e.task;if(e.is_multilingual){n||(console.warn("No language specified - defaulting to English (en)."),n="en");const o=`<|${(0,g.whisper_language_to_code)(n)}|>`;t.push(e.lang_to_id[o]),t.push(e.task_to_id[r??"transcribe"])}else if(n||r)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&t.at(-1)!==e.no_timestamps_token_id?t.push(e.no_timestamps_token_id):e.return_timestamps&&t.at(-1)===e.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),t.pop()),t.filter((e=>null!=e))}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,...o}){t=this._prepare_generation_config(t,o);const s=o.decoder_input_ids??this._retrieve_init_tokens(t);if(t.return_timestamps&&(n??=new c.LogitsProcessorList,n.push(new c.WhisperTimeStampLogitsProcessor(t,s))),t.begin_suppress_tokens&&(n??=new c.LogitsProcessorList,n.push(new c.SuppressTokensAtBeginLogitsProcessor(t.begin_suppress_tokens,s.length))),t.return_token_timestamps){if(!t.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===t.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),t.output_attentions=!0,t.return_dict_in_generate=!0}const a=await super.generate({inputs:e,generation_config:t,logits_processor:n,decoder_input_ids:s,...o});return t.return_token_timestamps&&(a.token_timestamps=this._extract_token_timestamps(a,t.alignment_heads,t.num_frames)),a}_extract_token_timestamps(e,t,n=null,r=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==n&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let o=this.config.median_filter_width;void 0===o&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),o=7);const s=e.cross_attentions,a=Array.from({length:this.config.decoder_layers},((e,t)=>(0,u.cat)(s.map((e=>e[t])),2))),l=(0,u.stack)(t.map((([e,t])=>{if(e>=a.length)throw new Error(`Layer index ${e} is out of bounds for cross attentions (length ${a.length}).`);return n?a[e].slice(null,t,null,[0,n]):a[e].slice(null,t)}))).transpose(1,0,2,3),[c,d]=(0,u.std_mean)(l,-2,0,!0),h=l.clone();for(let e=0;e<h.dims[0];++e){const t=h[e];for(let n=0;n<t.dims[0];++n){const r=t[n],s=c[e][n][0].data,a=d[e][n][0].data;for(let e=0;e<r.dims[0];++e){let t=r[e].data;for(let e=0;e<t.length;++e)t[e]=(t[e]-a[e])/s[e];t.set((0,p.medianFilter)(t,o))}}}const m=[(0,u.mean)(h,1)],_=e.sequences.dims,f=new u.Tensor("float32",new Float32Array(_[0]*_[1]),_);for(let e=0;e<_[0];++e){const t=m[e].neg().squeeze_(0),[n,o]=(0,p.dynamic_time_warping)(t.tolist()),s=Array.from({length:n.length-1},((e,t)=>n[t+1]-n[t])),a=(0,i.mergeArrays)([1],s).map((e=>!!e)),l=[];for(let e=0;e<a.length;++e)a[e]&&l.push(o[e]*r);f[e].data.set(l,1)}return f}}class an extends R{main_input_name="pixel_values";forward_params=["pixel_values","input_ids","encoder_hidden_states","past_key_values"];constructor(e,t,n){super(e,t),this.generation_config=n}}class ln extends R{forward_params=["input_ids","pixel_values","attention_mask","position_ids","past_key_values"];constructor(e,t,n){super(e,t),this.generation_config=n}}class cn extends ln{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:n,attention_mask:r}){const o=this.config.image_token_index,s=n.tolist().map((e=>e.findIndex((e=>e==o)))),a=s.every((e=>-1===e)),i=s.every((e=>-1!==e));if(!a&&!i)throw new Error("Every input should contain either 0 or 1 image token.");if(a)return{inputs_embeds:e,attention_mask:r};const l=[],c=[];for(let n=0;n<s.length;++n){const o=s[n],a=e[n],i=t[n],d=r[n];l.push((0,u.cat)([a.slice([0,o]),i,a.slice([o+1,a.dims[0]])],0)),c.push((0,u.cat)([d.slice([0,o]),(0,u.ones)([i.dims[0]]),d.slice([o+1,d.dims[0]])],0))}return{inputs_embeds:(0,u.stack)(l,0),attention_mask:(0,u.stack)(c,0)}}}class dn extends cn{}class un extends R{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds";constructor(e,t,n){super(e,t),this.generation_config=n}}class pn extends un{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:n,attention_mask:r}){return{inputs_embeds:(0,u.cat)([t,e],1),attention_mask:(0,u.cat)([(0,u.ones)(t.dims.slice(0,2)),r],1)}}async _prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:n,attention_mask:r}){if(!e&&!t)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let o,s;return e&&(o=await this.encode_text({input_ids:e})),t&&(s=await this.encode_image({pixel_values:t})),o&&s?({inputs_embeds:n,attention_mask:r}=this._merge_input_ids_with_image_features({inputs_embeds:o,image_features:s,input_ids:e,attention_mask:r})):n=o||s,{inputs_embeds:n,attention_mask:r}}async forward({input_ids:e,pixel_values:t,attention_mask:n,decoder_input_ids:r,decoder_attention_mask:o,encoder_outputs:s,past_key_values:a,inputs_embeds:i,decoder_inputs_embeds:l}){if(i||({inputs_embeds:i,attention_mask:n}=await this._prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:i,attention_mask:n})),!s){let{last_hidden_state:e}=await B(this,{inputs_embeds:i,attention_mask:n});s=e}if(!l){if(!r)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");l=await this.encode_text({input_ids:r})}const c={inputs_embeds:l,attention_mask:o,encoder_attention_mask:n,encoder_hidden_states:s,past_key_values:a};return await N(this,c,!0)}}class hn extends R{}class mn extends hn{}class _n extends hn{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class fn extends hn{static async from_pretrained(e,t={}){return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}class gn extends R{}class Mn extends gn{}class wn extends gn{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class bn extends hn{static async from_pretrained(e,t={}){return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}class Tn extends R{}class xn extends Tn{}class yn extends R{}class kn extends yn{}class Fn extends yn{}class Cn extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Pn extends Cn{}class vn extends Cn{}class Sn extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class An extends Sn{}class En extends Sn{}class Ln extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class zn extends Ln{}class In extends Ln{}class Bn extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Nn extends Bn{}class On extends Bn{}class Dn extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Vn extends Dn{}class jn extends Dn{}class Rn extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Gn extends Rn{}class qn extends Rn{}class $n extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Wn extends $n{}class Un extends $n{}class Xn extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Qn extends Xn{}class Hn extends Xn{}class Yn extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Kn extends Yn{}class Jn extends Yn{}class Zn extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class er extends Zn{}class tr extends Zn{}class nr extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class rr extends nr{}class or extends nr{}class sr extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class ar extends sr{}class ir extends sr{}class lr extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class cr extends lr{}class dr extends lr{}class ur extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class pr extends ur{}class hr extends ur{}class mr extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class _r extends mr{}class fr extends mr{}class gr extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Mr extends gr{}class wr extends gr{}class br extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Tr extends br{}class xr extends br{}class yr extends R{}class kr extends yr{}class Fr extends yr{async _call(e){return new Si(await super._call(e))}}class Cr extends R{}class Pr extends Cr{}class vr extends Cr{async _call(e){return new Si(await super._call(e))}}class Sr extends R{}class Ar extends Sr{async _call(e){return new Ni(await super._call(e))}}class Er extends R{}class Lr extends Er{}class zr extends Er{async _call(e){return new Si(await super._call(e))}}class Ir extends R{}class Br extends Ir{}class Nr extends Ir{async _call(e){return new Si(await super._call(e))}}class Or extends R{}class Dr extends Or{}class Vr extends Or{}class jr extends R{}class Rr extends jr{}class Gr extends jr{}class qr extends R{}class $r extends qr{}class Wr extends qr{async _call(e){return new Si(await super._call(e))}}class Ur extends R{}class Xr extends Ur{}class Qr extends Ur{async _call(e){return new Yr(await super._call(e))}}class Hr extends Ur{async _call(e){return new Kr(await super._call(e))}}class Yr extends G{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Kr extends G{constructor({logits:e,pred_boxes:t,pred_masks:n}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=n}}class Jr extends R{}class Zr extends Jr{}class eo extends Jr{async _call(e){return new to(await super._call(e))}}class to extends G{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class no extends R{}class ro extends no{}class oo extends no{async _call(e){return new so(await super._call(e))}}class so extends Yr{}class ao extends R{}class io extends ao{}class lo extends ao{async _call(e){return new Si(await super._call(e))}}class co extends R{}class uo extends co{}class po extends co{async _call(e){return new Si(await super._call(e))}}class ho extends R{}class mo extends ho{}class _o extends ho{async _call(e){return new Si(await super._call(e))}}class fo extends R{}class go extends fo{}class Mo extends fo{}class wo extends R{}class bo extends wo{}class To extends wo{}class xo extends R{}class yo extends xo{}class ko extends R{}class Fo extends ko{}class Co extends ko{}class Po extends R{}class vo extends Po{}class So extends R{}class Ao extends So{}class Eo extends So{async _call(e){return new Si(await super._call(e))}}class Lo extends R{}class zo extends Lo{}class Io extends Lo{async _call(e){return new Si(await super._call(e))}}class Bo extends R{}class No extends Bo{}class Oo extends Bo{async _call(e){return new Si(await super._call(e))}}class Do extends R{}class Vo extends Do{}class jo extends Do{async _call(e){return new Ro(await super._call(e))}}class Ro extends G{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Go extends R{}class qo extends Go{async get_image_embeddings({pixel_values:e}){return await B(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const t=e.input_points.dims.slice(0,-1),n=t.reduce(((e,t)=>e*t),1);e.input_labels=new u.Tensor("int64",new BigInt64Array(n).fill(1n),t)}const t={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(t.input_points=e.input_points),e.input_labels&&(t.input_labels=e.input_labels),e.input_boxes&&(t.input_boxes=e.input_boxes),await A(this.sessions.prompt_encoder_mask_decoder,t)}async _call(e){return new $o(await super._call(e))}}class $o extends G{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class Wo extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Uo extends Wo{}class Xo extends Wo{}class Qo extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Ho extends Qo{}class Yo extends Qo{}class Ko extends R{}class Jo extends Ko{}class Zo extends Ko{async _call(e){return new Ii(await super._call(e))}}class es extends Ko{async _call(e){return new Si(await super._call(e))}}class ts extends Ko{async _call(e){return new Ei(await super._call(e))}}class ns extends R{}class rs extends ns{}class os extends ns{async _call(e){return new Ei(await super._call(e))}}class ss extends R{}class as extends ss{}class is extends R{}class ls extends is{}class cs extends is{async _call(e){return new Ii(await super._call(e))}}class ds extends is{async _call(e){return new Si(await super._call(e))}}class us extends R{}class ps extends us{}class hs extends us{async _call(e){return new Ii(await super._call(e))}}class ms extends us{async _call(e){return new Si(await super._call(e))}}class _s extends us{async _call(e){return new Ei(await super._call(e))}}class fs extends R{}class gs extends fs{}class Ms extends fs{async _call(e){return new Ii(await super._call(e))}}class ws extends fs{async _call(e){return new Si(await super._call(e))}}class bs extends R{}class Ts extends Ko{}class xs extends Ko{async _call(e){return new Ii(await super._call(e))}}class ys extends Ko{async _call(e){return new Si(await super._call(e))}}class ks extends R{}class Fs extends ks{}class Cs extends ks{async _call(e){return new Ii(await super._call(e))}}class Ps extends ks{async _call(e){return new Si(await super._call(e))}}class vs extends ks{async _call(e){return new Ai(await super._call(e))}}class Ss extends ks{async _call(e){return new Ei(await super._call(e))}}class As extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Es extends As{}class Ls extends As{}class zs extends As{async generate_speech(e,t,{threshold:n=.5,minlenratio:r=0,maxlenratio:o=20,vocoder:s=null}={}){const a={input_ids:e},{encoder_outputs:i,encoder_attention_mask:l}=await B(this,a),c=i.dims[1]/this.config.reduction_factor,d=Math.floor(c*o),p=Math.floor(c*r),h=this.config.num_mel_bins;let m=[],_=null,f=null,g=0;for(;;){++g;const e=z(!!f);let r;r=f?f.output_sequence_out:new u.Tensor("float32",new Float32Array(h),[1,1,h]);let o={use_cache_branch:e,output_sequence:r,encoder_attention_mask:l,speaker_embeddings:t,encoder_hidden_states:i};this.addPastKeyValues(o,_),f=await A(this.sessions.decoder_model_merged,o),_=this.getPastKeyValues(f,_);const{prob:s,spectrum:a}=f;if(m.push(a),g>=p&&(Array.from(s.data).filter((e=>e>=n)).length>0||g>=d))break}const M=(0,u.cat)(m),{waveform:w}=await A(s.sessions.model,{spectrogram:M});return{spectrogram:M,waveform:w}}}class Is extends R{main_input_name="spectrogram"}class Bs extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Ns extends Bs{}class Os extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Ds extends Os{}class Vs extends Os{}class js extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class Rs extends js{}class Gs extends js{}class qs extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class $s extends qs{}class Ws extends qs{}class Us extends R{}class Xs extends Us{}class Qs extends Us{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class Hs extends Us{static async from_pretrained(e,t={}){return t.model_file_name??="audio_model",super.from_pretrained(e,t)}}class Ys extends R{}class Ks extends Ys{async _call(e){return new Oi(await super._call(e))}}class Js extends R{}class Zs extends Js{}class ea extends Js{}class ta extends Js{}class na extends R{constructor(e,t,n){super(e,t),this.generation_config=n}}class ra extends na{}class oa extends na{}class sa extends R{}class aa extends sa{}class ia extends sa{async _call(e){return new Si(await super._call(e))}}class la extends R{}class ca extends la{}class da extends la{}class ua extends R{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];constructor(e,t,n){super(e,t),this.generation_config=n}_apply_and_filter_by_delay_pattern_mask(e){const[t,n]=e.dims,r=this.config.decoder.num_codebooks,o=n-r;let s=0;for(let t=0;t<e.size;++t){if(e.data[t]===this.config.decoder.pad_token_id)continue;const a=t%n-Math.floor(t/n)%r;a>0&&a<=o&&(e.data[s++]=e.data[t])}const a=Math.floor(t/r),i=s/(a*r);return new u.Tensor(e.type,e.data.slice(0,s),[a,r,i])}prepare_inputs_for_generation(e,t,n){let r=structuredClone(e);for(let e=0;e<r.length;++e)for(let t=0;t<r[e].length;++t)e%this.config.decoder.num_codebooks>=t&&(r[e][t]=BigInt(this.config.decoder.pad_token_id));null!==n.guidance_scale&&n.guidance_scale>1&&(r=r.concat(r));return super.prepare_inputs_for_generation(r,t,n)}async generate(e){const t=await super.generate(e),n=this._apply_and_filter_by_delay_pattern_mask(t).unsqueeze_(0),{audio_values:r}=await A(this.sessions.encodec_decode,{audio_codes:n});return r}}class pa extends R{}class ha extends pa{}class ma extends pa{async _call(e){return new Si(await super._call(e))}}class _a extends R{}class fa extends _a{}class ga extends _a{async _call(e){return new Si(await super._call(e))}}class Ma extends R{}class wa extends Ma{}class ba extends Ma{async _call(e){return new Si(await super._call(e))}}class Ta extends R{}class xa extends Ta{}class ya extends Ta{async _call(e){return new Si(await super._call(e))}}class ka{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:o=null,local_files_only:s=!1,revision:a="main",model_file_name:i=null,subfolder:l="onnx",device:c=null,dtype:d=null,use_external_data_format:u=null,session_options:p={}}={}){let h={progress_callback:t,config:n,cache_dir:o,local_files_only:s,revision:a,model_file_name:i,subfolder:l,device:c,dtype:d,use_external_data_format:u,session_options:p};if(h.config=await r.AutoConfig.from_pretrained(e,h),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let t of this.MODEL_CLASS_MAPPINGS){const n=t.get(h.config.model_type);if(n)return await n[1].from_pretrained(e,h)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${h.config.model_type}", attempting to construct from base class.`),await R.from_pretrained(e,h);throw Error(`Unsupported model type: ${h.config.model_type}`)}}const Fa=new Map([["bert",["BertModel",W]],["nomic_bert",["NomicBertModel",K]],["roformer",["RoFormerModel",Z]],["electra",["ElectraModel",ue]],["esm",["EsmModel",Re]],["convbert",["ConvBertModel",se]],["camembert",["CamembertModel",ge]],["deberta",["DebertaModel",ye]],["deberta-v2",["DebertaV2Model",Se]],["mpnet",["MPNetModel",Ke]],["albert",["AlbertModel",lt]],["distilbert",["DistilBertModel",Be]],["roberta",["RobertaModel",Ot]],["xlm",["XLMModel",qt]],["xlm-roberta",["XLMRobertaModel",Ht]],["clap",["ClapModel",Xs]],["clip",["CLIPModel",mn]],["clipseg",["CLIPSegModel",kn]],["chinese_clip",["ChineseCLIPModel",xn]],["siglip",["SiglipModel",Mn]],["mobilebert",["MobileBertModel",Ue]],["squeezebert",["SqueezeBertModel",rt]],["wav2vec2",["Wav2Vec2Model",Jo]],["wav2vec2-bert",["Wav2Vec2BertModel",gs]],["unispeech",["UniSpeechModel",ls]],["unispeech-sat",["UniSpeechSatModel",ps]],["hubert",["HubertModel",Ts]],["wavlm",["WavLMModel",Fs]],["audio-spectrogram-transformer",["ASTModel",tn]],["vits",["VitsModel",Ks]],["pyannote",["PyAnnoteModel",rs]],["wespeaker-resnet",["WeSpeakerResNetModel",as]],["detr",["DetrModel",Xr]],["rt_detr",["RTDetrModel",Zr]],["table-transformer",["TableTransformerModel",ro]],["vit",["ViTModel",kr]],["fastvit",["FastViTModel",Pr]],["mobilevit",["MobileViTModel",Lr]],["mobilevitv2",["MobileViTV2Model",Br]],["owlvit",["OwlViTModel",Dr]],["owlv2",["Owlv2Model",Rr]],["beit",["BeitModel",$r]],["deit",["DeiTModel",io]],["convnext",["ConvNextModel",Ao]],["convnextv2",["ConvNextV2Model",zo]],["dinov2",["Dinov2Model",No]],["resnet",["ResNetModel",uo]],["swin",["SwinModel",mo]],["swin2sr",["Swin2SRModel",go]],["donut-swin",["DonutSwinModel",vo]],["yolos",["YolosModel",Vo]],["dpt",["DPTModel",bo]],["glpn",["GLPNModel",Fo]],["hifigan",["SpeechT5HifiGan",Is]],["efficientnet",["EfficientNetModel",aa]],["mobilenet_v1",["MobileNetV1Model",ha]],["mobilenet_v2",["MobileNetV2Model",fa]],["mobilenet_v3",["MobileNetV3Model",wa]],["mobilenet_v4",["MobileNetV4Model",xa]]]),Ca=new Map([["t5",["T5Model",ht]],["longt5",["LongT5Model",ft]],["mt5",["MT5Model",wt]],["bart",["BartModel",xt]],["mbart",["MBartModel",Ct]],["marian",["MarianModel",Uo]],["whisper",["WhisperModel",on]],["m2m_100",["M2M100Model",Ho]],["blenderbot",["BlenderbotModel",Et]],["blenderbot-small",["BlenderbotSmallModel",It]]]),Pa=new Map([["bloom",["BloomModel",_r]],["gpt2",["GPT2Model",Pn]],["gptj",["GPTJModel",Nn]],["gpt_bigcode",["GPTBigCodeModel",Vn]],["gpt_neo",["GPTNeoModel",An]],["gpt_neox",["GPTNeoXModel",zn]],["codegen",["CodeGenModel",Gn]],["llama",["LlamaModel",Wn]],["cohere",["CohereModel",Qn]],["gemma",["GemmaModel",Kn]],["gemma2",["Gemma2Model",er]],["openelm",["OpenELMModel",rr]],["qwen2",["Qwen2Model",ar]],["phi",["PhiModel",cr]],["phi3",["Phi3Model",pr]],["mpt",["MptModel",Mr]],["opt",["OPTModel",Tr]],["mistral",["MistralModel",Ds]],["starcoder2",["Starcoder2Model",Rs]],["falcon",["FalconModel",$s]],["stablelm",["StableLmModel",ra]]]),va=new Map([["speecht5",["SpeechT5ForSpeechToText",Ls]],["whisper",["WhisperForConditionalGeneration",sn]]]),Sa=new Map([["speecht5",["SpeechT5ForTextToSpeech",zs]]]),Aa=new Map([["vits",["VitsModel",Ks]],["musicgen",["MusicgenForConditionalGeneration",ua]]]),Ea=new Map([["bert",["BertForSequenceClassification",X]],["roformer",["RoFormerForSequenceClassification",te]],["electra",["ElectraForSequenceClassification",he]],["esm",["EsmForSequenceClassification",qe]],["convbert",["ConvBertForSequenceClassification",ie]],["camembert",["CamembertForSequenceClassification",we]],["deberta",["DebertaForSequenceClassification",Fe]],["deberta-v2",["DebertaV2ForSequenceClassification",Ee]],["mpnet",["MPNetForSequenceClassification",Ze]],["albert",["AlbertForSequenceClassification",ct]],["distilbert",["DistilBertForSequenceClassification",Ne]],["roberta",["RobertaForSequenceClassification",Vt]],["xlm",["XLMForSequenceClassification",Wt]],["xlm-roberta",["XLMRobertaForSequenceClassification",Kt]],["bart",["BartForSequenceClassification",kt]],["mbart",["MBartForSequenceClassification",vt]],["mobilebert",["MobileBertForSequenceClassification",Qe]],["squeezebert",["SqueezeBertForSequenceClassification",st]]]),La=new Map([["bert",["BertForTokenClassification",Q]],["roformer",["RoFormerForTokenClassification",ne]],["electra",["ElectraForTokenClassification",me]],["esm",["EsmForTokenClassification",$e]],["convbert",["ConvBertForTokenClassification",le]],["camembert",["CamembertForTokenClassification",be]],["deberta",["DebertaForTokenClassification",Ce]],["deberta-v2",["DebertaV2ForTokenClassification",Le]],["mpnet",["MPNetForTokenClassification",et]],["distilbert",["DistilBertForTokenClassification",Oe]],["roberta",["RobertaForTokenClassification",jt]],["xlm",["XLMForTokenClassification",Ut]],["xlm-roberta",["XLMRobertaForTokenClassification",Jt]]]),za=new Map([["t5",["T5ForConditionalGeneration",mt]],["longt5",["LongT5ForConditionalGeneration",gt]],["mt5",["MT5ForConditionalGeneration",bt]],["bart",["BartForConditionalGeneration",yt]],["mbart",["MBartForConditionalGeneration",Pt]],["marian",["MarianMTModel",Xo]],["m2m_100",["M2M100ForConditionalGeneration",Yo]],["blenderbot",["BlenderbotForConditionalGeneration",Lt]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Bt]]]),Ia=new Map([["bloom",["BloomForCausalLM",fr]],["gpt2",["GPT2LMHeadModel",vn]],["gptj",["GPTJForCausalLM",On]],["gpt_bigcode",["GPTBigCodeForCausalLM",jn]],["gpt_neo",["GPTNeoForCausalLM",En]],["gpt_neox",["GPTNeoXForCausalLM",In]],["codegen",["CodeGenForCausalLM",qn]],["llama",["LlamaForCausalLM",Un]],["cohere",["CohereForCausalLM",Hn]],["gemma",["GemmaForCausalLM",Jn]],["gemma2",["Gemma2ForCausalLM",tr]],["openelm",["OpenELMForCausalLM",or]],["qwen2",["Qwen2ForCausalLM",ir]],["phi",["PhiForCausalLM",dr]],["phi3",["Phi3ForCausalLM",hr]],["mpt",["MptForCausalLM",wr]],["opt",["OPTForCausalLM",xr]],["mbart",["MBartForCausalLM",St]],["mistral",["MistralForCausalLM",Vs]],["starcoder2",["Starcoder2ForCausalLM",Gs]],["falcon",["FalconForCausalLM",Ws]],["trocr",["TrOCRForCausalLM",Ns]],["stablelm",["StableLmForCausalLM",oa]]]),Ba=new Map([["bert",["BertForMaskedLM",U]],["roformer",["RoFormerForMaskedLM",ee]],["electra",["ElectraForMaskedLM",pe]],["esm",["EsmForMaskedLM",Ge]],["convbert",["ConvBertForMaskedLM",ae]],["camembert",["CamembertForMaskedLM",Me]],["deberta",["DebertaForMaskedLM",ke]],["deberta-v2",["DebertaV2ForMaskedLM",Ae]],["mpnet",["MPNetForMaskedLM",Je]],["albert",["AlbertForMaskedLM",ut]],["distilbert",["DistilBertForMaskedLM",Ve]],["roberta",["RobertaForMaskedLM",Dt]],["xlm",["XLMWithLMHeadModel",$t]],["xlm-roberta",["XLMRobertaForMaskedLM",Yt]],["mobilebert",["MobileBertForMaskedLM",Xe]],["squeezebert",["SqueezeBertForMaskedLM",ot]]]),Na=new Map([["bert",["BertForQuestionAnswering",H]],["roformer",["RoFormerForQuestionAnswering",re]],["electra",["ElectraForQuestionAnswering",_e]],["convbert",["ConvBertForQuestionAnswering",ce]],["camembert",["CamembertForQuestionAnswering",Te]],["deberta",["DebertaForQuestionAnswering",Pe]],["deberta-v2",["DebertaV2ForQuestionAnswering",ze]],["mpnet",["MPNetForQuestionAnswering",tt]],["albert",["AlbertForQuestionAnswering",dt]],["distilbert",["DistilBertForQuestionAnswering",De]],["roberta",["RobertaForQuestionAnswering",Rt]],["xlm",["XLMForQuestionAnswering",Xt]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Zt]],["mobilebert",["MobileBertForQuestionAnswering",He]],["squeezebert",["SqueezeBertForQuestionAnswering",at]]]),Oa=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",an]]]),Da=new Map([["llava",["LlavaForConditionalGeneration",cn]],["moondream1",["Moondream1ForConditionalGeneration",dn]],["florence2",["Florence2ForConditionalGeneration",pn]]]),Va=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",an]]]),ja=new Map([["vit",["ViTForImageClassification",Fr]],["fastvit",["FastViTForImageClassification",vr]],["mobilevit",["MobileViTForImageClassification",zr]],["mobilevitv2",["MobileViTV2ForImageClassification",Nr]],["beit",["BeitForImageClassification",Wr]],["deit",["DeiTForImageClassification",lo]],["convnext",["ConvNextForImageClassification",Eo]],["convnextv2",["ConvNextV2ForImageClassification",Io]],["dinov2",["Dinov2ForImageClassification",Oo]],["resnet",["ResNetForImageClassification",po]],["swin",["SwinForImageClassification",_o]],["segformer",["SegformerForImageClassification",ea]],["efficientnet",["EfficientNetForImageClassification",ia]],["mobilenet_v1",["MobileNetV1ForImageClassification",ma]],["mobilenet_v2",["MobileNetV2ForImageClassification",ga]],["mobilenet_v3",["MobileNetV3ForImageClassification",ba]],["mobilenet_v4",["MobileNetV4ForImageClassification",ya]]]),Ra=new Map([["detr",["DetrForObjectDetection",Qr]],["rt_detr",["RTDetrForObjectDetection",eo]],["table-transformer",["TableTransformerForObjectDetection",oo]],["yolos",["YolosForObjectDetection",jo]]]),Ga=new Map([["owlvit",["OwlViTForObjectDetection",Vr]],["owlv2",["Owlv2ForObjectDetection",Gr]]]),qa=new Map([["detr",["DetrForSegmentation",Hr]],["clipseg",["CLIPSegForImageSegmentation",Fn]]]),$a=new Map([["segformer",["SegformerForSemanticSegmentation",ta]]]),Wa=new Map([["sam",["SamModel",qo]]]),Ua=new Map([["wav2vec2",["Wav2Vec2ForCTC",Zo]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Ms]],["unispeech",["UniSpeechForCTC",cs]],["unispeech-sat",["UniSpeechSatForCTC",hs]],["wavlm",["WavLMForCTC",Cs]],["hubert",["HubertForCTC",xs]]]),Xa=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",es]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",ws]],["unispeech",["UniSpeechForSequenceClassification",ds]],["unispeech-sat",["UniSpeechSatForSequenceClassification",ms]],["wavlm",["WavLMForSequenceClassification",Ps]],["hubert",["HubertForSequenceClassification",ys]],["audio-spectrogram-transformer",["ASTForAudioClassification",nn]]]),Qa=new Map([["wavlm",["WavLMForXVector",vs]]]),Ha=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",_s]],["wavlm",["WavLMForAudioFrameClassification",Ss]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",ts]],["pyannote",["PyAnnoteForAudioFrameClassification",os]]]),Ya=new Map([["vitmatte",["VitMatteForImageMatting",Ar]]]),Ka=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Mo]]]),Ja=new Map([["dpt",["DPTForDepthEstimation",To]],["depth_anything",["DepthAnythingForDepthEstimation",yo]],["glpn",["GLPNForDepthEstimation",Co]]]),Za=new Map([["clip",["CLIPVisionModelWithProjection",fn]],["siglip",["SiglipVisionModel",bn]]]),ei=[[Fa,M],[Ca,w],[Pa,x],[Ea,M],[La,M],[za,b],[va,b],[Ia,x],[Ba,M],[Na,M],[Oa,T],[Da,k],[ja,M],[qa,M],[$a,M],[Ya,M],[Ka,M],[Ja,M],[Ra,M],[Ga,M],[Wa,y],[Ua,M],[Xa,M],[Sa,b],[Aa,M],[Qa,M],[Ha,M],[Za,M]];for(const[e,t]of ei)for(const[n,r]of e.values())C.set(n,t),v.set(r,n),P.set(n,r);const ti=[["MusicgenForConditionalGeneration",ua,F],["CLIPTextModelWithProjection",_n,M],["SiglipTextModel",wn,M],["ClapTextModelWithProjection",Qs,M],["ClapAudioModelWithProjection",Hs,M]];for(const[e,t,n]of ti)C.set(e,n),v.set(t,e),P.set(e,t);class ni extends ka{static MODEL_CLASS_MAPPINGS=ei.map((e=>e[0]));static BASE_IF_FAIL=!0}class ri extends ka{static MODEL_CLASS_MAPPINGS=[Ea]}class oi extends ka{static MODEL_CLASS_MAPPINGS=[La]}class si extends ka{static MODEL_CLASS_MAPPINGS=[za]}class ai extends ka{static MODEL_CLASS_MAPPINGS=[va]}class ii extends ka{static MODEL_CLASS_MAPPINGS=[Sa]}class li extends ka{static MODEL_CLASS_MAPPINGS=[Aa]}class ci extends ka{static MODEL_CLASS_MAPPINGS=[Ia]}class di extends ka{static MODEL_CLASS_MAPPINGS=[Ba]}class ui extends ka{static MODEL_CLASS_MAPPINGS=[Na]}class pi extends ka{static MODEL_CLASS_MAPPINGS=[Oa]}class hi extends ka{static MODEL_CLASS_MAPPINGS=[ja]}class mi extends ka{static MODEL_CLASS_MAPPINGS=[qa]}class _i extends ka{static MODEL_CLASS_MAPPINGS=[$a]}class fi extends ka{static MODEL_CLASS_MAPPINGS=[Ra]}class gi extends ka{static MODEL_CLASS_MAPPINGS=[Ga]}class Mi extends ka{static MODEL_CLASS_MAPPINGS=[Wa]}class wi extends ka{static MODEL_CLASS_MAPPINGS=[Ua]}class bi extends ka{static MODEL_CLASS_MAPPINGS=[Xa]}class Ti extends ka{static MODEL_CLASS_MAPPINGS=[Qa]}class xi extends ka{static MODEL_CLASS_MAPPINGS=[Ha]}class yi extends ka{static MODEL_CLASS_MAPPINGS=[Va]}class ki extends ka{static MODEL_CLASS_MAPPINGS=[Ya]}class Fi extends ka{static MODEL_CLASS_MAPPINGS=[Ka]}class Ci extends ka{static MODEL_CLASS_MAPPINGS=[Ja]}class Pi extends ka{static MODEL_CLASS_MAPPINGS=[Za]}class vi extends G{constructor({logits:e,past_key_values:t,encoder_outputs:n,decoder_attentions:r=null,cross_attentions:o=null}){super(),this.logits=e,this.past_key_values=t,this.encoder_outputs=n,this.decoder_attentions=r,this.cross_attentions=o}}class Si extends G{constructor({logits:e}){super(),this.logits=e}}class Ai extends G{constructor({logits:e,embeddings:t}){super(),this.logits=e,this.embeddings=t}}class Ei extends G{constructor({logits:e}){super(),this.logits=e}}class Li extends G{constructor({logits:e}){super(),this.logits=e}}class zi extends G{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class Ii extends G{constructor({logits:e}){super(),this.logits=e}}class Bi extends G{constructor({logits:e,past_key_values:t}){super(),this.logits=e,this.past_key_values=t}}class Ni extends G{constructor({alphas:e}){super(),this.alphas=e}}class Oi extends G{constructor({waveform:e,spectrogram:t}){super(),this.waveform=e,this.spectrogram=t}}},"./src/models/whisper/common_whisper.js":
/*!**********************************************!*\
  !*** ./src/models/whisper/common_whisper.js ***!
  \**********************************************/(e,t,n)=>{n.r(t),n.d(t,{WHISPER_LANGUAGE_MAPPING:()=>o,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>s,whisper_language_to_code:()=>a});const r=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],o=new Map(r),s=new Map([...r.map((([e,t])=>[t,e])),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function a(e){e=e.toLowerCase();let t=s.get(e);if(void 0===t){if(!o.has(e)){const t=2===e.length?o.keys():o.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(t)}`)}t=e}return t}},"./src/models/whisper/generation_whisper.js":
/*!**************************************************!*\
  !*** ./src/models/whisper/generation_whisper.js ***!
  \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{WhisperGenerationConfig:()=>o});var r=n(/*! ../../generation/configuration_utils.js */"./src/generation/configuration_utils.js");class o extends r.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/ops/registry.js":
/*!*****************************!*\
  !*** ./src/ops/registry.js ***!
  \*****************************/(e,t,n)=>{n.r(t),n.d(t,{TensorOpRegistry:()=>a});var r=n(/*! ../backends/onnx.js */"./src/backends/onnx.js"),o=n(/*! ../utils/tensor.js */"./src/utils/tensor.js");const s=async(e,t,n)=>{const s=await(0,r.createInferenceSession)(new Uint8Array(e),t);return async e=>{const t=Object.fromEntries(Object.entries(e).map((([e,t])=>[e,t.ort_tensor]))),r=await s.run(t);return Array.isArray(n)?n.map((e=>new o.Tensor(r[e]))):new o.Tensor(r[n])}};class a{static session_options={};static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=s([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=s([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=s([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=s([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=s([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=s([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}},"./src/pipelines.js":
/*!**************************!*\
  !*** ./src/pipelines.js ***!
  \**************************/(e,t,n)=>{n.r(t),n.d(t,{AudioClassificationPipeline:()=>v,AutomaticSpeechRecognitionPipeline:()=>A,DepthEstimationPipeline:()=>j,DocumentQuestionAnsweringPipeline:()=>O,FeatureExtractionPipeline:()=>C,FillMaskPipeline:()=>w,ImageClassificationPipeline:()=>L,ImageFeatureExtractionPipeline:()=>P,ImageSegmentationPipeline:()=>z,ImageToImagePipeline:()=>V,ImageToTextPipeline:()=>E,ObjectDetectionPipeline:()=>B,Pipeline:()=>_,QuestionAnsweringPipeline:()=>M,SummarizationPipeline:()=>T,Text2TextGenerationPipeline:()=>b,TextClassificationPipeline:()=>f,TextGenerationPipeline:()=>k,TextToAudioPipeline:()=>D,TokenClassificationPipeline:()=>g,TranslationPipeline:()=>x,ZeroShotAudioClassificationPipeline:()=>S,ZeroShotClassificationPipeline:()=>F,ZeroShotImageClassificationPipeline:()=>I,ZeroShotObjectDetectionPipeline:()=>N,pipeline:()=>q});var r=n(/*! ./tokenizers.js */"./src/tokenizers.js"),o=n(/*! ./models.js */"./src/models.js"),s=n(/*! ./processors.js */"./src/processors.js"),a=n(/*! ./utils/generic.js */"./src/utils/generic.js"),i=n(/*! ./utils/core.js */"./src/utils/core.js"),l=n(/*! ./utils/maths.js */"./src/utils/maths.js"),c=n(/*! ./utils/audio.js */"./src/utils/audio.js"),d=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),u=n(/*! ./utils/image.js */"./src/utils/image.js");async function p(e){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>u.RawImage.read(e))))}async function h(e,t){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>"string"==typeof e||e instanceof URL?(0,c.read_audio)(e,t):e instanceof Float64Array?new Float32Array(e):e)))}function m(e,t){t&&(e=e.map((e=>0|e)));const[n,r,o,s]=e;return{xmin:n,ymin:r,xmax:o,ymax:s}}class _ extends a.Callable{constructor({task:e,model:t,tokenizer:n=null,processor:r=null}){super(),this.task=e,this.model=t,this.tokenizer=n,this.processor=r}async dispose(){await this.model.dispose()}}class f extends _{constructor(e){super(e)}async _call(e,{top_k:t=1}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(n),o="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid():e=>new d.Tensor("float32",(0,l.softmax)(e.data),e.dims),s=this.model.config.id2label,a=[];for(const e of r.logits){const n=o(e),r=await(0,d.topk)(n,t),i=r[0].tolist(),l=r[1].tolist().map(((e,t)=>({label:s?s[e]:`LABEL_${e}`,score:i[t]})));1===t?a.push(...l):a.push(l)}return Array.isArray(e)||1===t?a:a[0]}}class g extends _{constructor(e){super(e)}async _call(e,{ignore_labels:t=["O"]}={}){const n=Array.isArray(e),r=this.tokenizer(n?e:[e],{padding:!0,truncation:!0}),o=(await this.model(r)).logits,s=this.model.config.id2label,a=[];for(let e=0;e<o.dims[0];++e){const n=r.input_ids[e],i=o[e],c=[];for(let e=0;e<i.dims[0];++e){const r=i[e],o=(0,l.max)(r.data)[1],a=s?s[o]:`LABEL_${o}`;if(t.includes(a))continue;const d=this.tokenizer.decode([n[e].item()],{skip_special_tokens:!0});if(""===d)continue;const u=(0,l.softmax)(r.data);c.push({entity:a,score:u[o],index:e,word:d})}a.push(c)}return n?a:a[0]}}class M extends _{constructor(e){super(e)}async _call(e,t,{top_k:n=1}={}){const r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),{start_logits:o,end_logits:s}=await this.model(r),a=r.input_ids.tolist(),c=r.attention_mask.tolist(),d=this.tokenizer.all_special_ids,u=[];for(let e=0;e<o.dims[0];++e){const t=a[e],r=t.findIndex((e=>e==this.tokenizer.sep_token_id)),p=(c[e].map(((e,n)=>1==e&&(0===n||n>r&&-1===d.findIndex((e=>e==t[n]))))),o[e].tolist()),h=s[e].tolist();for(let n=1;n<p.length;++n)(0==c[e]||n<=r||-1!==d.findIndex((e=>e==t[n])))&&(p[n]=-1/0,h[n]=-1/0);const m=(0,l.softmax)(p).map(((e,t)=>[e,t])),_=(0,l.softmax)(h).map(((e,t)=>[e,t]));m[0][0]=0,_[0][0]=0;const f=(0,i.product)(m,_).filter((e=>e[0][1]<=e[1][1])).map((e=>[e[0][1],e[1][1],e[0][0]*e[1][0]])).sort(((e,t)=>t[2]-e[2]));for(let e=0;e<Math.min(f.length,n);++e){const[n,r,o]=f[e],s=t.slice(n,r+1),a=this.tokenizer.decode(s,{skip_special_tokens:!0});u.push({answer:a,score:o})}}return 1===n?u[0]:u}}class w extends _{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:r}=await this.model(n),o=[],s=n.input_ids.tolist();for(let e=0;e<s.length;++e){const n=s[e],a=n.findIndex((e=>e==this.tokenizer.mask_token_id));if(-1===a)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const i=r[e][a],c=await(0,d.topk)(new d.Tensor("float32",(0,l.softmax)(i.data),i.dims),t),u=c[0].tolist(),p=c[1].tolist();o.push(p.map(((e,t)=>{const r=n.slice();return r[a]=e,{score:u[t],token:Number(e),token_str:this.tokenizer.model.vocab[e],sequence:this.tokenizer.decode(r,{skip_special_tokens:!0})}})))}return Array.isArray(e)?o:o[0]}}class b extends _{_key="generated_text";constructor(e){super(e)}async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map((e=>this.model.config.prefix+e)));const n=this.model.config.task_specific_params;n&&n[this.task]&&n[this.task].prefix&&(e=e.map((e=>n[this.task].prefix+e)));const r=this.tokenizer,o={padding:!0,truncation:!0};let s;s=this instanceof x&&"_build_translation_inputs"in r?r._build_translation_inputs(e,o,t):r(e,o);const a=await this.model.generate({...s,...t});return r.batch_decode(a,{skip_special_tokens:!0}).map((e=>({[this._key]:e})))}}class T extends b{_key="summary_text";constructor(e){super(e)}}class x extends b{_key="translation_text";constructor(e){super(e)}}function y(e){return Array.isArray(e)&&e.every((e=>"role"in e&&"content"in e))}class k extends _{constructor(e){super(e)}async _call(e,t={}){let n,r=!1,o=!1;if("string"==typeof e)n=e=[e];else if(Array.isArray(e)&&e.every((e=>"string"==typeof e)))r=!0,n=e;else{if(y(e))e=[e];else{if(!Array.isArray(e)||!e.every(y))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");r=!0}o=!0,n=e.map((e=>this.tokenizer.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0})))}const s=t.add_special_tokens??!1,a=!o&&(t.return_full_text??!0);this.tokenizer.padding_side="left";const i=this.tokenizer(n,{add_special_tokens:s,padding:!0,truncation:!0}),l=await this.model.generate({...i,...t}),c=this.tokenizer.batch_decode(l,{skip_special_tokens:!0});let d;!a&&i.input_ids.dims.at(-1)>0&&(d=this.tokenizer.batch_decode(i.input_ids,{skip_special_tokens:!0}).map((e=>e.length)));const u=Array.from({length:e.length},(e=>[]));for(let t=0;t<c.length;++t){const n=Math.floor(t/l.dims[0]*e.length);d&&(c[t]=c[t].slice(d[n])),u[n].push({generated_text:o?[...e[n],{role:"assistant",content:c[t]}]:c[t]})}return r||1!==u.length?u:u[0]}}class F extends _{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map((([e,t])=>[e.toLowerCase(),t]))),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,t,{hypothesis_template:n="This example is {}.",multi_label:r=!1}={}){const o=Array.isArray(e);o||(e=[e]),Array.isArray(t)||(t=[t]);const s=t.map((e=>n.replace("{}",e))),a=r||1===t.length,i=[];for(const n of e){const e=[];for(const t of s){const r=this.tokenizer(n,{text_pair:t,padding:!0,truncation:!0}),o=await this.model(r);a?e.push([o.logits.data[this.contradiction_id],o.logits.data[this.entailment_id]]):e.push(o.logits.data[this.entailment_id])}const r=(a?e.map((e=>(0,l.softmax)(e)[1])):(0,l.softmax)(e)).map(((e,t)=>[e,t])).sort(((e,t)=>t[0]-e[0]));i.push({sequence:n,labels:r.map((e=>t[e[1]])),scores:r.map((e=>e[0]))})}return o?i:i[0]}}class C extends _{constructor(e){super(e)}async _call(e,{pooling:t="none",normalize:n=!1,quantize:r=!1,precision:o="binary"}={}){const s=this.tokenizer(e,{padding:!0,truncation:!0}),a=await this.model(s);let i=a.last_hidden_state??a.logits??a.token_embeddings;if("none"===t);else if("mean"===t)i=(0,d.mean_pooling)(i,s.attention_mask);else{if("cls"!==t)throw Error(`Pooling method '${t}' not supported.`);i=i.slice(null,0)}return n&&(i=i.normalize(2,-1)),r&&(i=(0,d.quantize_embeddings)(i,o)),i}}class P extends _{constructor(e){super(e)}async _call(e,{pool:t=null}={}){const n=await p(e),{pixel_values:r}=await this.processor(n),o=await this.model({pixel_values:r});let s;if(t){if(!("pooler_output"in o))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");s=o.pooler_output}else s=o.last_hidden_state??o.logits??o.image_embeds;return s}}class v extends _{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.processor.feature_extractor.config.sampling_rate,r=await h(e,n),o=this.model.config.id2label,s=[];for(const e of r){const n=await this.processor(e),r=(await this.model(n)).logits[0],a=await(0,d.topk)(new d.Tensor("float32",(0,l.softmax)(r.data),r.dims),t),i=a[0].tolist(),c=a[1].tolist().map(((e,t)=>({label:o?o[e]:`LABEL_${e}`,score:i[t]})));s.push(c)}return Array.isArray(e)?s:s[0]}}class S extends _{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a sound of {}."}={}){const r=!Array.isArray(e);r&&(e=[e]);const o=t.map((e=>n.replace("{}",e))),s=this.tokenizer(o,{padding:!0,truncation:!0}),a=this.processor.feature_extractor.config.sampling_rate,i=await h(e,a),c=[];for(const e of i){const n=await this.processor(e),r=await this.model({...s,...n}),o=(0,l.softmax)(r.logits_per_audio.data);c.push([...o].map(((e,n)=>({score:e,label:t[n]}))))}return r?c[0]:c}}class A extends _{constructor(e){super(e)}async _call(e,t={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(e,t);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,o=await h(e,r),s=[];for(const e of o){const t=await this.processor(e),n=(await this.model(t)).logits[0],r=[];for(const e of n)r.push((0,l.max)(e.data)[1]);const o=this.tokenizer.decode(r);s.push({text:o})}return n?s[0]:s}async _call_whisper(e,t){const n=t.return_timestamps??!1,r=t.chunk_length_s??0,o=t.force_full_sequences??!1;let s=t.stride_length_s??null;const a={...t};"word"===n&&(a.return_token_timestamps=!0,a.return_timestamps=!1);const i=!Array.isArray(e);i&&(e=[e]);const c=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,d=this.processor.feature_extractor.config.hop_length,u=this.processor.feature_extractor.config.sampling_rate,p=await h(e,u),m=[];for(const e of p){let t=[];if(r>0){if(null===s)s=r/6;else if(r<=s)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const n=u*r,o=u*s,a=n-2*o;let i=0;for(;;){const r=i+n,s=e.subarray(i,r),l=await this.processor(s),c=0===i,d=r>=e.length;if(t.push({stride:[s.length,c?0:o,d?0:o],input_features:l.input_features,is_last:d}),d)break;i+=a}}else t=[{stride:[e.length,0,0],input_features:(await this.processor(e)).input_features,is_last:!0}];for(const e of t){a.num_frames=Math.floor(e.stride[0]/d);const t=await this.model.generate({inputs:e.input_features,...a});"word"===n?(e.tokens=t.sequences.tolist()[0],e.token_timestamps=t.token_timestamps.tolist()[0].map((e=>(0,l.round)(e,2)))):e.tokens=t[0].tolist(),e.stride=e.stride.map((e=>e/u))}const[i,p]=this.tokenizer._decode_asr(t,{time_precision:c,return_timestamps:n,force_full_sequences:o});m.push({text:i,...p})}return i?m[0]:m}}class E extends _{constructor(e){super(e)}async _call(e,t={}){const n=Array.isArray(e),r=await p(e),{pixel_values:o}=await this.processor(r),s=[];for(const e of o){e.dims=[1,...e.dims];const n=await this.model.generate({inputs:e,...t}),r=this.tokenizer.batch_decode(n,{skip_special_tokens:!0}).map((e=>({generated_text:e.trim()})));s.push(r)}return n?s:s[0]}}class L extends _{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=await p(e),{pixel_values:r}=await this.processor(n),o=await this.model({pixel_values:r}),s=this.model.config.id2label,a=[];for(const e of o.logits){const n=await(0,d.topk)(new d.Tensor("float32",(0,l.softmax)(e.data),e.dims),t),r=n[0].tolist(),o=n[1].tolist().map(((e,t)=>({label:s?s[e]:`LABEL_${e}`,score:r[t]})));a.push(o)}return Array.isArray(e)?a:a[0]}}class z extends _{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:t=.5,mask_threshold:n=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:o=null,target_sizes:s=null,subtask:a=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const i=await p(e),l=i.map((e=>[e.height,e.width])),{pixel_values:c,pixel_mask:d}=await this.processor(i),h=await this.model({pixel_values:c,pixel_mask:d});let m=null;if(null!==a)m=this.subtasks_mapping[a];else for(let[e,t]of Object.entries(this.subtasks_mapping))if(t in this.processor.feature_extractor){m=this.processor.feature_extractor[t].bind(this.processor.feature_extractor),a=e;break}const _=this.model.config.id2label,f=[];if("panoptic"===a||"instance"===a){const e=m(h,t,n,r,o,s??l)[0],a=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(a.data.length);for(let n=0;n<a.data.length;++n)a.data[n]===t.id&&(e[n]=255);const n=new u.RawImage(e,a.dims[1],a.dims[0],1);f.push({score:t.score,label:_[t.label_id],mask:n})}}else{if("semantic"!==a)throw Error(`Subtask ${a} not supported.`);{const{segmentation:e,labels:t}=m(h,s??l)[0];for(const n of t){const t=new Uint8ClampedArray(e.data.length);for(let r=0;r<e.data.length;++r)e.data[r]===n&&(t[r]=255);const r=new u.RawImage(t,e.dims[1],e.dims[0],1);f.push({score:null,label:_[n],mask:r})}}}return f}}class I extends _{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a photo of {}"}={}){const r=Array.isArray(e),o=await p(e),s=t.map((e=>n.replace("{}",e))),a=this.tokenizer(s,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:i}=await this.processor(o),c=await this.model({...a,pixel_values:i}),d="siglip"===this.model.config.model_type?e=>e.sigmoid().data:e=>(0,l.softmax)(e.data),u=[];for(const e of c.logits_per_image){const n=[...d(e)].map(((e,n)=>({score:e,label:t[n]})));n.sort(((e,t)=>t.score-e.score)),u.push(n)}return r?u:u[0]}}class B extends _{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:n=!1}={}){const r=Array.isArray(e);if(r&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");const o=await p(e),s=n?null:o.map((e=>[e.height,e.width])),{pixel_values:a,pixel_mask:i}=await this.processor(o),l=await this.model({pixel_values:a,pixel_mask:i}),c=this.processor.feature_extractor.post_process_object_detection(l,t,s),d=this.model.config.id2label,u=c.map((e=>e.boxes.map(((t,r)=>({score:e.scores[r],label:d[e.classes[r]],box:m(t,!n)})))));return r?u:u[0]}}class N extends _{constructor(e){super(e)}async _call(e,t,{threshold:n=.1,top_k:r=null,percentage:o=!1}={}){const s=Array.isArray(e),a=await p(e),i=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(a),c=[];for(let e=0;e<a.length;++e){const s=a[e],d=o?null:[[s.height,s.width]],u=l.pixel_values[e].unsqueeze_(0),p=await this.model({...i,pixel_values:u}),h=this.processor.feature_extractor.post_process_object_detection(p,n,d,!0)[0];let _=h.boxes.map(((e,n)=>({score:h.scores[n],label:t[h.classes[n]],box:m(e,!o)}))).sort(((e,t)=>t.score-e.score));null!==r&&(_=_.slice(0,r)),c.push(_)}return s?c:c[0]}}class O extends _{constructor(e){super(e)}async _call(e,t,n={}){throw new Error("This pipeline is not yet supported in Transformers.js v3.")}}class D extends _{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(e){super(e),this.vocoder=e.vocoder??null}async _call(e,{speaker_embeddings:t=null}={}){return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:n}=await this.model(t),r=this.model.config.sampling_rate;return{audio:n.data,sampling_rate:r}}async _call_text_to_spectrogram(e,{speaker_embeddings:t}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await o.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof t||t instanceof URL)&&(t=new Float32Array(await(await fetch(t)).arrayBuffer())),t instanceof Float32Array)t=new d.Tensor("float32",t,[1,t.length]);else if(!(t instanceof d.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:n}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:r}=await this.model.generate_speech(n,t,{vocoder:this.vocoder}),s=this.processor.feature_extractor.config.sampling_rate;return{audio:r.data,sampling_rate:s}}}class V extends _{constructor(e){super(e)}async _call(e){const t=await p(e),n=await this.processor(t),r=await this.model(n),o=[];for(const e of r.reconstruction){const t=e.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");o.push(u.RawImage.fromTensor(t))}return o.length>1?o:o[0]}}class j extends _{constructor(e){super(e)}async _call(e){const t=await p(e),n=await this.processor(t),{predicted_depth:r}=await this.model(n),o=[];for(let e=0;e<t.length;++e){const n=(0,d.interpolate)(r[e],t[e].size.reverse(),"bilinear",!1),s=n.mul_(255/(0,l.max)(n.data)[0]).to("uint8");o.push({predicted_depth:r[e],depth:u.RawImage.fromTensor(s)})}return o.length>1?o:o[0]}}const R=Object.freeze({"text-classification":{tokenizer:r.AutoTokenizer,pipeline:f,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:r.AutoTokenizer,pipeline:g,model:o.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:r.AutoTokenizer,pipeline:M,model:o.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:r.AutoTokenizer,pipeline:w,model:o.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:r.AutoTokenizer,pipeline:T,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:r.AutoTokenizer,pipeline:x,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:r.AutoTokenizer,pipeline:b,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:r.AutoTokenizer,pipeline:k,model:o.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:r.AutoTokenizer,pipeline:F,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:v,model:o.AutoModelForAudioClassification,processor:s.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:r.AutoTokenizer,pipeline:S,model:o.AutoModel,processor:s.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:r.AutoTokenizer,pipeline:A,model:[o.AutoModelForSpeechSeq2Seq,o.AutoModelForCTC],processor:s.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:r.AutoTokenizer,pipeline:D,model:[o.AutoModelForTextToWaveform,o.AutoModelForTextToSpectrogram],processor:[s.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:r.AutoTokenizer,pipeline:E,model:o.AutoModelForVision2Seq,processor:s.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:L,model:o.AutoModelForImageClassification,processor:s.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:z,model:[o.AutoModelForImageSegmentation,o.AutoModelForSemanticSegmentation],processor:s.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:r.AutoTokenizer,pipeline:I,model:o.AutoModel,processor:s.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:B,model:o.AutoModelForObjectDetection,processor:s.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:r.AutoTokenizer,pipeline:N,model:o.AutoModelForZeroShotObjectDetection,processor:s.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:r.AutoTokenizer,pipeline:O,model:o.AutoModelForDocumentQuestionAnswering,processor:s.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:V,model:o.AutoModelForImageToImage,processor:s.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:j,model:o.AutoModelForDepthEstimation,processor:s.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:r.AutoTokenizer,pipeline:C,model:o.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:s.AutoProcessor,pipeline:P,model:[o.AutoModelForImageFeatureExtraction,o.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),G=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function q(e,t=null,{progress_callback:n=null,config:r=null,cache_dir:o=null,local_files_only:s=!1,revision:a="main",device:l=null,dtype:c=null,model_file_name:d=null,session_options:u={}}={}){e=G[e]??e;const p=R[e.split("_",1)[0]];if(!p)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(R)}]`);t||(t=p.default.model,console.log(`No model specified. Using default model: "${t}".`));const h={progress_callback:n,config:r,cache_dir:o,local_files_only:s,revision:a,device:l,dtype:c,model_file_name:d,session_options:u},m=new Map([["tokenizer",p.tokenizer],["model",p.model],["processor",p.processor]]),_=await async function(e,t,n){const r=Object.create(null),o=[];for(let[s,a]of e.entries()){if(!a)continue;let e;e=Array.isArray(a)?new Promise((async(e,r)=>{let o;for(let s of a){if(null===s)return void e(null);try{return void e(await s.from_pretrained(t,n))}catch(e){if(e.message?.includes("Unsupported model type"))o=e;else{if(!e.message?.includes("Could not locate file"))return void r(e);o=e}}}r(o)})):a.from_pretrained(t,n),r[s]=e,o.push(e)}await Promise.all(o);for(let[e,t]of Object.entries(r))r[e]=await t;return r}(m,t,h);_.task=e,(0,i.dispatchCallback)(n,{status:"ready",task:e,model:t});return new(0,p.pipeline)(_)}},"./src/processors.js":
/*!***************************!*\
  !*** ./src/processors.js ***!
  \***************************/(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>K,AutoProcessor:()=>de,BeitFeatureExtractor:()=>j,BitImageProcessor:()=>w,CLIPFeatureExtractor:()=>T,CLIPImageProcessor:()=>x,ChineseCLIPFeatureExtractor:()=>y,ClapFeatureExtractor:()=>J,ConvNextFeatureExtractor:()=>F,ConvNextImageProcessor:()=>C,DPTFeatureExtractor:()=>g,DPTImageProcessor:()=>M,DeiTFeatureExtractor:()=>V,DetrFeatureExtractor:()=>q,DonutFeatureExtractor:()=>R,EfficientNetImageProcessor:()=>S,FeatureExtractor:()=>m,Florence2Processor:()=>ce,GLPNFeatureExtractor:()=>b,ImageFeatureExtractor:()=>_,MobileNetV1FeatureExtractor:()=>A,MobileNetV2FeatureExtractor:()=>E,MobileNetV3FeatureExtractor:()=>L,MobileNetV4FeatureExtractor:()=>z,MobileViTFeatureExtractor:()=>I,MobileViTImageProcessor:()=>B,NougatImageProcessor:()=>G,OwlViTFeatureExtractor:()=>N,OwlViTProcessor:()=>le,Owlv2ImageProcessor:()=>O,Processor:()=>ne,PyAnnoteFeatureExtractor:()=>Z,PyAnnoteProcessor:()=>ae,RTDetrImageProcessor:()=>D,SamImageProcessor:()=>W,SamProcessor:()=>re,SeamlessM4TFeatureExtractor:()=>Y,SegformerFeatureExtractor:()=>f,SiglipImageProcessor:()=>k,SpeechT5FeatureExtractor:()=>te,SpeechT5Processor:()=>ie,Swin2SRImageProcessor:()=>U,ViTFeatureExtractor:()=>P,ViTImageProcessor:()=>v,VitMatteImageProcessor:()=>X,Wav2Vec2FeatureExtractor:()=>H,Wav2Vec2ProcessorWithLM:()=>se,WeSpeakerFeatureExtractor:()=>ee,WhisperFeatureExtractor:()=>Q,WhisperProcessor:()=>oe,YolosFeatureExtractor:()=>$});var r=n(/*! ./utils/generic.js */"./src/utils/generic.js"),o=n(/*! ./utils/core.js */"./src/utils/core.js"),s=n(/*! ./utils/hub.js */"./src/utils/hub.js"),a=n(/*! ./utils/maths.js */"./src/utils/maths.js"),i=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),l=(n(/*! ./utils/image.js */"./src/utils/image.js"),n(/*! ./utils/audio.js */"./src/utils/audio.js"));function c([e,t,n,r]){return[e-n/2,t-r/2,e+n/2,t+r/2]}function d(e,t=.5,n=null,r=!1){const o=e.logits,s=e.pred_boxes,[i,l,d]=o.dims;if(null!==n&&n.length!==i)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let u=[];for(let e=0;e<i;++e){let i=null!==n?n[e]:null,p={boxes:[],classes:[],scores:[]},h=o[e],m=s[e];for(let e=0;e<l;++e){let n,o=h[e],s=[];if(r){n=o.sigmoid().data;for(let e=0;e<n.length;++e)n[e]>t&&s.push(e)}else{let e=(0,a.max)(o.data)[1];if(e===d-1)continue;if(n=(0,a.softmax)(o.data),n[e]<t)continue;s.push(e)}for(const t of s){let r=m[e].data;r=c(r),null!==i&&(r=r.map(((e,t)=>e*i[(t+1)%2]))),p.boxes.push(r),p.classes.push(t),p.scores.push(n[t])}}u.push(p)}return u}function u(e,t){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}function p(e,t,n=0,r=null){const o=e/t;let s=(0,a.bankers_round)(o)*t;return null!==r&&s>r&&(s=Math.floor(o)*t),s<n&&(s=Math.ceil(o)*t),s}function h([e,t],n){return[Math.max(Math.floor(e/n),1)*n,Math.max(Math.floor(t/n),1)*n]}class m extends r.Callable{constructor(e){super(),this.config=e}}class _ extends m{constructor(e){super(e),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(e,t,n=2){const r=e.height,o=e.width,s=t.height,a=t.width;let i=Math.min(r,s),l=Math.min(o,a);return i===r&&l===o?e:(r>o?l=Math.floor(o*i/r):o>r&&(i=Math.floor(r*l/o)),await e.resize(l,i,{resample:n}))}async crop_margin(e,t=200){const n=e.clone().grayscale(),r=(0,a.min)(n.data)[0],o=(0,a.max)(n.data)[0]-r;if(0===o)return e;const s=t/255;let i=n.width,l=n.height,c=0,d=0;const u=n.data;for(let e=0;e<n.height;++e){const t=e*n.width;for(let a=0;a<n.width;++a)(u[t+a]-r)/o<s&&(i=Math.min(i,a),l=Math.min(l,e),c=Math.max(c,a),d=Math.max(d,e))}return e=await e.crop([i,l,c,d])}pad_image(e,t,n,{mode:r="constant",center:s=!1,constant_values:a=0}={}){const[i,l,c]=t;let d,u;if("number"==typeof n?(d=n,u=n):(d=n.width,u=n.height),d!==l||u!==i){const n=new Float32Array(d*u*c);if(Array.isArray(a))for(let e=0;e<n.length;++e)n[e]=a[e%c];else 0!==a&&n.fill(a);const[p,h]=s?[Math.floor((d-l)/2),Math.floor((u-i)/2)]:[0,0];for(let t=0;t<i;++t){const r=(t+h)*d,o=t*l;for(let t=0;t<l;++t){const s=(r+t+p)*c,a=(o+t)*c;for(let t=0;t<c;++t)n[s+t]=e[a+t]}}if("symmetric"===r){if(s)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const t=i-1,r=l-1;for(let s=0;s<u;++s){const a=s*d,u=(0,o.calculateReflectOffset)(s,t)*l;for(let t=0;t<d;++t){if(s<i&&t<l)continue;const d=(a+t)*c,p=(u+(0,o.calculateReflectOffset)(t,r))*c;for(let t=0;t<c;++t)n[d+t]=e[p+t]}}}e=n,t=[u,d,c]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[n,r]=e.size;let o,s;if(this.do_thumbnail){const{height:e,width:n}=t;o=Math.min(e,n)}else Number.isInteger(t)?(o=t,s=this.config.max_size??o):void 0!==t&&(o=t.shortest_edge,s=t.longest_edge);if(void 0!==o||void 0!==s){const e=void 0===o?1:Math.max(o/n,o/r),t=n*e,a=r*e,i=void 0===s?1:Math.min(s/t,s/a);let l=Math.floor(Number((t*i).toFixed(2))),c=Math.floor(Number((a*i).toFixed(2)));return void 0!==this.size_divisibility&&([l,c]=h([l,c],this.size_divisibility)),[l,c]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,o=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let t=o/r,s=e/n;Math.abs(1-s)<Math.abs(1-t)?t=s:s=t,o=p(t*r,this.config.ensure_multiple_of),e=p(s*n,this.config.ensure_multiple_of)}return[e,o]}if(void 0!==this.size_divisibility)return h([n,r],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(t)}`)}async resize(e){const[t,n]=this.get_resize_output_image_size(e,this.size);return await e.resize(t,n,{resample:this.resample})}async preprocess(e,{do_normalize:t=null,do_pad:n=null,do_convert_rgb:r=null,do_convert_grayscale:o=null,do_flip_channel_order:s=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[a,l]=e.size;if(r??this.do_convert_rgb?e=e.rgb():o&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let t,n;Number.isInteger(this.crop_size)?(t=this.crop_size,n=this.crop_size):(t=this.crop_size.width,n=this.crop_size.height),e=await e.center_crop(t,n)}const c=[e.height,e.width];let d=Float32Array.from(e.data),u=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(d),t??this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let n=this.image_std;if(Array.isArray(this.image_std)||(n=new Array(e.channels).fill(t)),t.length!==e.channels||n.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${n.length}) must match the number of channels in the image (${e.channels}).`);for(let r=0;r<d.length;r+=e.channels)for(let o=0;o<e.channels;++o)d[r+o]=(d[r+o]-t[o])/n[o]}if(n??this.do_pad)if(this.pad_size){const t=this.pad_image(d,[e.height,e.width,e.channels],this.pad_size);[d,u]=t}else if(this.size_divisibility){const[e,t]=h([u[1],u[0]],this.size_divisibility);[d,u]=this.pad_image(d,u,{width:e,height:t})}if(s??this.do_flip_channel_order){if(3!==u[2])throw new Error("Flipping channel order is only supported for RGB images.");for(let e=0;e<d.length;e+=3){const t=d[e];d[e]=d[e+2],d[e+2]=t}}return{original_size:[l,a],reshaped_input_size:c,pixel_values:new i.Tensor("float32",d,u).permute(2,0,1)}}async _call(e,...t){Array.isArray(e)||(e=[e]);const n=await Promise.all(e.map((e=>this.preprocess(e))));return{pixel_values:(0,i.stack)(n.map((e=>e.pixel_values)),0),original_sizes:n.map((e=>e.original_size)),reshaped_input_sizes:n.map((e=>e.reshaped_input_size))}}}class f extends _{post_process_semantic_segmentation(e,t=null){const n=e.logits,r=n.dims[0];if(null!==t&&t.length!==r)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const o=[];for(let e=0;e<r;++e){const r=null!==t?t[e]:null;let s=n[e];null!==r&&(s=(0,i.interpolate)(s,r,"bilinear",!1));const[a,l]=r??s.dims.slice(-2),c=new i.Tensor("int32",new Int32Array(a*l),[a,l]),d=s[0].data,u=c.data;for(let e=1;e<s.dims[0];++e){const t=s[e].data;for(let n=0;n<t.length;++n)t[n]>d[n]&&(d[n]=t[n],u[n]=e)}const p=new Array(s.dims[0]),h=c.data;for(let e=0;e<h.length;++e){const t=h[e];p[t]=t}const m=p.filter((e=>void 0!==e));o.push({segmentation:c,labels:m})}return o}}class g extends _{}class M extends g{}class w extends _{}class b extends _{}class T extends _{}class x extends T{}class y extends _{}class k extends _{}class F extends _{constructor(e){super(e),this.crop_pct=this.config.crop_pct??.875}async resize(e){const t=this.size?.shortest_edge;if(void 0===t)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(t<384){const n=Math.floor(t/this.crop_pct),[r,o]=this.get_resize_output_image_size(e,{shortest_edge:n});e=await e.resize(r,o,{resample:this.resample}),e=await e.center_crop(t,t)}else e=await e.resize(t,t,{resample:this.resample});return e}}class C extends F{}class P extends _{}class v extends _{}class S extends _{constructor(e){super(e),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map((e=>e*e)))}}class A extends _{}class E extends _{}class L extends _{}class z extends _{}class I extends _{}class B extends I{}class N extends _{post_process_object_detection(...e){return d(...e)}}class O extends N{}class D extends _{post_process_object_detection(...e){return d(...e)}}class V extends _{}class j extends _{}class R extends _{pad_image(e,t,n,r={}){const[o,s,a]=t;let i=this.image_mean;Array.isArray(this.image_mean)||(i=new Array(a).fill(i));let l=this.image_std;Array.isArray(l)||(l=new Array(a).fill(i));const c=i.map(((e,t)=>-e/l[t]));return super.pad_image(e,t,n,{center:!0,constant_values:c,...r})}}class G extends R{}class q extends _{async _call(e){const t=await super._call(e),n=[t.pixel_values.dims[0],64,64],r=new i.Tensor("int64",new BigInt64Array(n.reduce(((e,t)=>e*t))).fill(1n),n);return{...t,pixel_mask:r}}post_process_object_detection(...e){return d(...e)}remove_low_and_no_objects(e,t,n,r){let o=[],s=[],i=[];for(let l=0;l<e.dims[0];++l){let c=e[l],d=t[l],u=(0,a.max)(c.data)[1];if(u===r)continue;let p=(0,a.softmax)(c.data)[u];p>n&&(o.push(d),s.push(p),i.push(u))}return[o,s,i]}check_segment_validity(e,t,n,r=.5,o=.8){let s=[],a=0,i=0;const l=t[n].data;for(let t=0;t<e.length;++t)e[t]===n&&(s.push(t),++a),l[t]>=r&&++i;let c=a>0&&i>0;if(c){c=a/i>o}return[c,s]}compute_segments(e,t,n,r,o,s=null,a=null){let[l,c]=a??e[0].dims,d=new i.Tensor("int32",new Int32Array(l*c),[l,c]),u=[];if(null!==a)for(let t=0;t<e.length;++t)e[t]=(0,i.interpolate)(e[t],a,"bilinear",!1);let p=new Int32Array(e[0].data.length),h=new Float32Array(e[0].data.length);for(let n=0;n<e.length;++n){let r=t[n];const o=e[n].data;for(let e=0;e<o.length;++e)o[e]*=r,o[e]>h[e]&&(p[e]=n,h[e]=o[e])}let m=0;const _=d.data;for(let s=0;s<n.length;++s){let a=n[s],[i,l]=this.check_segment_validity(p,e,s,r,o);if(i){++m;for(let e of l)_[e]=m;u.push({id:m,label_id:a,score:t[s]})}}return[d,u]}post_process_panoptic_segmentation(e,t=.5,n=.5,r=.8,o=null,s=null){null===o&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),o=new Set);const a=e.logits,l=e.pred_masks.sigmoid();let[c,d,u]=a.dims;if(u-=1,null!==s&&s.length!==c)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let p=[];for(let e=0;e<c;++e){let c=null!==s?s[e]:null,d=a[e],h=l[e],[m,_,f]=this.remove_low_and_no_objects(d,h,t,u);if(0===f.length){let[e,t]=c??h.dims.slice(-2),n=new i.Tensor("int32",new Int32Array(e*t).fill(-1),[e,t]);p.push({segmentation:n,segments_info:[]});continue}let[g,M]=this.compute_segments(m,_,f,n,r,o,c);p.push({segmentation:g,segments_info:M})}return p}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class $ extends _{post_process_object_detection(...e){return d(...e)}}class W extends _{reshape_input_points(e,t,n,r=!1){e=structuredClone(e);let s=(0,o.calculateDimensions)(e);if(3===s.length)r||(s=[1,...s]),e=[e];else if(4!==s.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let r=0;r<e.length;++r){let o=t[r],s=n[r],a=[s[0]/o[0],s[1]/o[1]];for(let t=0;t<e[r].length;++t)for(let n=0;n<e[r][t].length;++n)for(let o=0;o<e[r][t][n].length;++o)e[r][t][n][o]*=a[o%2]}return new i.Tensor("float32",Float32Array.from(e.flat(1/0)),s)}add_input_labels(e,t){let n=(0,o.calculateDimensions)(e);if(2===n.length)n=[1,...n],e=[e];else if(3!==n.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(n.some(((e,n)=>e!==t.dims[n])))throw Error(`The first ${n.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new i.Tensor("int64",e.flat(1/0).map(BigInt),n)}async _call(e,{input_points:t=null,input_labels:n=null,input_boxes:r=null}={}){const o=await super._call(e);if(t&&(o.input_points=this.reshape_input_points(t,o.original_sizes,o.reshaped_input_sizes)),n){if(!o.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");o.input_labels=this.add_input_labels(n,o.input_points)}return r&&(o.input_boxes=this.reshape_input_points(r,o.original_sizes,o.reshaped_input_sizes,!0)),o}async post_process_masks(e,t,n,{mask_threshold:r=0,binarize:o=!0,pad_size:s=null}={}){const a=[],l=[(s=s??this.pad_size).height,s.width];for(let s=0;s<t.length;++s){const c=t[s],d=n[s];let u=await(0,i.interpolate_4d)(e[s],{mode:"bilinear",size:l});if(u=u.slice(null,null,[0,d[0]],[0,d[1]]),u=await(0,i.interpolate_4d)(u,{mode:"bilinear",size:c}),o){const e=u.data,t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)e[n]>r&&(t[n]=1);u=new i.Tensor("bool",t,u.dims)}a.push(u)}return a}generate_crop_boxes(e,t,{crop_n_layers:n=0,overlap_ratio:r=512/1500,points_per_crop:o=32,crop_n_points_downscale_factor:s=1}={}){}}class U extends _{pad_image(e,t,n,r={}){const[o,s,a]=t;return super.pad_image(e,t,{width:s+(n-s%n)%n,height:o+(n-o%n)%n},{mode:"symmetric",center:!1,constant_values:-1,...r})}}class X extends _{async _call(e,t){Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const n=await Promise.all(e.map((e=>this.preprocess(e)))),r=await Promise.all(t.map((e=>this.preprocess(e,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0}))));return{pixel_values:(0,i.stack)(n.map(((e,t)=>(0,i.cat)([e.pixel_values,r[t].pixel_values],0))),0),original_sizes:n.map((e=>e.original_size)),reshaped_input_sizes:n.map((e=>e.reshaped_input_size))}}}class Q extends m{constructor(e){super(e),this.config.mel_filters??=(0,l.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,l.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(e){const t=await(0,l.spectrogram)(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),n=t.data,r=(0,a.max)(n)[0];for(let e=0;e<n.length;++e)n[e]=(Math.max(n[e],r-8)+4)/4;return t}async _call(e){let t;u(e,"WhisperFeatureExtractor"),e.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),t=e.slice(0,this.config.n_samples)):(t=new Float32Array(this.config.n_samples),t.set(e));return{input_features:(await this._extract_fbank_features(t)).unsqueeze_(0)}}}class H extends m{_zero_mean_unit_var_norm(e){const t=e.reduce(((e,t)=>e+t),0)/e.length,n=e.reduce(((e,n)=>e+(n-t)**2),0)/e.length;return e.map((e=>(e-t)/Math.sqrt(n+1e-7)))}async _call(e){u(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const n=[1,t.length];return{input_values:new i.Tensor("float32",t,n),attention_mask:new i.Tensor("int64",new BigInt64Array(t.length).fill(1n),n)}}}class Y extends m{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,l.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<n.length;++e)n[e].push(0);this.mel_filters=n,this.window=(0,l.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(e,t){return e=e.map((e=>32768*e)),(0,l.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e,{padding:t=!0,pad_to_multiple_of:n=2,do_normalize_per_mel_bins:r=!0,return_attention_mask:o=!0}={}){u(e,"SeamlessM4TFeatureExtractor");let s,a=await this._extract_fbank_features(e,this.config.max_length);if(r){const[e,t]=a.dims,n=a.data;for(let r=0;r<t;++r){let o=0;for(let s=0;s<e;++s)o+=n[s*t+r];const s=o/e;let a=0;for(let o=0;o<e;++o)a+=(n[o*t+r]-s)**2;a/=e-1;const i=Math.sqrt(a+1e-7);for(let o=0;o<e;++o){const e=o*t+r;n[e]=(n[e]-s)/i}}}if(t){const[e,t]=a.dims,r=a.data,l=e%n;if(l>0){const n=new Float32Array(t*(e+l));n.set(r),n.fill(this.config.padding_value,r.length);const c=e+l;a=new i.Tensor(a.type,n,[c,t]),o&&(s=new i.Tensor("int64",new BigInt64Array(c),[1,c]),s.data.fill(1n,0,e))}}const[l,c]=a.dims,d=this.config.stride;if(0!==l%d)throw new Error(`The number of frames (${l}) must be a multiple of the stride (${d}).`);const p=a.view(1,Math.floor(l/d),c*d),h={input_features:p};if(o){const e=p.dims[1],t=new BigInt64Array(e);if(s){const e=s.data;for(let n=1,r=0;n<l;n+=d,++r)t[r]=e[n]}else t.fill(1n);h.attention_mask=new i.Tensor("int64",t,[1,e])}return h}}class K extends m{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,l.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<n.length;++e)n[e].push(0);this.mel_filters=n,this.window=(0,l.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(e,t){return(0,l.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){u(e,"ASTFeatureExtractor");const t=await this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const e=2*this.std,n=t.data;for(let t=0;t<n.length;++t)n[t]=(n[t]-this.mean)/e}return{input_values:t.unsqueeze_(0)}}}class J extends m{constructor(e){super(e),this.mel_filters=(0,l.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,l.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,l.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(e,t,n,r){let o,s=!1;const a=e.length-t;if(a>0){if("rand_trunc"!==n)throw new Error(`Truncation strategy "${n}" not implemented`);{s=!0;const n=Math.floor(Math.random()*(a+1));e=e.subarray(n,n+t),o=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(a<0){let n=new Float64Array(t);if(n.set(e),"repeat"===r)for(let r=e.length;r<t;r+=e.length)n.set(e.subarray(0,Math.min(e.length,t-r)),r);else if("repeatpad"===r)for(let t=e.length;t<-a;t+=e.length)n.set(e,t);e=n}if("fusion"===n)throw new Error(`Truncation strategy "${n}" not implemented`);o=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}return o.unsqueeze_(0)}async _extract_fbank_features(e,t,n=null){return(0,l.spectrogram)(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:t,log_mel:"dB",max_num_frames:n,do_pad:!1,transpose:!0})}async _call(e,{max_length:t=null}={}){u(e,"ClapFeatureExtractor");return{input_features:(await this._get_input_mel(e,t??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}class Z extends m{async _call(e){u(e,"PyAnnoteFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,1,e.length];return{input_values:new i.Tensor("float32",e,t)}}samples_to_frames(e){return(e-this.config.offset)/this.config.step}post_process_speaker_diarization(e,t){const n=t/this.samples_to_frames(t)/this.config.sampling_rate,r=[];for(const t of e.tolist()){const e=[];let o=-1;for(let n=0;n<t.length;++n){const r=(0,a.softmax)(t[n]),[s,i]=(0,a.max)(r),[l,c]=[n,n+1];i!==o?(o=i,e.push({id:i,start:l,end:c,score:s})):(e.at(-1).end=c,e.at(-1).score+=s)}r.push(e.map((({id:e,start:t,end:r,score:o})=>({id:e,start:t*n,end:r*n,confidence:o/(r-t)}))))}return r}}class ee extends m{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,l.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<n.length;++e)n[e].push(0);this.mel_filters=n,this.window=(0,l.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(e){return e=e.map((e=>32768*e)),(0,l.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(e){u(e,"WeSpeakerFeatureExtractor");const t=(await this._extract_fbank_features(e)).unsqueeze_(0);if(null===this.config.fbank_centering_span){const e=t.mean(1).data,n=t.data,[r,o,s]=t.dims;for(let t=0;t<r;++t){const r=t*o*s,a=t*s;for(let t=0;t<o;++t){const o=r+t*s;for(let t=0;t<s;++t)n[o+t]-=e[a+t]}}}return{input_features:t}}}class te extends m{}class ne extends r.Callable{constructor(e){super(),this.feature_extractor=e}async _call(e,...t){return await this.feature_extractor(e,...t)}}class re extends ne{async _call(...e){return await this.feature_extractor(...e)}post_process_masks(...e){return this.feature_extractor.post_process_masks(...e)}reshape_input_points(...e){return this.feature_extractor.reshape_input_points(...e)}}class oe extends ne{async _call(e){return await this.feature_extractor(e)}}class se extends ne{async _call(e){return await this.feature_extractor(e)}}class ae extends ne{async _call(e){return await this.feature_extractor(e)}post_process_speaker_diarization(...e){return this.feature_extractor.post_process_speaker_diarization(...e)}}class ie extends ne{async _call(e){return await this.feature_extractor(e)}}class le extends ne{}class ce extends ne{constructor(e){super(e);const{tasks_answer_post_processing_type:t,task_prompts_without_inputs:n,task_prompts_with_input:r}=e.config;this.tasks_answer_post_processing_type=new Map(Object.entries(t??{})),this.task_prompts_without_inputs=new Map(Object.entries(n??{})),this.task_prompts_with_input=new Map(Object.entries(r??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(e){"string"==typeof e&&(e=[e]);const t=[];for(const n of e)if(this.task_prompts_without_inputs.has(n))t.push(this.task_prompts_without_inputs.get(n));else{for(const[e,r]of this.task_prompts_with_input)if(n.includes(e)){t.push(r.replaceAll("{input}",n).replaceAll(e,""));break}t.length!==e.length&&t.push(n)}return t}post_process_generation(e,t,n){const r=this.tasks_answer_post_processing_type.get(t)??"pure_text";let o;switch(e=e.replaceAll("<s>","").replaceAll("</s>",""),r){case"pure_text":o=e;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const s="ocr"===r?"quad_boxes":"bboxes",a=e.matchAll(this.regexes[s]),i=[],l=[];for(const[e,t,...r]of a)i.push(t?t.trim():i.at(-1)??""),l.push(r.map(((e,t)=>(Number(e)+.5)/this.size_per_bin*n[t%2])));o={labels:i,[s]:l};break;default:throw new Error(`Task "${t}" (of type "${r}") not yet implemented.`)}return{[t]:o}}}class de{static FEATURE_EXTRACTOR_CLASS_MAPPING={ImageFeatureExtractor:_,WhisperFeatureExtractor:Q,ViTFeatureExtractor:P,MobileViTFeatureExtractor:I,MobileViTImageProcessor:B,MobileNetV1FeatureExtractor:A,MobileNetV2FeatureExtractor:E,MobileNetV3FeatureExtractor:L,MobileNetV4FeatureExtractor:z,OwlViTFeatureExtractor:N,Owlv2ImageProcessor:O,CLIPFeatureExtractor:T,CLIPImageProcessor:x,Florence2Processor:ce,ChineseCLIPFeatureExtractor:y,SiglipImageProcessor:k,ConvNextFeatureExtractor:F,ConvNextImageProcessor:C,SegformerFeatureExtractor:f,BitImageProcessor:w,DPTImageProcessor:M,DPTFeatureExtractor:g,GLPNFeatureExtractor:b,BeitFeatureExtractor:j,DeiTFeatureExtractor:V,DetrFeatureExtractor:q,RTDetrImageProcessor:D,YolosFeatureExtractor:$,DonutFeatureExtractor:R,NougatImageProcessor:G,EfficientNetImageProcessor:S,ViTImageProcessor:v,VitMatteImageProcessor:X,SamImageProcessor:W,Swin2SRImageProcessor:U,Wav2Vec2FeatureExtractor:H,SeamlessM4TFeatureExtractor:Y,SpeechT5FeatureExtractor:te,ASTFeatureExtractor:K,ClapFeatureExtractor:J,PyAnnoteFeatureExtractor:Z,WeSpeakerFeatureExtractor:ee};static PROCESSOR_CLASS_MAPPING={WhisperProcessor:oe,Wav2Vec2ProcessorWithLM:se,PyAnnoteProcessor:ae,SamProcessor:re,SpeechT5Processor:ie,OwlViTProcessor:le,Florence2Processor:ce};static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:o=!1,revision:a="main"}={}){let i=n??await(0,s.getModelJSON)(e,"preprocessor_config.json",!0,{progress_callback:t,config:n,cache_dir:r,local_files_only:o,revision:a}),l=i.feature_extractor_type??i.image_processor_type,c=this.FEATURE_EXTRACTOR_CLASS_MAPPING[l];if(!c){if(void 0===i.size)throw new Error(`Unknown Feature Extractor type: ${l}`);console.warn(`Feature extractor type "${l}" not found, assuming ImageFeatureExtractor due to size parameter in config.`),c=_}return new(this.PROCESSOR_CLASS_MAPPING[i.processor_class]??ne)(new c(i))}}},"./src/tokenizers.js":
/*!***************************!*\
  !*** ./src/tokenizers.js ***!
  \***************************/(e,t,n)=>{n.r(t),n.d(t,{AlbertTokenizer:()=>xe,AutoTokenizer:()=>ht,BartTokenizer:()=>Ne,BertTokenizer:()=>Te,BlenderbotSmallTokenizer:()=>lt,BlenderbotTokenizer:()=>it,BloomTokenizer:()=>je,CLIPTokenizer:()=>rt,CamembertTokenizer:()=>Ee,CodeGenTokenizer:()=>nt,CodeLlamaTokenizer:()=>qe,CohereTokenizer:()=>pt,ConvBertTokenizer:()=>ve,DebertaTokenizer:()=>Fe,DebertaV2Tokenizer:()=>Ce,DistilBertTokenizer:()=>Ae,ElectraTokenizer:()=>ze,EsmTokenizer:()=>Qe,FalconTokenizer:()=>Ue,GPT2Tokenizer:()=>Be,GPTNeoXTokenizer:()=>Xe,GemmaTokenizer:()=>Ye,Grok1Tokenizer:()=>Ke,HerbertTokenizer:()=>Pe,LlamaTokenizer:()=>Ge,M2M100Tokenizer:()=>et,MBart50Tokenizer:()=>De,MBartTokenizer:()=>Oe,MPNetTokenizer:()=>We,MarianTokenizer:()=>st,MobileBertTokenizer:()=>ye,NllbTokenizer:()=>Ze,NougatTokenizer:()=>dt,PreTrainedTokenizer:()=>be,Qwen2Tokenizer:()=>He,RoFormerTokenizer:()=>Se,RobertaTokenizer:()=>Ve,SiglipTokenizer:()=>ot,SpeechT5Tokenizer:()=>ct,SqueezeBertTokenizer:()=>ke,T5Tokenizer:()=>Ie,TokenizerModel:()=>y,VitsTokenizer:()=>ut,Wav2Vec2CTCTokenizer:()=>at,WhisperTokenizer:()=>tt,XLMRobertaTokenizer:()=>$e,XLMTokenizer:()=>Le,is_chinese_char:()=>M});var r=n(/*! ./utils/generic.js */"./src/utils/generic.js"),o=n(/*! ./utils/core.js */"./src/utils/core.js"),s=n(/*! ./utils/hub.js */"./src/utils/hub.js"),a=n(/*! ./utils/maths.js */"./src/utils/maths.js"),i=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),l=n(/*! ./utils/data-structures.js */"./src/utils/data-structures.js"),c=n(/*! @huggingface/jinja */"./node_modules/@huggingface/jinja/dist/index.js"),d=n(/*! ./models/whisper/common_whisper.js */"./src/models/whisper/common_whisper.js"),u=n(/*! ./utils/constants.js */"./src/utils/constants.js");async function p(e,t){const n=await Promise.all([(0,s.getModelJSON)(e,"tokenizer.json",!0,t),(0,s.getModelJSON)(e,"tokenizer_config.json",!0,t)]);return null!==t.legacy&&(n[1].legacy=t.legacy),n}function h(e,t=!0){if(void 0!==e.Regex){let t=e.Regex.replace(/\\([#&~])/g,"$1");for(const[e,n]of T)t=t.replaceAll(e,n);return new RegExp(t,"gu")}if(void 0!==e.String){const n=(0,o.escapeRegExp)(e.String);return new RegExp(t?n:`(${n})`,"gu")}return console.warn("Unknown pattern type:",e),null}function m(e){return new Map(Object.entries(e))}function _(e){const t=e.dims;switch(t.length){case 1:return e.tolist();case 2:if(1!==t[0])throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${t.length}.`)}}function f(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function g(e){return e.replace(/[\u0300-\u036f]/g,"")}function M(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}const w="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",b=new RegExp(`^[${w}]+$`,"gu"),T=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"]]);class x{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class y extends r.Callable{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...t){switch(e.type){case"WordPiece":return new k(e);case"Unigram":return new F(e,...t);case"BPE":return new v(e);default:if(e.vocab)return new S(e,...t);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){let t=this.encode(e);return this.fuse_unk&&(t=function(e,t,n){const r=[];let o=0;for(;o<e.length;)if(r.push(e[o]),(n.get(e[o])??t)===t)for(;o<e.length&&(n.get(e[o])??t)===t;)++o;else++o;return r}(t,this.unk_token_id,this.tokens_to_ids)),t}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map((e=>this.tokens_to_ids.get(e)??this.unk_token_id))}convert_ids_to_tokens(e){return e.map((e=>this.vocab[e]??this.unk_token))}}class k extends y{constructor(e){super(e),this.tokens_to_ids=m(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){const t=[];for(const n of e){const e=[...n];if(e.length>this.max_input_chars_per_word){t.push(this.unk_token);continue}let r=!1,o=0;const s=[];for(;o<e.length;){let t=e.length,n=null;for(;o<t;){let r=e.slice(o,t).join("");if(o>0&&(r=this.config.continuing_subword_prefix+r),this.tokens_to_ids.has(r)){n=r;break}--t}if(null===n){r=!0;break}s.push(n),o=t}r?t.push(this.unk_token):t.push(...s)}return t}}class F extends y{constructor(e,t){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let t=0;t<n;++t){const n=e.vocab[t];this.vocab[t]=n[0],this.scores[t]=n[1]}this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map(((e,t)=>[e,t]))),this.bosToken=" ",this.bosTokenId=this.tokens_to_ids.get(this.bosToken),this.eosToken=t.eos_token,this.eosTokenId=this.tokens_to_ids.get(this.eosToken),this.unkToken=this.vocab[this.unk_token_id],this.minScore=(0,a.min)(this.scores)[0],this.unkScore=this.minScore-10,this.scores[this.unk_token_id]=this.unkScore,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.sentence,n=t.length;let r=0;for(;r<n;){const n=1;let o=!1;const s=[];for(let a of this.trie.commonPrefixSearch(t.slice(r))){s.push(a);const t=this.tokens_to_ids.get(a),i=this.scores[t],l=a.length;e.insert(r,l,i,t),o||l!==n||(o=!0)}o||e.insert(r,n,this.unkScore,this.unk_token_id),r+=n}}tokenize(e){const t=new l.TokenLattice(e,this.bosTokenId,this.eosTokenId);return this.populateNodes(t),t.tokens()}encode(e){const t=[];for(const n of e){const e=this.tokenize(n);t.push(...e)}return t}}const C=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},((e,t)=>t+"!".charCodeAt(0))),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},((e,t)=>t+"¡".charCodeAt(0))),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},((e,t)=>t+"®".charCodeAt(0)))],t=e.slice();let n=0;for(let r=0;r<256;++r)e.includes(r)||(e.push(r),t.push(256+n),n+=1);const r=t.map((e=>String.fromCharCode(e)));return Object.fromEntries(e.map(((e,t)=>[e,r[t]])))})(),P=(0,o.reverseDictionary)(C);class v extends y{constructor(e){super(e),this.BPE_SPLIT_TOKEN=" ",this.tokens_to_ids=m(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e;this.bpe_ranks=new Map(e.merges.map(((e,t)=>[e,t]))),this.merges=e.merges.map((e=>e.split(this.BPE_SPLIT_TOKEN))),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let r=[];if(n.length>1){const e=new l.PriorityQueue(((e,t)=>e.score<t.score));let t={token:n[0],bias:0,prev:null,next:null},o=t;for(let t=1;t<n.length;++t){const r={bias:t/n.length,token:n[t],prev:o,next:null};o.next=r,this._add_node(e,o),o=r}for(;!e.isEmpty();){const n=e.pop();if(n.deleted||!n.next||n.next.deleted)continue;if(n.deleted=!0,n.next.deleted=!0,n.prev){const e={...n.prev};n.prev.deleted=!0,n.prev=e,e.prev?e.prev.next=e:t=e}const r={token:n.token+n.next.token,bias:n.bias,prev:n.prev,next:n.next.next};r.prev?(r.prev.next=r,this._add_node(e,r.prev)):t=r,r.next&&(r.next.prev=r,this._add_node(e,r))}for(let e=t;null!==e;e=e.next)r.push(e.token)}else r=n;if(this.continuing_subword_suffix)for(let e=0;e<r.length-1;++e)r[e]+=this.continuing_subword_suffix;return this.cache.set(e,r),r}_add_node(e,t){const n=this.bpe_ranks.get(t.token+this.BPE_SPLIT_TOKEN+t.next.token);void 0!==n&&(t.score=n+t.bias,e.push(t))}encode(e){const t=[];for(const n of e){if(this.ignore_merges&&this.tokens_to_ids.has(n)){t.push(n);continue}const e=this.bpe(n);for(const n of e)this.tokens_to_ids.has(n)?t.push(n):this.byte_fallback?t.push(...Array.from(this.text_encoder.encode(n)).map((e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`))):t.push(this.unk_token)}return t}}class S extends y{constructor(e,t){super(e),this.tokens_to_ids=m(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){return e}}class A extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new j(e);case"Precompiled":return new pe(e);case"Sequence":return new V(e);case"Replace":return new E(e);case"NFC":return new L(e);case"NFKC":return new z(e);case"NFKD":return new I(e);case"Strip":return new B(e);case"StripAccents":return new N(e);case"Lowercase":return new O(e);case"Prepend":return new D(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class E extends A{normalize(e){const t=h(this.config.pattern);return null===t?e:e.replaceAll(t,this.config.content)}}class L extends A{normalize(e){return e=e.normalize("NFC")}}class z extends A{normalize(e){return e=e.normalize("NFKC")}}class I extends A{normalize(e){return e=e.normalize("NFKD")}}class B extends A{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class N extends A{normalize(e){return e=g(e)}}class O extends A{normalize(e){return e=e.toLowerCase()}}class D extends A{normalize(e){return e=this.config.prepend+e}}class V extends A{constructor(e){super(e),this.normalizers=e.normalizers.map((e=>A.fromConfig(e)))}normalize(e){return this.normalizers.reduce(((e,t)=>t.normalize(e)),e)}}class j extends A{_tokenize_chinese_chars(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n];M(r.charCodeAt(0))?(t.push(" "),t.push(r),t.push(" ")):t.push(r)}return t.join("")}stripAccents(e){return e.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}_is_control(e){switch(e){case"\t":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const t=[];for(const n of e){const e=n.charCodeAt(0);0===e||65533===e||this._is_control(n)||(/^\s$/.test(n)?t.push(" "):t.push(n))}return t.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class R extends r.Callable{static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new G(e);case"Sequence":return new he(e);case"Whitespace":return new me(e);case"WhitespaceSplit":return new _e(e);case"Metaspace":return new de(e);case"ByteLevel":return new q(e);case"Split":return new $(e);case"Punctuation":return new W(e);case"Digits":return new U(e);case"Replace":return new fe(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,t){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,t){return(Array.isArray(e)?e.map((e=>this.pre_tokenize_text(e,t))):this.pre_tokenize_text(e,t)).flat()}_call(e,t){return this.pre_tokenize(e,t)}}class G extends R{constructor(e){super(),this.pattern=new RegExp(`[^\\s${w}]+|[${w}]`,"gu")}pre_tokenize_text(e,t){return e.trim().match(this.pattern)||[]}}class q extends R{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=C,this.text_encoder=new TextEncoder}pre_tokenize_text(e,t){this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e);return(this.use_regex?e.match(this.pattern)||[]:[e]).map((e=>Array.from(this.text_encoder.encode(e),(e=>this.byte_encoder[e])).join("")))}}class $ extends R{constructor(e){super(),this.config=e,this.pattern=h(this.config.pattern,this.config.invert)}pre_tokenize_text(e,t){return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:function(e,t){const n=[];let r=0;for(const o of e.matchAll(t)){const t=o[0];r<o.index&&n.push(e.slice(r,o.index)),t.length>0&&n.push(t),r=o.index+t.length}return r<e.length&&n.push(e.slice(r)),n}(e,this.pattern)}}class W extends R{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${w}]+|[${w}]+`,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class U extends R{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class X extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new Y(e);case"ByteLevel":return new K(e);case"RobertaProcessing":return new H(e);case"BertProcessing":return new Q(e);case"Sequence":return new J(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...t){throw Error("post_process should be implemented in subclass.")}_call(e,...t){return this.post_process(e,...t)}}class Q extends X{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,t=null,{add_special_tokens:n=!0}={}){n&&(e=(0,o.mergeArrays)([this.cls],e,[this.sep]));let r=new Array(e.length).fill(0);if(null!==t){const s=n&&this instanceof H?[this.sep]:[],a=n?[this.sep]:[];e=(0,o.mergeArrays)(e,s,t,a),r=(0,o.mergeArrays)(r,new Array(t.length+s.length+a.length).fill(1))}return{tokens:e,token_type_ids:r}}}class H extends Q{}class Y extends X{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,t=null,{add_special_tokens:n=!0}={}){const r=null===t?this.single:this.pair;let s=[],a=[];for(const i of r)"SpecialToken"in i?n&&(s.push(i.SpecialToken.id),a.push(i.SpecialToken.type_id)):"Sequence"in i&&("A"===i.Sequence.id?(s=(0,o.mergeArrays)(s,e),a=(0,o.mergeArrays)(a,new Array(e.length).fill(i.Sequence.type_id))):"B"===i.Sequence.id&&(s=(0,o.mergeArrays)(s,t),a=(0,o.mergeArrays)(a,new Array(t.length).fill(i.Sequence.type_id))));return{tokens:s,token_type_ids:a}}}class K extends X{post_process(e,t=null){return t&&(e=(0,o.mergeArrays)(e,t)),{tokens:e}}}class J extends X{constructor(e){super(e),this.processors=e.processors.map((e=>X.fromConfig(e)))}post_process(e,t=null,n={}){let r;for(const o of this.processors)if(o instanceof K){if(e=o.post_process(e).tokens,t){t=o.post_process(t).tokens}}else{const s=o.post_process(e,t,n);e=s.tokens,r=s.token_type_ids}return{tokens:e,token_type_ids:r}}}class Z extends r.Callable{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(null===e)return null;switch(e.type){case"WordPiece":return new oe(e);case"Metaspace":return new ue(e);case"ByteLevel":return new se(e);case"Replace":return new ee(e);case"ByteFallback":return new te(e);case"Fuse":return new ne(e);case"Strip":return new re(e);case"Sequence":return new ie(e);case"CTC":return new ae(e);case"BPEDecoder":return new le(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class ee extends Z{decode_chain(e){const t=h(this.config.pattern);return null===t?e:e.map((e=>e.replaceAll(t,this.config.content)))}}class te extends Z{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const t=[];let n=[];for(const r of e){let e=null;if(6===r.length&&r.startsWith("<0x")&&r.endsWith(">")){const t=parseInt(r.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)n.push(e);else{if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}t.push(r)}}if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}return t}}class ne extends Z{decode_chain(e){return[e.join("")]}}class re extends Z{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map((e=>{let t=0;for(let n=0;n<this.start&&e[n]===this.content;++n)t=n+1;let n=e.length;for(let t=0;t<this.stop;++t){const r=e.length-t-1;if(e[r]!==this.content)break;n=r}return e.slice(t,n)}))}}class oe extends Z{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map(((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=f(e)),e)))}}class se extends Z{constructor(e){super(e),this.byte_decoder=P,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const t=e.join(""),n=new Uint8Array([...t].map((e=>this.byte_decoder[e])));return this.text_decoder.decode(n)}decode_chain(e){const t=[];let n=[];for(const r of e)void 0!==this.added_tokens.find((e=>e.content===r))?(n.length>0&&(t.push(this.convert_tokens_to_string(n)),n=[]),t.push(r)):n.push(r);return n.length>0&&t.push(this.convert_tokens_to_string(n)),t}}class ae extends Z{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";const t=[e[0]];for(let n=1;n<e.length;++n)e[n]!==t.at(-1)&&t.push(e[n]);let n=t.filter((e=>e!==this.pad_token)).join("");return this.cleanup&&(n=f(n).replaceAll(this.word_delimiter_token," ").trim()),n}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class ie extends Z{constructor(e){super(e),this.decoders=e.decoders.map((e=>Z.fromConfig(e)))}decode_chain(e){return this.decoders.reduce(((e,t)=>t.decode_chain(e)),e)}}class le extends Z{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map(((t,n)=>t.replaceAll(this.suffix,n===e.length-1?"":" ")))}}class ce extends Z{decode_chain(e){let t="";for(let n=1;n<e.length;n+=2)t+=e[n];return[t]}}class de extends R{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:t}={}){let n=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!n.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===t)&&(n=this.strRep+n),[n]}}class ue extends Z{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const t=[];for(let n=0;n<e.length;++n){let r=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&0==n&&r.startsWith(" ")&&(r=r.substring(1)),t.push(r)}return t}}class pe extends A{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u1680\u200B\u200C\u200E\u200F\u2028\u2029\u2581\uFEFF\uFFFD]/gm," ")).includes("～")){const t=e.split("～");e=t.map((e=>e.normalize("NFKC"))).join("～")}else e=e.normalize("NFKC");return e}}class he extends R{constructor(e){super(),this.tokenizers=e.pretokenizers.map((e=>R.fromConfig(e)))}pre_tokenize_text(e,t){return this.tokenizers.reduce(((e,n)=>n.pre_tokenize(e,t)),[e])}}class me extends R{constructor(e){super()}pre_tokenize_text(e,t){return e.match(/\w+|[^\w\s]+/g)||[]}}class _e extends R{constructor(e){super()}pre_tokenize_text(e,t){return function(e){return e.match(/\S+/g)||[]}(e)}}class fe extends R{constructor(e){super(),this.config=e,this.pattern=h(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,t){return null===this.pattern?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const ge=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Me(e,t,n,r){for(const s of Object.keys(e)){const a=t-e[s].length,i=n(s),l=new Array(a).fill(i);e[s]="right"===r?(0,o.mergeArrays)(e[s],l):(0,o.mergeArrays)(l,e[s])}}function we(e,t){for(const n of Object.keys(e))e[n].length=t}class be extends r.Callable{return_token_type_ids=!1;padding_side="right";constructor(e,t){super(),this._tokenizer_config=t,this.normalizer=A.fromConfig(e.normalizer),this.pre_tokenizer=R.fromConfig(e.pre_tokenizer),this.model=y.fromConfig(e.model,t),this.post_processor=X.fromConfig(e.post_processor),this.decoder=Z.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const t of e.added_tokens){const e=new x(t);this.added_tokens.push(e),this.model.tokens_to_ids.set(e.content,e.id),this.model.vocab[e.id]=e.content,e.special&&(this.special_tokens.push(e.content),this.all_special_ids.push(e.id))}if(this.additional_special_tokens=t.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.toSorted(((e,t)=>t.content.length-e.content.length)).map((e=>`${e.lstrip?"\\s*":""}(${(0,o.escapeRegExp)(e.content)})${e.rstrip?"\\s*":""}`)).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=t.model_max_length,this.remove_space=t.remove_space,this.clean_up_tokenization_spaces=t.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=t.do_lowercase_and_remove_accent??!1,t.padding_side&&(this.padding_side=t.padding_side),this.legacy=!1,this.chat_template=t.chat_template??null,Array.isArray(this.chat_template)){const e=Object.create(null);for(const{name:t,template:n}of this.chat_template){if("string"!=typeof t||"string"!=typeof n)throw new Error('Chat template must be a list of objects with "name" and "template" properties');e[t]=n}this.chat_template=e}this._compiled_template_cache=new Map}getToken(...e){for(const t of e){const e=this._tokenizer_config[t];if(e){if("object"==typeof e){if("AddedToken"===e.__type)return e.content;throw Error(`Unknown token: ${e}`)}return e}}return null}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:o=!1,revision:s="main",legacy:a=null}={}){return new this(...await p(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:o,revision:s,legacy:a}))}_call(e,{text_pair:t=null,add_special_tokens:n=!0,padding:r=!1,truncation:o=null,max_length:s=null,return_tensor:l=!0,return_token_type_ids:c=null}={}){const d=Array.isArray(e);let u;if(d){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");u=e.map(((e,r)=>this._encode_plus(e,{text_pair:t[r],add_special_tokens:n,return_token_type_ids:c})))}else u=e.map((e=>this._encode_plus(e,{add_special_tokens:n,return_token_type_ids:c})))}else{if(null==e)throw Error("text may not be null or undefined");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");u=[this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:c})]}if(null===s?s="max_length"===r?this.model_max_length:(0,a.max)(u.map((e=>e.input_ids.length)))[0]:o||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),s=Math.min(s,this.model_max_length??1/0),r||o)for(let e=0;e<u.length;++e)u[e].input_ids.length!==s&&(u[e].input_ids.length>s?o&&we(u[e],s):r&&Me(u[e],s,(e=>"input_ids"===e?this.pad_token_id:0),this.padding_side));const p={};if(l){if((!r||!o)&&u.some((e=>{for(const t of Object.keys(e))if(e[t].length!==u[0][t]?.length)return!0;return!1})))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const e=[u.length,u[0].input_ids.length];for(const t of Object.keys(u[0]))p[t]=new i.Tensor("int64",BigInt64Array.from(u.flatMap((e=>e[t])).map(BigInt)),e)}else{for(const e of Object.keys(u[0]))p[e]=u.map((t=>t[e]));if(!d)for(const e of Object.keys(p))p[e]=p[e][0]}return p}_encode_text(e){if(null===e)return null;const t=(this.added_tokens_regex?e.split(this.added_tokens_regex).filter((e=>e)):[e]).map(((e,t)=>{if(void 0!==this.added_tokens.find((t=>t.content===e)))return e;{if(!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return g(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e)),0===e.length)return[];const n=null!==this.pre_tokenizer?this.pre_tokenizer(e,{section_index:t}):[e];return this.model(n)}})).flat();return t}_encode_plus(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){const{tokens:o,token_type_ids:s}=this._tokenize_helper(e,{pair:t,add_special_tokens:n}),a=this.model.convert_tokens_to_ids(o),i={input_ids:a,attention_mask:new Array(a.length).fill(1)};return(r??this.return_token_type_ids)&&s&&(i.token_type_ids=s),i}_tokenize_helper(e,{pair:t=null,add_special_tokens:n=!1}={}){const r=this._encode_text(e),s=this._encode_text(t);return this.post_processor?this.post_processor(r,s,{add_special_tokens:n}):{tokens:(0,o.mergeArrays)(r??[],s??[])}}tokenize(e,{pair:t=null,add_special_tokens:n=!1}={}){return this._tokenize_helper(e,{pair:t,add_special_tokens:n}).tokens}encode(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){return this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:r}).input_ids}batch_decode(e,t={}){return e instanceof i.Tensor&&(e=e.tolist()),e.map((e=>this.decode(e,t)))}decode(e,t={}){if(e instanceof i.Tensor&&(e=_(e)),!Array.isArray(e)||0===e.length||!(0,o.isIntegralNumber)(e[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(e,t)}decode_single(e,{skip_special_tokens:t=!1,clean_up_tokenization_spaces:n=null}){let r=this.model.convert_ids_to_tokens(e);t&&(r=r.filter((e=>!this.special_tokens.includes(e))));let o=this.decoder?this.decoder(r):r.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(o=o.replaceAll(this.decoder.end_of_word_suffix," "),t&&(o=o.trim())),(n??this.clean_up_tokenization_spaces)&&(o=f(o)),o}apply_chat_template(e,{tools:t=null,documents:n=null,chat_template:r=null,add_generation_prompt:o=!1,tokenize:s=!0,padding:a=!1,truncation:i=!1,max_length:l=null,return_tensor:d=!0,return_dict:u=!1,tokenizer_kwargs:p={},...h}={}){if(this.chat_template&&"object"==typeof this.chat_template||null===this.chat_template){const e=this.chat_template;if(null!==r&&Object.hasOwn(e,r))r=e[r];else if(null===r&&"default"in e)r=e.default;else if(null===r)throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(e).sort()}.`)}else{if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");r=this.chat_template}if("string"!=typeof r)throw Error("chat_template must be a string, but got "+typeof r);let m=this._compiled_template_cache.get(r);void 0===m&&(m=new c.Template(r),this._compiled_template_cache.set(r,m));const _=Object.create(null);for(const e of ge){const t=this.getToken(e);t&&(_[e]=t)}const f=m.render({messages:e,add_generation_prompt:o,tools:t,documents:n,..._,...h});if(s){const e=this._call(f,{add_special_tokens:!1,padding:a,truncation:i,max_length:l,return_tensor:d,...p});return u?e:e.input_ids}return f}}class Te extends be{return_token_type_ids=!0}class xe extends be{return_token_type_ids=!0}class ye extends be{return_token_type_ids=!0}class ke extends be{return_token_type_ids=!0}class Fe extends be{return_token_type_ids=!0}class Ce extends be{return_token_type_ids=!0}class Pe extends be{return_token_type_ids=!0}class ve extends be{return_token_type_ids=!0}class Se extends be{return_token_type_ids=!0}class Ae extends be{}class Ee extends be{}class Le extends be{return_token_type_ids=!0;constructor(e,t){super(e,t),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class ze extends be{return_token_type_ids=!0}class Ie extends be{}class Be extends be{}class Ne extends be{}class Oe extends be{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return Je(this,e,t,n)}}class De extends Oe{}class Ve extends be{}class je extends be{constructor(e,t){const n=".,!?…。，、।۔،",r=e.pre_tokenizer?.pretokenizers[0]?.pattern;r&&r.Regex===` ?[^(\\s|[${n}])]+`&&(r.Regex=` ?[^\\s${n}]+`),super(e,t)}}const Re="▁";class Ge extends be{padding_side="left";constructor(e,t){super(e,t),this.legacy=t.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new de({replacement:Re,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(null===e)return null;if(this.legacy||0===e.length)return super._encode_text(e);let t=super._encode_text(Re+e.replaceAll(Re," "));return t.length>1&&t[0]===Re&&this.special_tokens.includes(t[1])&&(t=t.slice(1)),t}}class qe extends be{}class $e extends be{}class We extends be{}class Ue extends be{}class Xe extends be{}class Qe extends be{}class He extends be{}class Ye extends be{}class Ke extends be{}function Je(e,t,n,r){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e&&e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!=typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const o=r.src_lang,s=r.tgt_lang;if(!e.language_codes.includes(s))throw new Error(`Target language code "${s}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==o){if(!e.language_codes.includes(o))throw new Error(`Source language code "${o}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(const t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(o);break}}return r.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(s)])[0],e._call(t,n)}class Ze extends be{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return Je(this,e,t,n)}}class et extends be{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))).map((e=>e.slice(2,-2))),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,n){return Je(this,e,t,n)}}class tt extends be{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(e,{return_timestamps:t=!1,return_language:n=!1,time_precision:r=null,force_full_sequences:o=!0}={}){if(null===r)throw Error("Must specify time_precision");let s=null;const i="word"===t;function l(){return{language:s,timestamp:[null,null],text:""}}const c=[];let u=l(),p=0;const h=this.timestamp_begin;let m=[],_=[],f=!1,g=null;const M=new Set(this.all_special_ids);for(const n of e){const e=n.tokens,o=i?n.token_timestamps:null;let w=null,T=h;if("stride"in n){const[t,o,s]=n.stride;if(p-=o,g=t-s,o&&(T=o/r+h),s)for(let t=e.length-1;t>=0;--t){const n=Number(e[t]);if(n>=h){if(null!==w&&(n-h)*r<g)break;w=n}}}let x=[],y=[];for(let n=0;n<e.length;++n){const g=Number(e[n]);if(M.has(g)){const e=this.decode([g]),n=d.WHISPER_LANGUAGE_MAPPING.get(e.slice(2,-2));if(void 0!==n){if(null!==s&&n!==s&&!t){m.push(x);const e=this.findLongestCommonSequence(m)[0],t=this.decode(e);u.text=t,c.push(u),m=[],x=[],u=l()}s=u.language=n}}else if(g>=h){const e=(g-h)*r+p,t=(0,a.round)(e,2);if(null!==w&&g>=w)f=!0;else if(f||m.length>0&&g<T)f=!1;else if(null===u.timestamp[0])u.timestamp[0]=t;else if(t===u.timestamp[0]);else{u.timestamp[1]=t,m.push(x),i&&_.push(y);const[e,n]=this.findLongestCommonSequence(m,_),r=this.decode(e);u.text=r,i&&(u.words=this.collateWordTimestamps(e,n,s)),c.push(u),m=[],x=[],_=[],y=[],u=l()}}else if(x.push(g),i){let e,t=(0,a.round)(o[n]+p,2);if(n+1<o.length){e=(0,a.round)(o[n+1]+p,2);const s=this.decode([g]);b.test(s)&&(e=(0,a.round)(Math.min(t+r,e),2))}else e=null;y.push([t,e])}}if("stride"in n){const[e,t,r]=n.stride;p+=e-r}x.length>0?(m.push(x),i&&_.push(y)):m.every((e=>0===e.length))&&(u=l(),m=[],x=[],_=[],y=[])}if(m.length>0){if(o&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,n]=this.findLongestCommonSequence(m,_),r=this.decode(e);u.text=r,i&&(u.words=this.collateWordTimestamps(e,n,s)),c.push(u)}let w=Object.create(null);const T=c.map((e=>e.text)).join("");if(t||n){for(let e=0;e<c.length;++e){const r=c[e];t||delete r.timestamp,n||delete r.language}if(i){const e=[];for(const t of c)for(const n of t.words)e.push(n);w={chunks:e}}else w={chunks:c}}return[T,w]}findLongestCommonSequence(e,t=null){let n=e[0],r=n.length,o=[];const s=Array.isArray(t)&&t.length>0;let a=s?[]:null,i=s?t[0]:null;for(let l=1;l<e.length;++l){const c=e[l];let d=0,u=[r,r,0,0];const p=c.length;for(let e=1;e<r+p;++e){const o=Math.max(0,r-e),a=Math.min(r,r+p-e),h=n.slice(o,a),m=Math.max(0,e-r),_=Math.min(p,e),f=c.slice(m,_);if(h.length!==f.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let g;g=s?h.filter(((e,n)=>e===f[n]&&i[o+n]<=t[l][m+n])).length:h.filter(((e,t)=>e===f[t])).length;const M=g/e+e/1e4;g>1&&M>d&&(d=M,u=[o,a,m,_])}const[h,m,_,f]=u,g=Math.floor((m+h)/2),M=Math.floor((f+_)/2);o.push(...n.slice(0,g)),n=c.slice(M),r=n.length,s&&(a.push(...i.slice(0,g)),i=t[l].slice(M))}return o.push(...n),s?(a.push(...i),[o,a]):[o,[]]}collateWordTimestamps(e,t,n){const[r,o,s]=this.combineTokensIntoWords(e,n),a=[];for(let e=0;e<r.length;++e){const n=s[e];a.push({text:r[e],timestamp:[t[n.at(0)][0],t[n.at(-1)][1]]})}return a}combineTokensIntoWords(e,t,n="\"'“¡¿([{-",r="\"'.。,，!！?？:：”)]}、"){let o,s,a;return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[o,s,a]=this.splitTokensOnUnicode(e):[o,s,a]=this.splitTokensOnSpaces(e),this.mergePunctuations(o,s,a,n,r)}decode(e,t){let n;return t?.decode_with_timestamps?(e instanceof i.Tensor&&(e=_(e)),n=this.decodeWithTimestamps(e,t)):n=super.decode(e,t),n}decodeWithTimestamps(e,t){const n=t?.time_precision??.02,r=Array.from(this.all_special_ids).at(-1)+1;let o=[[]];for(let t of e)if(t=Number(t),t>=r){const e=((t-r)*n).toFixed(2);o.push(`<|${e}|>`),o.push([])}else o[o.length-1].push(t);return o=o.map((e=>"string"==typeof e?e:super.decode(e,t))),o.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0}),n=[],r=[],o=[];let s=[],a=[],i=0;for(let l=0;l<e.length;++l){const c=e[l];s.push(c),a.push(l);const d=this.decode(s,{decode_with_timestamps:!0});d.includes("�")&&"�"!==t[i+d.indexOf("�")]||(n.push(d),r.push(s),o.push(a),s=[],a=[],i+=d.length)}return[n,r,o]}splitTokensOnSpaces(e){const[t,n,r]=this.splitTokensOnUnicode(e),o=[],s=[],a=[],i=new RegExp(`^[${w}]$`,"gu");for(let e=0;e<t.length;++e){const l=t[e],c=n[e],d=r[e],u=c[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),p=l.startsWith(" "),h=l.trim(),m=i.test(h);if(u||p||m||0===o.length)o.push(l),s.push(c),a.push(d);else{const e=o.length-1;o[e]+=l,s[e].push(...c),a[e].push(...d)}}return[o,s,a]}mergePunctuations(e,t,n,r,s){const a=structuredClone(e),i=structuredClone(t),l=structuredClone(n);let c=a.length-2,d=a.length-1;for(;c>=0;)a[c].startsWith(" ")&&r.includes(a[c].trim())?(a[d]=a[c]+a[d],i[d]=(0,o.mergeArrays)(i[c],i[d]),l[d]=(0,o.mergeArrays)(l[c],l[d]),a[c]="",i[c]=[],l[c]=[]):d=c,--c;for(c=0,d=1;d<a.length;)!a[c].endsWith(" ")&&s.includes(a[d])?(a[c]+=a[d],i[c]=(0,o.mergeArrays)(i[c],i[d]),l[c]=(0,o.mergeArrays)(l[c],l[d]),a[d]="",i[d]=[],l[d]=[]):c=d,++d;return[a.filter((e=>e)),i.filter((e=>e.length>0)),l.filter((e=>e.length>0))]}get_decoder_prompt_ids({language:e=null,task:t=null,no_timestamps:n=!0}={}){const r=[];if(e){const t=(0,d.whisper_language_to_code)(e),n=this.model.tokens_to_ids.get(`<|${t}|>`);if(void 0===n)throw new Error(`Unable to find language "${t}" in model vocabulary. Please report this issue at ${u.GITHUB_ISSUE_URL}.`);r.push(n)}else r.push(null);if(t){if("transcribe"!==(t=t.toLowerCase())&&"translate"!==t)throw new Error(`Task "${t}" is not supported. Must be one of: ["transcribe", "translate"]`);const e=this.model.tokens_to_ids.get(`<|${t}|>`);if(void 0===e)throw new Error(`Unable to find task "${t}" in model vocabulary. Please report this issue at ${u.GITHUB_ISSUE_URL}.`);r.push(e)}else r.push(null);if(n){const e=this.model.tokens_to_ids.get("<|notimestamps|>");if(void 0===e)throw new Error(`Unable to find "<|notimestamps|>" in model vocabulary. Please report this issue at ${u.GITHUB_ISSUE_URL}.`);r.push(e)}return r.map(((e,t)=>[t+1,e])).filter((e=>null!==e[1]))}}class nt extends be{}class rt extends be{}class ot extends be{}class st extends be{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter((e=>this.languageRegex.test(e))),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(null===e)return null;const[t,...n]=e.trim().split(this.languageRegex);if(0===n.length)return super._encode_text(t);if(2===n.length){const[e,t]=n;return this.supported_language_codes.includes(e)||console.warn(`Unsupported language code "${e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,o.mergeArrays)([e],super._encode_text(t))}}}class at extends be{}class it extends be{}class lt extends be{}class ct extends be{}class dt extends be{}class ut extends be{constructor(e,t){super(e,t),this.decoder=new ce({})}}class pt extends be{}class ht{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:Ie,DistilBertTokenizer:Ae,CamembertTokenizer:Ee,DebertaTokenizer:Fe,DebertaV2Tokenizer:Ce,BertTokenizer:Te,HerbertTokenizer:Pe,ConvBertTokenizer:ve,RoFormerTokenizer:Se,XLMTokenizer:Le,ElectraTokenizer:ze,MobileBertTokenizer:ye,SqueezeBertTokenizer:ke,AlbertTokenizer:xe,GPT2Tokenizer:Be,BartTokenizer:Ne,MBartTokenizer:Oe,MBart50Tokenizer:De,RobertaTokenizer:Ve,WhisperTokenizer:tt,CodeGenTokenizer:nt,CLIPTokenizer:rt,SiglipTokenizer:ot,MarianTokenizer:st,BloomTokenizer:je,NllbTokenizer:Ze,M2M100Tokenizer:et,LlamaTokenizer:Ge,CodeLlamaTokenizer:qe,XLMRobertaTokenizer:$e,MPNetTokenizer:We,FalconTokenizer:Ue,GPTNeoXTokenizer:Xe,EsmTokenizer:Qe,Wav2Vec2CTCTokenizer:at,BlenderbotTokenizer:it,BlenderbotSmallTokenizer:lt,SpeechT5Tokenizer:ct,NougatTokenizer:dt,VitsTokenizer:ut,Qwen2Tokenizer:He,GemmaTokenizer:Ye,Grok1Tokenizer:Ke,CohereTokenizer:pt,PreTrainedTokenizer:be};static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:o=!1,revision:s="main",legacy:a=null}={}){const[i,l]=await p(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:o,revision:s,legacy:a}),c=l.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let d=this.TOKENIZER_CLASS_MAPPING[c];return d||(console.warn(`Unknown tokenizer class "${c}", attempting to construct from base class.`),d=be),new d(i,l)}}},"./src/utils/audio.js":
/*!****************************!*\
  !*** ./src/utils/audio.js ***!
  \****************************/(e,t,n)=>{n.r(t),n.d(t,{hamming:()=>d,hanning:()=>c,mel_filter_bank:()=>_,read_audio:()=>i,spectrogram:()=>g,window_function:()=>M});var r=n(/*! ./hub.js */"./src/utils/hub.js"),o=n(/*! ./maths.js */"./src/utils/maths.js"),s=n(/*! ./core.js */"./src/utils/core.js"),a=n(/*! ./tensor.js */"./src/utils/tensor.js");async function i(e,t){if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const n=await(await(0,r.getFile)(e)).arrayBuffer(),o=new AudioContext({sampleRate:t});void 0===t&&console.warn(`No sampling rate provided, using default of ${o.sampleRate}Hz.`);const s=await o.decodeAudioData(n);let a;if(2===s.numberOfChannels){const e=Math.sqrt(2),t=s.getChannelData(0),n=s.getChannelData(1);a=new Float32Array(t.length);for(let r=0;r<s.length;++r)a[r]=e*(t[r]+n[r])/2}else a=s.getChannelData(0);return a}function l(e,t){if(e<1)return new Float64Array;if(1===e)return new Float64Array([1]);const n=1-t,r=2*Math.PI/(e-1),o=new Float64Array(e);for(let s=0;s<e;++s)o[s]=t-n*Math.cos(s*r);return o}function c(e){return l(e,.5)}function d(e){return l(e,.54)}const u={htk:e=>2595*Math.log10(1+e/700),kaldi:e=>1127*Math.log(1+e/700),slaney:(e,t=1e3,n=15,r=27/Math.log(6.4))=>e>=t?n+Math.log(e/t)*r:3*e/200};function p(e,t="htk"){const n=u[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map((e=>n(e)))}const h={htk:e=>700*(10**(e/2595)-1),kaldi:e=>700*(Math.exp(e/1127)-1),slaney:(e,t=1e3,n=15,r=Math.log(6.4)/27)=>e>=n?t*Math.exp(r*(e-n)):200*e/3};function m(e,t,n){const r=(t-e)/(n-1);return Float64Array.from({length:n},((t,n)=>e+r*n))}function _(e,t,n,r,o,s=null,a="htk",i=!1){if(null!==s&&"slaney"!==s)throw new Error('norm must be one of null or "slaney"');const l=m(p(n,a),p(r,a),t+2);let c,d=function(e,t="htk"){const n=h[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map((e=>n(e)))}(l,a);if(i){const t=o/(2*e);c=p(Float64Array.from({length:e},((e,n)=>n*t)),a),d=l}else c=m(0,Math.floor(o/2),e);const u=function(e,t){const n=Float64Array.from({length:t.length-1},((e,n)=>t[n+1]-t[n])),r=Array.from({length:e.length},(()=>new Array(t.length)));for(let n=0;n<e.length;++n){const o=r[n];for(let r=0;r<t.length;++r)o[r]=t[r]-e[n]}const o=t.length-2,s=Array.from({length:o},(()=>new Array(e.length)));for(let t=0;t<e.length;++t){const e=r[t];for(let r=0;r<o;++r){const o=-e[r]/n[r],a=e[r+2]/n[r+1];s[r][t]=Math.max(0,Math.min(o,a))}}return s}(c,d);if(null!==s&&"slaney"===s)for(let n=0;n<t;++n){const t=u[n],r=2/(d[n+2]-d[n]);for(let n=0;n<e;++n)t[n]*=r}return u}function f(e,t,n,r,s){if(n<=0)throw new Error("reference must be greater than zero");if(r<=0)throw new Error("min_value must be greater than zero");n=Math.max(r,n);const a=Math.log10(n);for(let n=0;n<e.length;++n)e[n]=t*Math.log10(Math.max(r,e[n])-a);if(null!==s){if(s<=0)throw new Error("db_range must be greater than zero");const t=(0,o.max)(e)[0]-s;for(let n=0;n<e.length;++n)e[n]=Math.max(e[n],t)}return e}async function g(e,t,n,r,{fft_length:i=null,power:l=1,center:c=!0,pad_mode:d="reflect",onesided:u=!0,preemphasis:p=null,mel_filters:h=null,mel_floor:m=1e-10,log_mel:_=null,reference:g=1,min_value:M=1e-10,db_range:w=null,remove_dc_offset:b=null,min_num_frames:T=null,max_num_frames:x=null,do_pad:y=!0,transpose:k=!1}={}){const F=t.length;if(null===i&&(i=n),n>i)throw Error(`frame_length (${n}) may not be larger than fft_length (${i})`);if(F!==n)throw new Error(`Length of the window (${F}) must equal frame_length (${n})`);if(r<=0)throw new Error("hop_length must be greater than zero");if(null===l&&null!==h)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(c){if("reflect"!==d)throw new Error(`pad_mode="${d}" not implemented yet.`);const t=Math.floor((i-1)/2)+1;e=function(e,t,n){const r=new e.constructor(e.length+t+n),o=e.length-1;for(let n=0;n<e.length;++n)r[t+n]=e[n];for(let n=1;n<=t;++n)r[t-n]=e[(0,s.calculateReflectOffset)(n,o)];for(let a=1;a<=n;++a)r[o+t+a]=e[(0,s.calculateReflectOffset)(o-a,o)];return r}(e,t,t)}let C=Math.floor(1+Math.floor((e.length-n)/r));null!==T&&C<T&&(C=T);const P=u?Math.floor(i/2)+1:i;let v=C,S=C;null!==x&&(x>C?y&&(S=x):S=v=x);const A=new o.FFT(i),E=new Float64Array(i),L=new Float64Array(A.outputBufferSize),z=new Float32Array(P*S);for(let o=0;o<v;++o){const s=o*r,a=Math.min(e.length-s,n);a!==n&&E.fill(0,0,n);for(let t=0;t<a;++t)E[t]=e[s+t];if(b){let e=0;for(let t=0;t<a;++t)e+=E[t];const t=e/a;for(let e=0;e<a;++e)E[e]-=t}if(null!==p){for(let e=a-1;e>=1;--e)E[e]-=p*E[e-1];E[0]*=1-p}for(let e=0;e<t.length;++e)E[e]*=t[e];A.realTransform(L,E);for(let e=0;e<P;++e){const t=e<<1;z[e*S+o]=L[t]**2+L[t+1]**2}}if(null!==l&&2!==l){const e=2/l;for(let t=0;t<z.length;++t)z[t]**=e}const I=h.length;let B=await(0,a.matmul)(new a.Tensor("float32",h.flat(),[I,P]),new a.Tensor("float32",z,[P,S]));k&&(B=B.transpose(1,0));const N=B.data;for(let e=0;e<N.length;++e)N[e]=Math.max(m,N[e]);if(null!==l&&null!==_){const e=Math.min(N.length,v*I);switch(_){case"log":for(let t=0;t<e;++t)N[t]=Math.log(N[t]);break;case"log10":for(let t=0;t<e;++t)N[t]=Math.log10(N[t]);break;case"dB":if(1===l)!function(e,t=1,n=1e-5,r=null){f(e,20,t,n,r)}(N,g,M,w);else{if(2!==l)throw new Error(`Cannot use log_mel option '${_}' with power ${l}`);!function(e,t=1,n=1e-10,r=null){f(e,10,t,n,r)}(N,g,M,w)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${_}'`)}}return B}function M(e,t,{periodic:n=!0,frame_length:r=null,center:o=!0}={}){const s=n?e+1:e;let a;switch(t){case"boxcar":a=new Float64Array(s).fill(1);break;case"hann":case"hann_window":a=c(s);break;case"hamming":a=d(s);break;case"povey":a=c(s).map((e=>Math.pow(e,.85)));break;default:throw new Error(`Unknown window type ${t}.`)}if(n&&(a=a.subarray(0,e)),null===r)return a;if(e>r)throw new Error(`Length of the window (${e}) may not be larger than frame_length (${r})`);return a}},"./src/utils/constants.js":
/*!********************************!*\
  !*** ./src/utils/constants.js ***!
  \********************************/(e,t,n)=>{n.r(t),n.d(t,{GITHUB_ISSUE_URL:()=>r});const r="https://github.com/xenova/transformers.js/issues/new/choose"},"./src/utils/core.js":
/*!***************************!*\
  !*** ./src/utils/core.js ***!
  \***************************/(e,t,n)=>{function r(e,t){e&&e(t)}function o(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[t,e])))}function s(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function a(e){return"TypedArray"===e?.prototype?.__proto__?.constructor?.name}function i(e){return Number.isInteger(e)||"bigint"==typeof e}function l(e){const t=[];let n=e;for(;Array.isArray(n);)t.push(n.length),n=n[0];return t}function c(e,t,n=void 0){const r=e[t];if(void 0!==r)return delete e[t],r;if(void 0===n)throw Error(`Key ${t} does not exist in object.`);return n}function d(...e){return Array.prototype.concat.apply([],e)}function u(...e){return e.reduce(((e,t)=>e.flatMap((e=>t.map((t=>[e,t]))))))}function p(e,t){return Math.abs((e+t)%(2*t)-t)}function h(e,t){return Object.assign({},...t.map((t=>{if(void 0!==e[t])return{[t]:e[t]}})))}n.r(t),n.d(t,{calculateDimensions:()=>l,calculateReflectOffset:()=>p,dispatchCallback:()=>r,escapeRegExp:()=>s,isIntegralNumber:()=>i,isTypedArray:()=>a,mergeArrays:()=>d,pick:()=>h,pop:()=>c,product:()=>u,reverseDictionary:()=>o})},"./src/utils/data-structures.js":
/*!**************************************!*\
  !*** ./src/utils/data-structures.js ***!
  \**************************************/(e,t,n)=>{n.r(t),n.d(t,{CharTrie:()=>o,PriorityQueue:()=>r,TokenLattice:()=>a});class r{constructor(e=((e,t)=>e>t),t=1/0){this._heap=[],this._comparator=e,this._maxSize=t}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const t of e)if(this.size<this._maxSize)this._heap.push(t),this._siftUp();else{const e=this._smallest();this._comparator(t,this._heap[e])&&(this._heap[e]=t,this._siftUpFrom(e))}return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const n=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=n}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class o{constructor(){this.root=s.default()}extend(e){for(let t of e)this.push(t)}push(e){let t=this.root;for(let n of e){let e=t.children.get(n);void 0===e&&(e=s.default(),t.children.set(n,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root,n="";for(let r=0;r<e.length&&void 0!==t;++r){const o=e[r];n+=o,t=t.children.get(o),void 0!==t&&t.isLeaf&&(yield n)}}}class s{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new s(!1,new Map)}}class a{constructor(e,t,n){this.sentence=e,this.len=e.length,this.bosTokenId=t,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},(()=>[])),this.endNodes=Array.from({length:this.len+1},(()=>[]));const r=new i(this.bosTokenId,0,0,0,0),o=new i(this.eosTokenId,1,this.len,0,0);this.nodes.push(r.clone()),this.nodes.push(o.clone()),this.beginNodes[this.len].push(o),this.endNodes[0].push(r)}insert(e,t,n,r){const o=this.nodes.length,s=new i(r,o,e,t,n);this.beginNodes[e].push(s),this.endNodes[e+t].push(s),this.nodes.push(s)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let n=0,r=null;for(let o of this.endNodes[t]){const t=o.backtraceScore+e.score;(null===r||t>n)&&(r=o.clone(),n=t)}if(null===r)return[];e.prev=r,e.backtraceScore=n}++t}const n=[],r=this.beginNodes[e][0].prev;if(null===r)return[];let o=r.clone();for(;null!==o.prev;){n.push(o.clone());const e=o.clone();o=e.prev.clone()}return n.reverse(),n}piece(e){return this.sentence.slice(e.pos,e.pos+e.length)}tokens(){return this.viterbi().map((e=>this.piece(e)))}tokenIds(){return this.viterbi().map((e=>e.tokenId))}}class i{constructor(e,t,n,r,o){this.tokenId=e,this.nodeId=t,this.pos=n,this.length=r,this.score=o,this.prev=null,this.backtraceScore=0}clone(){const e=new i(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}},"./src/utils/devices.js":
/*!******************************!*\
  !*** ./src/utils/devices.js ***!
  \******************************/(e,t,n)=>{n.r(t),n.d(t,{DEVICE_TYPES:()=>r});const r=Object.freeze({cpu:"cpu",gpu:"gpu",wasm:"wasm",webgpu:"webgpu"})},"./src/utils/dtypes.js":
/*!*****************************!*\
  !*** ./src/utils/dtypes.js ***!
  \*****************************/(e,t,n)=>{n.r(t),n.d(t,{DATA_TYPES:()=>a,DEFAULT_DEVICE_DTYPE_MAPPING:()=>i,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>s});var r=n(/*! ../env.js */"./src/env.js"),o=n(/*! ./devices.js */"./src/utils/devices.js");const s=function(){let e;return async function(){if(void 0===e)if(r.apis.IS_WEBGPU_AVAILABLE)try{const t=await navigator.gpu.requestAdapter();e=t.features.has("shader-f16")}catch(t){e=!1}else e=!1;return e}}(),a=Object.freeze({fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),i=Object.freeze({[o.DEVICE_TYPES.cpu]:a.q8,[o.DEVICE_TYPES.gpu]:a.fp32,[o.DEVICE_TYPES.wasm]:a.q8,[o.DEVICE_TYPES.webgpu]:a.fp32}),l=Object.freeze({[a.fp32]:"",[a.fp16]:"_fp16",[a.int8]:"_int8",[a.uint8]:"_uint8",[a.q8]:"_quantized",[a.q4]:"_q4",[a.q4f16]:"_q4f16",[a.bnb4]:"_bnb4"})},"./src/utils/generic.js":
/*!******************************!*\
  !*** ./src/utils/generic.js ***!
  \******************************/(e,t,n)=>{n.r(t),n.d(t,{Callable:()=>r});const r=class{constructor(){let e=function(...t){return e._call(...t)};return Object.setPrototypeOf(e,new.target.prototype)}_call(...e){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":
/*!**************************!*\
  !*** ./src/utils/hub.js ***!
  \**************************/(e,t,n)=>{n.r(t),n.d(t,{getFile:()=>c,getModelFile:()=>p,getModelJSON:()=>h});var r=n(/*! fs */"?7a2c"),o=n(/*! path */"?a42a"),s=n(/*! ../env.js */"./src/env.js"),a=n(/*! ./core.js */"./src/utils/core.js");class i{_CONTENT_TYPE_MAP={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=r.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=r.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();let n=this;this.body=new ReadableStream({start(e){n.arrayBuffer().then((t=>{e.enqueue(new Uint8Array(t)),e.close()}))}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",this._CONTENT_TYPE_MAP[e]??"application/octet-stream")}clone(){let e=new i(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await r.promises.readFile(this.filePath)).buffer}async blob(){const e=await r.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await r.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function l(e,t=null,n=null){let r;try{r=new URL(e)}catch(e){return!1}return!(t&&!t.includes(r.protocol))&&!(n&&!n.includes(r.hostname))}async function c(e){if(s.env.useFS&&!l(e,["http:","https:","blob:"]))return new i(e);if("undefined"!=typeof process&&"node"===process?.release?.name){const t=!!process.env?.TESTING_REMOTELY,n=s.env.version,r=new Headers;r.set("User-Agent",`transformers.js/${n}; is_ci/${t};`);if(l(e,["http:","https:"],["huggingface.co","hf.co"])){const e=process.env?.HF_TOKEN??process.env?.HF_ACCESS_TOKEN;e&&r.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:r})}return fetch(e)}const d={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class u{constructor(e){this.path=e}async match(e){let t=o.join(this.path,e),n=new i(t);return n.exists?n:void 0}async put(e,t){const n=Buffer.from(await t.arrayBuffer());let s=o.join(this.path,e);try{await r.promises.mkdir(o.dirname(s),{recursive:!0}),await r.promises.writeFile(s,n)}catch(e){console.warn("An error occurred while writing the file to cache:",e)}}}async function p(e,t,n=!0,r={}){if(!s.env.allowLocalModels){if(r.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!s.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let o;if((0,a.dispatchCallback)(r.progress_callback,{status:"initiate",name:e,file:t}),!o&&s.env.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{o=await caches.open("transformers-cache")}catch(e){console.warn("An error occurred while opening the browser cache:",e)}}if(!o&&s.env.useFSCache&&(o=new u(r.cache_dir??s.env.cacheDir)),!o&&s.env.useCustomCache){if(!s.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!s.env.customCache.match||!s.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");o=s.env.customCache}const i=r.revision??"main";let p,h,_=m(e,t),f=m(s.env.localModelPath,_),g=m(s.env.remoteHost,s.env.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(i)),t),M="main"===i?_:m(e,i,t),w=o instanceof u?M:g,b=!1;o&&(h=await async function(e,...t){for(let n of t)try{let t=await e.match(n);if(t)return t}catch(e){continue}}(o,f,w));const T=void 0!==h;if(void 0===h){if(s.env.allowLocalModels){if(l(_,["http:","https:"])){if(r.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${_}.`);if(!s.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${_}.`)}else try{h=await c(f),p=f}catch(e){console.warn(`Unable to load from local path "${f}": "${e}"`)}}if(void 0===h||404===h.status){if(r.local_files_only||!s.env.allowRemoteModels){if(n)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${f}".`);return null}if(h=await c(g),200!==h.status)return function(e,t,n){if(!n)return null;const r=d[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${r}: "${t}".`)}(h.status,g,n);p=w}b=o&&"undefined"!=typeof Response&&h instanceof Response&&200===h.status}(0,a.dispatchCallback)(r.progress_callback,{status:"download",name:e,file:t});const x={status:"progress",name:e,file:t};let y;return r.progress_callback?T&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(y=new Uint8Array(await h.arrayBuffer()),(0,a.dispatchCallback)(r.progress_callback,{...x,progress:100,loaded:y.length,total:y.length})):y=await async function(e,t){const n=e.headers.get("Content-Length");null===n&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let r=parseInt(n??"0"),o=new Uint8Array(r),s=0;const a=e.body.getReader();async function i(){const{done:e,value:n}=await a.read();if(e)return;let l=s+n.length;if(l>r){r=l;let e=new Uint8Array(r);e.set(o),o=e}o.set(n,s),s=l;return t({progress:s/r*100,loaded:s,total:r}),i()}return await i(),o}(h,(e=>{(0,a.dispatchCallback)(r.progress_callback,{...x,...e})})):y=new Uint8Array(await h.arrayBuffer()),b&&p&&void 0===await o.match(p)&&await o.put(p,new Response(y,{headers:h.headers})).catch((e=>{console.warn(`Unable to add response to browser cache: ${e}.`)})),(0,a.dispatchCallback)(r.progress_callback,{status:"done",name:e,file:t}),y}async function h(e,t,n=!0,r={}){let o=await p(e,t,n,r);if(null===o)return{};let s=new TextDecoder("utf-8").decode(o);return JSON.parse(s)}function m(...e){return(e=e.map(((t,n)=>(n&&(t=t.replace(new RegExp("^/"),"")),n!==e.length-1&&(t=t.replace(new RegExp("/$"),"")),t)))).join("/")}},"./src/utils/image.js":
/*!****************************!*\
  !*** ./src/utils/image.js ***!
  \****************************/(e,t,n)=>{n.r(t),n.d(t,{RawImage:()=>m});var r=n(/*! ./hub.js */"./src/utils/hub.js"),o=n(/*! ../env.js */"./src/env.js"),s=n(/*! ./tensor.js */"./src/utils/tensor.js"),a=n(/*! sharp */"sharp");const i="undefined"!=typeof self,l=i&&"DedicatedWorkerGlobalScope"===self.constructor.name;let c,d,u;if(i)c=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},u=self.createImageBitmap,d=self.ImageData;else{if(!a.default)throw new Error("Unable to load image processing library.");u=async e=>{const t=(await e.metadata()).channels,{data:n,info:r}=await e.rotate().raw().toBuffer({resolveWithObject:!0}),o=new m(new Uint8ClampedArray(n),r.width,r.height,r.channels);return void 0!==t&&t!==r.channels&&o.convert(t),o}}const p={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},h=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class m{constructor(e,t,n,r){this.data=e,this.width=t,this.height=n,this.channels=r}get size(){return[this.width,this.height]}static async read(e){if(e instanceof m)return e;if("string"==typeof e||e instanceof URL)return await this.fromURL(e);throw new Error("Unsupported input type: "+typeof e)}static fromCanvas(e){if(!i)throw new Error("fromCanvas() is only supported in browser environments.");const t=e.getContext("2d").getImageData(0,0,e.width,e.height).data;return new m(t,e.width,e.height,4)}static async fromURL(e){const t=await(0,r.getFile)(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);const n=await t.blob();return this.fromBlob(n)}static async fromBlob(e){if(i){const t=await u(e),n=c(t.width,t.height).getContext("2d");return n.drawImage(t,0,0),new this(n.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{const t=(0,a.default)(await e.arrayBuffer());return await u(t)}}static fromTensor(e,t="CHW"){if(3!==e.dims.length)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if("CHW"===t)e=e.transpose(1,2,0);else if("HWC"!==t)throw new Error(`Unsupported channel format: ${t}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new m(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(1===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,n=0;t<this.data.length;t+=this.channels){const r=this.data[t],o=this.data[t+1],s=this.data[t+2];e[n++]=Math.round(.2989*r+.587*o+.114*s)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t];break;case 4:for(let t=0,n=0;t<this.data.length;t+=4)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=255;break;case 3:for(let t=0,n=0;t<this.data.length;t+=3)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2],e[n++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}async resize(e,t,{resample:n=2}={}){let r=p[n]??n;if(i){const n=this.channels,r=this.toCanvas(),o=c(e,t).getContext("2d");o.drawImage(r,0,0,e,t);return new m(o.getImageData(0,0,e,t).data,e,t,4).convert(n)}{let n=this.toSharp();switch(r){case"box":case"hamming":"box"!==r&&"hamming"!==r||(console.warn(`Resampling method ${r} is not yet supported. Using bilinear instead.`),r="bilinear");case"nearest":case"bilinear":case"bicubic":n=n.affine([e/this.width,0,0,t/this.height],{interpolator:r});break;case"lanczos":n=n.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${r} is not supported.`)}return await u(n)}}async pad([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.max(n,0),r=Math.max(r,0),0===e&&0===t&&0===n&&0===r)return this;if(i){const o=this.channels,s=this.toCanvas(),a=this.width+e+t,i=this.height+n+r,l=c(a,i).getContext("2d");l.drawImage(s,0,0,this.width,this.height,e,n,a,i);return new m(l.getImageData(0,0,a,i).data,a,i,4).convert(o)}{const o=this.toSharp().extend({left:e,right:t,top:n,bottom:r});return await u(o)}}async crop([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.min(n,this.width-1),r=Math.min(r,this.height-1),0===e&&0===t&&n===this.width-1&&r===this.height-1)return this;const o=n-e+1,s=r-t+1;if(i){const n=this.channels,r=this.toCanvas(),a=c(o,s).getContext("2d");a.drawImage(r,e,t,o,s,0,0,o,s);return new m(a.getImageData(0,0,o,s).data,o,s,4).convert(n)}{const n=this.toSharp().extract({left:e,top:t,width:o,height:s});return await u(n)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;const n=(this.width-e)/2,r=(this.height-t)/2;if(i){const o=this.channels,s=this.toCanvas(),a=c(e,t).getContext("2d");let i=0,l=0,d=0,u=0;n>=0?i=n:d=-n,r>=0?l=r:u=-r,a.drawImage(s,i,l,e,t,d,u,e,t);return new m(a.getImageData(0,0,e,t).data,e,t,4).convert(o)}{let o=this.toSharp();if(n>=0&&r>=0)o=o.extract({left:Math.floor(n),top:Math.floor(r),width:e,height:t});else if(n<=0&&r<=0){const s=Math.floor(-r),a=Math.floor(-n);o=o.extend({top:s,left:a,right:e-this.width-a,bottom:t-this.height-s})}else{let s=[0,0],a=0;r<0?(s[0]=Math.floor(-r),s[1]=t-this.height-s[0]):a=Math.floor(r);let i=[0,0],l=0;n<0?(i[0]=Math.floor(-n),i[1]=e-this.width-i[0]):l=Math.floor(n),o=o.extend({top:s[0],bottom:s[1],left:i[0],right:i[1]}).extract({left:l,top:a,width:e,height:t})}return await u(o)}}async toBlob(e="image/png",t=1){if(!i)throw new Error("toBlob() is only supported in browser environments.");const n=this.toCanvas();return await n.convertToBlob({type:e,quality:t})}toTensor(e="CHW"){let t=new s.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===e);else{if("CHW"!==e)throw new Error(`Unsupported channel format: ${e}`);t=t.permute(2,0,1)}return t}toCanvas(){if(!i)throw new Error("toCanvas() is only supported in browser environments.");const e=this.clone().rgba(),t=c(e.width,e.height),n=new d(e.data,e.width,e.height);return t.getContext("2d").putImageData(n,0,0),t}_update(e,t,n,r=null){return this.data=e,this.width=t,this.height=n,null!==r&&(this.channels=r),this}clone(){return new m(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(!i){if(o.env.useFS){const t=this.toSharp();return await t.toFile(e)}throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(l)throw new Error("Unable to save an image from a Web Worker.");const t=e.split(".").pop().toLowerCase(),n=h.get(t)??"image/png",r=await this.toBlob(n),o=URL.createObjectURL(r),s=document.createElement("a");s.href=o,s.download=e,s.click(),s.remove()}}toSharp(){if(i)throw new Error("toSharp() is only supported in server-side environments.");return(0,a.default)(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}},"./src/utils/maths.js":
/*!****************************!*\
  !*** ./src/utils/maths.js ***!
  \****************************/(e,t,n)=>{function r(e,[t,n,r],[o,s],a="bilinear",i=!1){const l=s/r,c=o/n,d=new e.constructor(o*s*t),u=n*r,p=o*s;for(let a=0;a<o;++a)for(let o=0;o<s;++o){const i=a*s+o,h=(o+.5)/l-.5,m=(a+.5)/c-.5;let _=Math.floor(h),f=Math.floor(m);const g=Math.min(_+1,r-1),M=Math.min(f+1,n-1);_=Math.max(_,0),f=Math.max(f,0);const w=h-_,b=m-f,T=(1-w)*(1-b),x=w*(1-b),y=(1-w)*b,k=w*b,F=f*r,C=M*r,P=F+_,v=F+g,S=C+_,A=C+g;for(let n=0;n<t;++n){const t=n*u;d[n*p+i]=T*e[t+P]+x*e[t+v]+y*e[t+S]+k*e[t+A]}}return d}function o(e,t,n){const r=new Array(n.length),o=new Array(n.length);for(let e=n.length-1,s=1;e>=0;--e)o[e]=s,r[e]=t[n[e]],s*=r[e];const s=n.map(((e,t)=>o[n.indexOf(t)])),a=new e.constructor(e.length);for(let n=0;n<e.length;++n){let r=0;for(let e=t.length-1,o=n;e>=0;--e)r+=o%t[e]*s[e],o=Math.floor(o/t[e]);a[r]=e[n]}return[a,r]}function s(e){const t=u(e)[0],n=e.map((e=>Math.exp(e-t))),r=n.reduce(((e,t)=>e+t),0);return n.map((e=>e/r))}function a(e){return s(e).map((e=>Math.log(e)))}function i(e,t){let n=0;for(let r=0;r<e.length;++r)n+=e[r]*t[r];return n}function l(e,t){return i(e,t)/(c(e)*c(t))}function c(e){return Math.sqrt(e.reduce(((e,t)=>e+t*t),0))}function d(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]<t&&(t=e[r],n=r);return[t,n]}function u(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r],n=r);return[Number(t),n]}function p(e){return e>0&&0==(e&e-1)}n.r(t),n.d(t,{FFT:()=>_,bankers_round:()=>M,cos_sim:()=>l,dot:()=>i,dynamic_time_warping:()=>w,interpolate_data:()=>r,log_softmax:()=>a,magnitude:()=>c,max:()=>u,medianFilter:()=>f,min:()=>d,permute_data:()=>o,round:()=>g,softmax:()=>s});class h{constructor(e){if(this.size=0|e,this.size<=1||!p(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(2*this.size);for(let e=0;e<this.table.length;e+=2){const t=Math.PI*e/this.size;this.table[e]=Math.cos(t),this.table[e+1]=-Math.sin(t)}let t=0;for(let e=1;this.size>e;e<<=1)++t;this._width=t%2==0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let e=0;e<this._bitrev.length;++e){this._bitrev[e]=0;for(let t=0;t<this._width;t+=2){const n=this._width-t-2;this._bitrev[e]|=(e>>>t&3)<<n}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,t){const n=t||new Array(e.length>>>1);for(let t=0;t<e.length;t+=2)n[t>>>1]=e[t];return n}toComplexArray(e,t){const n=t||this.createComplexArray();for(let t=0;t<n.length;t+=2)n[t]=e[t>>>1],n[t+1]=0;return n}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let t=0;t<e.length;++t)e[t]/=this.size}_transform4(e,t,n){const r=this._csize;let o,s,a=1<<this._width,i=r/a<<1;const l=this._bitrev;if(4===i)for(o=0,s=0;o<r;o+=i,++s){const n=l[s];this._singleTransform2(t,e,o,n,a)}else for(o=0,s=0;o<r;o+=i,++s){const r=l[s];this._singleTransform4(t,e,o,r,a,n)}const c=this.table;for(a>>=2;a>=2;a>>=2){i=r/a<<1;const t=i>>>2;for(o=0;o<r;o+=i){const r=o+t-1;for(let s=o,i=0;s<r;s+=2,i+=a){const r=s,o=r+t,a=o+t,l=a+t,d=e[r],u=e[r+1],p=e[o],h=e[o+1],m=e[a],_=e[a+1],f=e[l],g=e[l+1],M=c[i],w=n*c[i+1],b=p*M-h*w,T=p*w+h*M,x=c[2*i],y=n*c[2*i+1],k=m*x-_*y,F=m*y+_*x,C=c[3*i],P=n*c[3*i+1],v=f*C-g*P,S=f*P+g*C,A=d+k,E=u+F,L=d-k,z=u-F,I=b+v,B=T+S,N=n*(b-v),O=n*(T-S);e[r]=A+I,e[r+1]=E+B,e[o]=L+O,e[o+1]=z-N,e[a]=A-I,e[a+1]=E-B,e[l]=L-O,e[l+1]=z+N}}}}_singleTransform2(e,t,n,r,o){const s=e[r],a=e[r+1],i=e[r+o],l=e[r+o+1];t[n]=s+i,t[n+1]=a+l,t[n+2]=s-i,t[n+3]=a-l}_singleTransform4(e,t,n,r,o,s){const a=2*o,i=3*o,l=e[r],c=e[r+1],d=e[r+o],u=e[r+o+1],p=e[r+a],h=e[r+a+1],m=e[r+i],_=e[r+i+1],f=l+p,g=c+h,M=l-p,w=c-h,b=d+m,T=u+_,x=s*(d-m),y=s*(u-_);t[n]=f+b,t[n+1]=g+T,t[n+2]=M+y,t[n+3]=w-x,t[n+4]=f-b,t[n+5]=g-T,t[n+6]=M-y,t[n+7]=w+x}_realTransform4(e,t,n){const r=this._csize;let o,s,a=1<<this._width,i=r/a<<1;const l=this._bitrev;if(4===i)for(o=0,s=0;o<r;o+=i,++s){const n=l[s];this._singleRealTransform2(t,e,o,n>>>1,a>>>1)}else for(o=0,s=0;o<r;o+=i,++s){const r=l[s];this._singleRealTransform4(t,e,o,r>>>1,a>>>1,n)}const c=this.table;for(a>>=2;a>=2;a>>=2){i=r/a<<1;const t=i>>>1,s=t>>>1,l=s>>>1;for(o=0;o<r;o+=i)for(let r=0,i=0;r<=l;r+=2,i+=a){const a=o+r,d=a+s,u=d+s,p=u+s,h=e[a],m=e[a+1],_=e[d],f=e[d+1],g=e[u],M=e[u+1],w=e[p],b=e[p+1],T=h,x=m,y=c[i],k=n*c[i+1],F=_*y-f*k,C=_*k+f*y,P=c[2*i],v=n*c[2*i+1],S=g*P-M*v,A=g*v+M*P,E=c[3*i],L=n*c[3*i+1],z=w*E-b*L,I=w*L+b*E,B=T+S,N=x+A,O=T-S,D=x-A,V=F+z,j=C+I,R=n*(F-z),G=n*(C-I);if(e[a]=B+V,e[a+1]=N+j,e[d]=O+G,e[d+1]=D-R,0===r){e[u]=B-V,e[u+1]=N-j;continue}if(r===l)continue;const q=o+s-r,$=o+t-r;e[q]=O-n*G,e[q+1]=-D-n*R,e[$]=B-n*V,e[$+1]=n*j-N}}const d=r>>>1;for(let t=2;t<d;t+=2)e[r-t]=e[t],e[r-t+1]=-e[t+1]}_singleRealTransform2(e,t,n,r,o){const s=e[r],a=e[r+o];t[n]=s+a,t[n+1]=0,t[n+2]=s-a,t[n+3]=0}_singleRealTransform4(e,t,n,r,o,s){const a=2*o,i=3*o,l=e[r],c=e[r+o],d=e[r+a],u=e[r+i],p=l+d,h=l-d,m=c+u,_=s*(c-u);t[n]=p+m,t[n+1]=0,t[n+2]=h,t[n+3]=-_,t[n+4]=p-m,t[n+5]=0,t[n+6]=h,t[n+7]=_}}class m{constructor(e){const t=2*(e-1),n=2*(2*e-1),r=2**Math.ceil(Math.log2(n));this.bufferSize=r,this._a=t;const o=new Float64Array(n),s=new Float64Array(r);this._chirpBuffer=new Float64Array(r),this._buffer1=new Float64Array(r),this._buffer2=new Float64Array(r),this._outBuffer1=new Float64Array(r),this._outBuffer2=new Float64Array(r);const a=-2*Math.PI/e,i=Math.cos(a),l=Math.sin(a);for(let t=0;t<n>>1;++t){const n=(t+1-e)**2/2,r=Math.sqrt(i**2+l**2)**n,a=n*Math.atan2(l,i),c=2*t;o[c]=r*Math.cos(a),o[c+1]=r*Math.sin(a),s[c]=o[c],s[c+1]=-o[c+1]}this._slicedChirpBuffer=o.subarray(t,n),this._f=new h(r>>1),this._f.transform(this._chirpBuffer,s)}_transform(e,t,n){const r=this._buffer1,o=this._buffer2,s=this._outBuffer1,a=this._outBuffer2,i=this._chirpBuffer,l=this._slicedChirpBuffer,c=this._a;if(n)for(let e=0;e<l.length;e+=2){const n=e+1,o=t[e>>1];r[e]=o*l[e],r[n]=o*l[n]}else for(let e=0;e<l.length;e+=2){const n=e+1;r[e]=t[e]*l[e]-t[n]*l[n],r[n]=t[e]*l[n]+t[n]*l[e]}this._f.transform(s,r);for(let e=0;e<i.length;e+=2){const t=e+1;o[e]=s[e]*i[e]-s[t]*i[t],o[t]=s[e]*i[t]+s[t]*i[e]}this._f.inverseTransform(a,o);for(let t=0;t<a.length;t+=2){const n=a[t+c],r=a[t+c+1],o=l[t],s=l[t+1];e[t]=n*o-r*s,e[t+1]=n*s+r*o}}transform(e,t){this._transform(e,t,!1)}realTransform(e,t){this._transform(e,t,!0)}}class _{constructor(e){this.fft_length=e,this.isPowerOfTwo=p(e),this.isPowerOfTwo?(this.fft=new h(e),this.outputBufferSize=2*e):(this.fft=new m(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,t){this.fft.realTransform(e,t)}transform(e,t){this.fft.transform(e,t)}}function f(e,t){if(t%2==0||t<=0)throw new Error("Window size must be a positive odd number");const n=new e.constructor(e.length),r=new e.constructor(t),o=Math.floor(t/2);for(let t=0;t<e.length;++t){let s=0;for(let n=-o;n<=o;++n){let o=t+n;o<0?o=Math.abs(o):o>=e.length&&(o=2*(e.length-1)-o),r[s++]=e[o]}r.sort(),n[t]=r[o]}return n}function g(e,t){const n=Math.pow(10,t);return Math.round(e*n)/n}function M(e){const t=Math.round(e);return Math.abs(e)%1==.5?t%2==0?t:t-1:t}function w(e){const t=e.length,n=e[0].length,r=[t+1,n+1],o=Array.from({length:r[0]},(()=>Array(r[1]).fill(1/0)));o[0][0]=0;const s=Array.from({length:r[0]},(()=>Array(r[1]).fill(-1)));for(let t=1;t<r[1];++t)for(let n=1;n<r[0];++n){const r=o[n-1][t-1],a=o[n-1][t],i=o[n][t-1];let l,c;r<a&&r<i?(l=r,c=0):a<r&&a<i?(l=a,c=1):(l=i,c=2),o[n][t]=e[n-1][t-1]+l,s[n][t]=c}for(let e=0;e<r[1];++e)s[0][e]=2;for(let e=0;e<r[0];++e)s[e][0]=1;let a=t,i=n,l=[],c=[];for(;a>0||i>0;)switch(l.push(a-1),c.push(i-1),s[a][i]){case 0:--a,--i;break;case 1:--a;break;case 2:--i;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${a}, ${i}]. Please file a bug report.`)}return l.reverse(),c.reverse(),[l,c]}},"./src/utils/tensor.js":
/*!*****************************!*\
  !*** ./src/utils/tensor.js ***!
  \*****************************/(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>i,cat:()=>w,full:()=>k,full_like:()=>F,interpolate:()=>c,interpolate_4d:()=>d,layer_norm:()=>_,matmul:()=>u,mean:()=>x,mean_pooling:()=>m,ones:()=>C,ones_like:()=>P,permute:()=>l,quantize_embeddings:()=>A,rfft:()=>p,stack:()=>b,std_mean:()=>T,topk:()=>h,zeros:()=>v,zeros_like:()=>S});var r=n(/*! ./maths.js */"./src/utils/maths.js"),o=n(/*! ../backends/onnx.js */"./src/backends/onnx.js"),s=n(/*! ../ops/registry.js */"./src/ops/registry.js");const a=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class i{get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...e){return(0,o.isONNXTensor)(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new o.Tensor(e[0],e[1],e[2]),new Proxy(this,{get:(e,t)=>{if("string"==typeof t){let n=Number(t);if(Number.isInteger(n))return e._getitem(n)}return e[t]},set:(e,t,n)=>e[t]=n})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const n=t.reduce(((e,t)=>e*t));for(let r=0;r<e;++r)yield this._subarray(r,n,t)}else yield*this.data}_getitem(e){const[t,...n]=this.dims;if(e=M(e,t),n.length>0){const t=n.reduce(((e,t)=>e*t));return this._subarray(e,t,n)}return new i(this.type,[this.data[e]],n)}indexOf(e){const t=this.data;for(let n=0;n<t.length;++n)if(t[n]==e)return n;return-1}_subarray(e,t,n){const r=e*t,o=(e+1)*t,s="subarray"in this.data?this.data.subarray(r,o):this.data.slice(r,o);return new i(this.type,s,n)}item(){const e=this.data;if(1!==e.length)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return function(e,t){const n=e.length,r=t.reduce(((e,t)=>e*t));if(n!==r)throw Error(`cannot reshape array of size ${n} into shape (${t})`);let o=e;for(let e=t.length-1;e>=0;e--)o=o.reduce(((n,r)=>{let o=n[n.length-1];return o.length<t[e]?o.push(r):n.push([r]),n}),[[]]);return o[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=1/(1+Math.exp(-e[t]));return this}mul(e){return this.clone().mul_(e)}mul_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]+=e;return this}clone(){return new i(this.type,this.data.slice(),this.dims.slice())}slice(...e){const t=[],n=[];for(let r=0;r<this.dims.length;++r){let o=e[r];if(null==o)n.push([0,this.dims[r]]),t.push(this.dims[r]);else if("number"==typeof o)o=M(o,this.dims[r],r),n.push([o,o+1]);else{if(!Array.isArray(o)||2!==o.length)throw new Error(`Invalid slice: ${o}`);{let[e,s]=o;if(e=null===e?0:M(e,this.dims[r],r,!1),s=null===s?this.dims[r]:M(s,this.dims[r],r,!1),e>s)throw new Error(`Invalid slice: ${o}`);const a=[Math.max(e,0),Math.min(s,this.dims[r])];n.push(a),t.push(a[1]-a[0])}}}const r=n.map((([e,t])=>t-e)),o=r.reduce(((e,t)=>e*t)),s=this.data,a=new s.constructor(o),l=this.stride();for(let e=0;e<o;++e){let t=0;for(let o=r.length-1,s=e;o>=0;--o){const e=r[o];t+=(s%e+n[o][0])*l[o],s=Math.floor(s/e)}a[e]=s[t]}return new i(this.type,a,t)}permute(...e){return l(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,t=!1){return this.norm(1,e,t)}norm(e="fro",t=null,n=!1){if("fro"===e)e=2;else if("string"==typeof e)throw Error(`Unsupported norm: ${e}`);const r=this.data;if(null===t){let t=r.reduce(((t,n)=>t+n**e),0)**(1/e);return new i(this.type,[t],[])}t=M(t,this.dims.length);const o=this.dims.slice();o[t]=1;const s=new r.constructor(r.length/this.dims[t]);for(let n=0;n<r.length;++n){let a=0;for(let e=this.dims.length-1,r=n,s=1;e>=0;--e){const n=this.dims[e];if(e!==t){a+=r%n*s,s*=o[e]}r=Math.floor(r/n)}s[a]+=r[n]**e}if(1!==e)for(let t=0;t<s.length;++t)s[t]=s[t]**(1/e);return n||o.splice(t,1),new i(this.type,s,o)}normalize_(e=2,t=1){t=M(t,this.dims.length);const n=this.norm(e,t,!0),r=this.data,o=n.data;for(let e=0;e<r.length;++e){let n=0;for(let r=this.dims.length-1,o=e,s=1;r>=0;--r){const e=this.dims[r];if(r!==t){n+=o%e*s,s*=this.dims[r]}o=Math.floor(o/e)}r[e]/=o[n]}return this}normalize(e=2,t=1){return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let n=e.length-1,r=1;n>=0;--n)t[n]=r,r*=e[n];return t}(this.dims)}squeeze(e=null){return new i(this.type,this.data,f(this.dims,e))}squeeze_(e=null){return this.dims=f(this.dims,e),this}unsqueeze(e=null){return new i(this.type,this.data,g(this.dims,e))}unsqueeze_(e=null){return this.dims=g(this.dims,e),this}flatten_(e=0,t=-1){t=(t+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),r=this.dims.slice(e,t+1),o=this.dims.slice(t+1);return this.dims=[...n,r.reduce(((e,t)=>e*t),1),...o],this}flatten(e=0,t=-1){return this.clone().flatten_(e,t)}view(...e){let t=-1;for(let n=0;n<e.length;++n)if(-1===e[n]){if(-1!==t)throw new Error("Only one dimension can be inferred");t=n}const n=this.data;if(-1!==t){const r=e.reduce(((e,n,r)=>r!==t?e*n:e),1);e[t]=n.length/r}return new i(this.type,n,e)}neg_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=-e[t];return this}neg(){return this.clone().neg_()}clamp_(e,t){const n=this.data;for(let r=0;r<n.length;++r)n[r]=Math.min(Math.max(n[r],e),t);return this}clamp(e,t){return this.clone().clamp_(e,t)}round_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=Math.round(e[t]);return this}round(){return this.clone().round_()}mean(e=null,t=!1){return x(this,e,t)}to(e){if(this.type===e)return this;if(!a.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);return new i(e,a[e].from(this.data),this.dims)}}function l(e,t){const[n,o]=(0,r.permute_data)(e.data,e.dims,t);return new i(e.type,n,o)}function c(e,[t,n],o="bilinear",s=!1){const a=e.dims.at(-3)??1,l=e.dims.at(-2),c=e.dims.at(-1);let d=(0,r.interpolate_data)(e.data,[a,l,c],[t,n],o,s);return new i(e.type,d,[a,t,n])}async function d(e,{size:t=null,mode:n="bilinear"}={}){if(4!==e.dims.length)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!t)throw new Error("`interpolate_4d` requires a `size` argument.");let r,o;if(2===t.length)r=[...e.dims.slice(0,2),...t];else if(3===t.length)r=[e.dims[0],...t];else{if(4!==t.length)throw new Error("`size` must be of length 2, 3, or 4.");r=t}if("bilinear"===n)o=await s.TensorOpRegistry.bilinear_interpolate_4d;else{if("bicubic"!==n)throw new Error(`Unsupported mode: ${n}`);o=await s.TensorOpRegistry.bicubic_interpolate_4d}const a=new i("int64",new BigInt64Array(r.map(BigInt)),[r.length]);return await o({x:e,s:a})}async function u(e,t){const n=await s.TensorOpRegistry.matmul;return await n({a:e,b:t})}async function p(e,t){const n=await s.TensorOpRegistry.rfft;return await n({x:e,a:t})}async function h(e,t){const n=await s.TensorOpRegistry.top_k;return t=null===t?e.dims.at(-1):Math.min(t,e.dims.at(-1)),await n({x:e,k:new i("int64",[BigInt(t)],[1])})}function m(e,t){const n=e.data,r=t.data,o=[e.dims[0],e.dims[2]],s=new n.constructor(o[0]*o[1]),[a,l,c]=e.dims;let d=0;for(let e=0;e<a;++e){const t=e*c*l;for(let o=0;o<c;++o){let a=0,i=0;const u=e*l,p=t+o;for(let e=0;e<l;++e){const t=Number(r[u+e]);i+=t,a+=n[p+e*c]*t}const h=a/i;s[d++]=h}}return new i(e.type,s,o)}function _(e,t,{eps:n=1e-5}={}){if(2!==e.dims.length)throw new Error("`layer_norm` currently only supports 2D input.");const[r,o]=e.dims;if(1!==t.length&&t[0]!==o)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[s,a]=T(e,1,0,!0),l=s.data,c=a.data,d=e.data,u=new d.constructor(d.length);for(let e=0;e<r;++e){const t=e*o;for(let r=0;r<o;++r){const o=t+r;u[o]=(d[o]-c[e])/(l[e]+n)}}return new i(e.type,u,e.dims)}function f(e,t){return e=e.slice(),null===t?e=e.filter((e=>1!==e)):"number"==typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter(((e,n)=>1!==e||!t.includes(n)))),e}function g(e,t){return t=M(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function M(e,t,n=null,r=!0){if(r&&(e<-t||e>=t))throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===n?"":" "+n} with size ${t}`);return e<0&&(e=(e%t+t)%t),e}function w(e,t=0){t=M(t,e[0].dims.length);const n=e[0].dims.slice();n[t]=e.reduce(((e,n)=>e+n.dims[t]),0);const r=n.reduce(((e,t)=>e*t),1),o=new e[0].data.constructor(r),s=e[0].type;if(0===t){let t=0;for(const n of e){const e=n.data;o.set(e,t),t+=e.length}}else{let r=0;for(let s=0;s<e.length;++s){const{data:a,dims:i}=e[s];for(let e=0;e<a.length;++e){let s=0;for(let o=i.length-1,a=e,l=1;o>=0;--o){const e=i[o];let c=a%e;o===t&&(c+=r),s+=c*l,l*=n[o],a=Math.floor(a/e)}o[s]=a[e]}r+=i[t]}}return new i(s,o,n)}function b(e,t=0){return w(e.map((e=>e.unsqueeze(t))),t)}function T(e,t=null,n=1,r=!1){const o=e.data,s=e.dims;if(null===t){const t=o.reduce(((e,t)=>e+t),0)/o.length,r=Math.sqrt(o.reduce(((e,n)=>e+(n-t)**2),0)/(o.length-n)),s=new i(e.type,[t],[]);return[new i(e.type,[r],[]),s]}const a=x(e,t=M(t,s.length),r),l=a.data,c=s.slice();c[t]=1;const d=new o.constructor(o.length/s[t]);for(let e=0;e<o.length;++e){let n=0;for(let r=s.length-1,o=e,a=1;r>=0;--r){const e=s[r];if(r!==t){n+=o%e*a,a*=c[r]}o=Math.floor(o/e)}d[n]+=(o[e]-l[n])**2}for(let e=0;e<d.length;++e)d[e]=Math.sqrt(d[e]/(s[t]-n));r||c.splice(t,1);return[new i(e.type,d,c),a]}function x(e,t=null,n=!1){const r=e.data;if(null===t){const t=r.reduce(((e,t)=>e+t),0);return new i(e.type,[t/r.length],[])}const o=e.dims;t=M(t,o.length);const s=o.slice();s[t]=1;const a=new r.constructor(r.length/o[t]);for(let e=0;e<r.length;++e){let n=0;for(let r=o.length-1,a=e,i=1;r>=0;--r){const e=o[r];if(r!==t){n+=a%e*i,i*=s[r]}a=Math.floor(a/e)}a[n]+=r[e]}if(1!==o[t])for(let e=0;e<a.length;++e)a[e]=a[e]/o[t];return n||s.splice(t,1),new i(e.type,a,s)}function y(e,t,n,r){const o=e.reduce(((e,t)=>e*t),1);return new i(n,new r(o).fill(t),e)}function k(e,t){let n,r;if("number"==typeof t)n="float32",r=Float32Array;else{if("bigint"!=typeof t)throw new Error("Unsupported data type: "+typeof t);n="int64",r=BigInt64Array}return y(e,t,n,r)}function F(e,t){return k(e.dims,t)}function C(e){return y(e,1n,"int64",BigInt64Array)}function P(e){return C(e.dims)}function v(e){return y(e,0n,"int64",BigInt64Array)}function S(e){return v(e.dims)}function A(e,t){if(2!==e.dims.length)throw new Error("The tensor must have 2 dimensions");if(e.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(t))throw new Error("The precision must be either 'binary' or 'ubinary'");const n="binary"===t,r=n?"int8":"uint8",o=n?Int8Array:Uint8Array,s=e.data,a=new o(s.length/8);for(let e=0;e<s.length;++e){const t=s[e]>0?1:0,r=Math.floor(e/8),o=e%8;a[r]|=t<<7-o,n&&0===o&&(a[r]-=128)}return new i(r,a,[e.dims[0],e.dims[1]/8])}}},s={};function a(e){var t=s[e];if(void 0!==t)return t.exports;var n=s[e]={exports:{}};return o[e](n,n.exports,a),n.exports}r=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,a.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var o=Object.create(null);a.r(o);var s={};n=n||[null,r({}),r([]),r(r)];for(var i=2&t&&e;"object"==typeof i&&!~n.indexOf(i);i=r(i))Object.getOwnPropertyNames(i).forEach((t=>s[t]=()=>e[t]));return s.default=()=>e,a.d(o,s),o},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};(()=>{
/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/
a.r(i),a.d(i,{ASTFeatureExtractor:()=>o.ASTFeatureExtractor,ASTForAudioClassification:()=>n.ASTForAudioClassification,ASTModel:()=>n.ASTModel,ASTPreTrainedModel:()=>n.ASTPreTrainedModel,AlbertForMaskedLM:()=>n.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>n.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>n.AlbertForSequenceClassification,AlbertModel:()=>n.AlbertModel,AlbertPreTrainedModel:()=>n.AlbertPreTrainedModel,AlbertTokenizer:()=>r.AlbertTokenizer,AudioClassificationPipeline:()=>t.AudioClassificationPipeline,AutoConfig:()=>s.AutoConfig,AutoModel:()=>n.AutoModel,AutoModelForAudioClassification:()=>n.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>n.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>n.AutoModelForCTC,AutoModelForCausalLM:()=>n.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>n.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>n.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>n.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>n.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>n.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>n.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>n.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>n.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>n.AutoModelForMaskedLM,AutoModelForObjectDetection:()=>n.AutoModelForObjectDetection,AutoModelForQuestionAnswering:()=>n.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>n.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>n.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>n.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>n.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>n.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>n.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>n.AutoModelForTokenClassification,AutoModelForVision2Seq:()=>n.AutoModelForVision2Seq,AutoModelForXVector:()=>n.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>n.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>o.AutoProcessor,AutoTokenizer:()=>r.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>t.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>n.BartForConditionalGeneration,BartForSequenceClassification:()=>n.BartForSequenceClassification,BartModel:()=>n.BartModel,BartPretrainedModel:()=>n.BartPretrainedModel,BartTokenizer:()=>r.BartTokenizer,BaseModelOutput:()=>n.BaseModelOutput,BaseStreamer:()=>p.BaseStreamer,BeitFeatureExtractor:()=>o.BeitFeatureExtractor,BeitForImageClassification:()=>n.BeitForImageClassification,BeitModel:()=>n.BeitModel,BeitPreTrainedModel:()=>n.BeitPreTrainedModel,BertForMaskedLM:()=>n.BertForMaskedLM,BertForQuestionAnswering:()=>n.BertForQuestionAnswering,BertForSequenceClassification:()=>n.BertForSequenceClassification,BertForTokenClassification:()=>n.BertForTokenClassification,BertModel:()=>n.BertModel,BertPreTrainedModel:()=>n.BertPreTrainedModel,BertTokenizer:()=>r.BertTokenizer,BitImageProcessor:()=>o.BitImageProcessor,BlenderbotForConditionalGeneration:()=>n.BlenderbotForConditionalGeneration,BlenderbotModel:()=>n.BlenderbotModel,BlenderbotPreTrainedModel:()=>n.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>n.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>n.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>n.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>r.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>r.BlenderbotTokenizer,BloomForCausalLM:()=>n.BloomForCausalLM,BloomModel:()=>n.BloomModel,BloomPreTrainedModel:()=>n.BloomPreTrainedModel,BloomTokenizer:()=>r.BloomTokenizer,CLIPFeatureExtractor:()=>o.CLIPFeatureExtractor,CLIPImageProcessor:()=>o.CLIPImageProcessor,CLIPModel:()=>n.CLIPModel,CLIPPreTrainedModel:()=>n.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>n.CLIPSegForImageSegmentation,CLIPSegModel:()=>n.CLIPSegModel,CLIPSegPreTrainedModel:()=>n.CLIPSegPreTrainedModel,CLIPTextModelWithProjection:()=>n.CLIPTextModelWithProjection,CLIPTokenizer:()=>r.CLIPTokenizer,CLIPVisionModelWithProjection:()=>n.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>n.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>n.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>n.CamembertForSequenceClassification,CamembertForTokenClassification:()=>n.CamembertForTokenClassification,CamembertModel:()=>n.CamembertModel,CamembertPreTrainedModel:()=>n.CamembertPreTrainedModel,CamembertTokenizer:()=>r.CamembertTokenizer,CausalLMOutput:()=>n.CausalLMOutput,CausalLMOutputWithPast:()=>n.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>o.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>n.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>n.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>n.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>o.ClapFeatureExtractor,ClapModel:()=>n.ClapModel,ClapPreTrainedModel:()=>n.ClapPreTrainedModel,ClapTextModelWithProjection:()=>n.ClapTextModelWithProjection,CodeGenForCausalLM:()=>n.CodeGenForCausalLM,CodeGenModel:()=>n.CodeGenModel,CodeGenPreTrainedModel:()=>n.CodeGenPreTrainedModel,CodeGenTokenizer:()=>r.CodeGenTokenizer,CodeLlamaTokenizer:()=>r.CodeLlamaTokenizer,CohereForCausalLM:()=>n.CohereForCausalLM,CohereModel:()=>n.CohereModel,CoherePreTrainedModel:()=>n.CoherePreTrainedModel,CohereTokenizer:()=>r.CohereTokenizer,ConvBertForMaskedLM:()=>n.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>n.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>n.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>n.ConvBertForTokenClassification,ConvBertModel:()=>n.ConvBertModel,ConvBertPreTrainedModel:()=>n.ConvBertPreTrainedModel,ConvBertTokenizer:()=>r.ConvBertTokenizer,ConvNextFeatureExtractor:()=>o.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>n.ConvNextForImageClassification,ConvNextImageProcessor:()=>o.ConvNextImageProcessor,ConvNextModel:()=>n.ConvNextModel,ConvNextPreTrainedModel:()=>n.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>n.ConvNextV2ForImageClassification,ConvNextV2Model:()=>n.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>n.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>o.DPTFeatureExtractor,DPTForDepthEstimation:()=>n.DPTForDepthEstimation,DPTImageProcessor:()=>o.DPTImageProcessor,DPTModel:()=>n.DPTModel,DPTPreTrainedModel:()=>n.DPTPreTrainedModel,DebertaForMaskedLM:()=>n.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>n.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>n.DebertaForSequenceClassification,DebertaForTokenClassification:()=>n.DebertaForTokenClassification,DebertaModel:()=>n.DebertaModel,DebertaPreTrainedModel:()=>n.DebertaPreTrainedModel,DebertaTokenizer:()=>r.DebertaTokenizer,DebertaV2ForMaskedLM:()=>n.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>n.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>n.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>n.DebertaV2ForTokenClassification,DebertaV2Model:()=>n.DebertaV2Model,DebertaV2PreTrainedModel:()=>n.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>r.DebertaV2Tokenizer,DeiTFeatureExtractor:()=>o.DeiTFeatureExtractor,DeiTForImageClassification:()=>n.DeiTForImageClassification,DeiTModel:()=>n.DeiTModel,DeiTPreTrainedModel:()=>n.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>n.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>n.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>t.DepthEstimationPipeline,DetrFeatureExtractor:()=>o.DetrFeatureExtractor,DetrForObjectDetection:()=>n.DetrForObjectDetection,DetrForSegmentation:()=>n.DetrForSegmentation,DetrModel:()=>n.DetrModel,DetrObjectDetectionOutput:()=>n.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>n.DetrPreTrainedModel,DetrSegmentationOutput:()=>n.DetrSegmentationOutput,Dinov2ForImageClassification:()=>n.Dinov2ForImageClassification,Dinov2Model:()=>n.Dinov2Model,Dinov2PreTrainedModel:()=>n.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>n.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>n.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>n.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>n.DistilBertForTokenClassification,DistilBertModel:()=>n.DistilBertModel,DistilBertPreTrainedModel:()=>n.DistilBertPreTrainedModel,DistilBertTokenizer:()=>r.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>t.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>o.DonutFeatureExtractor,DonutSwinModel:()=>n.DonutSwinModel,DonutSwinPreTrainedModel:()=>n.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>n.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>o.EfficientNetImageProcessor,EfficientNetModel:()=>n.EfficientNetModel,EfficientNetPreTrainedModel:()=>n.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>n.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>n.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>n.ElectraForSequenceClassification,ElectraForTokenClassification:()=>n.ElectraForTokenClassification,ElectraModel:()=>n.ElectraModel,ElectraPreTrainedModel:()=>n.ElectraPreTrainedModel,ElectraTokenizer:()=>r.ElectraTokenizer,EosTokenCriteria:()=>h.EosTokenCriteria,EsmForMaskedLM:()=>n.EsmForMaskedLM,EsmForSequenceClassification:()=>n.EsmForSequenceClassification,EsmForTokenClassification:()=>n.EsmForTokenClassification,EsmModel:()=>n.EsmModel,EsmPreTrainedModel:()=>n.EsmPreTrainedModel,EsmTokenizer:()=>r.EsmTokenizer,FFT:()=>u.FFT,FalconForCausalLM:()=>n.FalconForCausalLM,FalconModel:()=>n.FalconModel,FalconPreTrainedModel:()=>n.FalconPreTrainedModel,FalconTokenizer:()=>r.FalconTokenizer,FastViTForImageClassification:()=>n.FastViTForImageClassification,FastViTModel:()=>n.FastViTModel,FastViTPreTrainedModel:()=>n.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>t.FeatureExtractionPipeline,FeatureExtractor:()=>o.FeatureExtractor,FillMaskPipeline:()=>t.FillMaskPipeline,Florence2ForConditionalGeneration:()=>n.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>n.Florence2PreTrainedModel,Florence2Processor:()=>o.Florence2Processor,GLPNFeatureExtractor:()=>o.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>n.GLPNForDepthEstimation,GLPNModel:()=>n.GLPNModel,GLPNPreTrainedModel:()=>n.GLPNPreTrainedModel,GPT2LMHeadModel:()=>n.GPT2LMHeadModel,GPT2Model:()=>n.GPT2Model,GPT2PreTrainedModel:()=>n.GPT2PreTrainedModel,GPT2Tokenizer:()=>r.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>n.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>n.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>n.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>n.GPTJForCausalLM,GPTJModel:()=>n.GPTJModel,GPTJPreTrainedModel:()=>n.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>n.GPTNeoForCausalLM,GPTNeoModel:()=>n.GPTNeoModel,GPTNeoPreTrainedModel:()=>n.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>n.GPTNeoXForCausalLM,GPTNeoXModel:()=>n.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>n.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>r.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>n.Gemma2ForCausalLM,Gemma2Model:()=>n.Gemma2Model,Gemma2PreTrainedModel:()=>n.Gemma2PreTrainedModel,GemmaForCausalLM:()=>n.GemmaForCausalLM,GemmaModel:()=>n.GemmaModel,GemmaPreTrainedModel:()=>n.GemmaPreTrainedModel,GemmaTokenizer:()=>r.GemmaTokenizer,Grok1Tokenizer:()=>r.Grok1Tokenizer,HerbertTokenizer:()=>r.HerbertTokenizer,HubertForCTC:()=>n.HubertForCTC,HubertForSequenceClassification:()=>n.HubertForSequenceClassification,HubertModel:()=>n.HubertModel,HubertPreTrainedModel:()=>n.HubertPreTrainedModel,ImageClassificationPipeline:()=>t.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>t.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>o.ImageFeatureExtractor,ImageMattingOutput:()=>n.ImageMattingOutput,ImageSegmentationPipeline:()=>t.ImageSegmentationPipeline,ImageToImagePipeline:()=>t.ImageToImagePipeline,ImageToTextPipeline:()=>t.ImageToTextPipeline,InterruptableStoppingCriteria:()=>h.InterruptableStoppingCriteria,LlamaForCausalLM:()=>n.LlamaForCausalLM,LlamaModel:()=>n.LlamaModel,LlamaPreTrainedModel:()=>n.LlamaPreTrainedModel,LlamaTokenizer:()=>r.LlamaTokenizer,LlavaForConditionalGeneration:()=>n.LlavaForConditionalGeneration,LlavaPreTrainedModel:()=>n.LlavaPreTrainedModel,LongT5ForConditionalGeneration:()=>n.LongT5ForConditionalGeneration,LongT5Model:()=>n.LongT5Model,LongT5PreTrainedModel:()=>n.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>n.M2M100ForConditionalGeneration,M2M100Model:()=>n.M2M100Model,M2M100PreTrainedModel:()=>n.M2M100PreTrainedModel,M2M100Tokenizer:()=>r.M2M100Tokenizer,MBart50Tokenizer:()=>r.MBart50Tokenizer,MBartForCausalLM:()=>n.MBartForCausalLM,MBartForConditionalGeneration:()=>n.MBartForConditionalGeneration,MBartForSequenceClassification:()=>n.MBartForSequenceClassification,MBartModel:()=>n.MBartModel,MBartPreTrainedModel:()=>n.MBartPreTrainedModel,MBartTokenizer:()=>r.MBartTokenizer,MPNetForMaskedLM:()=>n.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>n.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>n.MPNetForSequenceClassification,MPNetForTokenClassification:()=>n.MPNetForTokenClassification,MPNetModel:()=>n.MPNetModel,MPNetPreTrainedModel:()=>n.MPNetPreTrainedModel,MPNetTokenizer:()=>r.MPNetTokenizer,MT5ForConditionalGeneration:()=>n.MT5ForConditionalGeneration,MT5Model:()=>n.MT5Model,MT5PreTrainedModel:()=>n.MT5PreTrainedModel,MarianMTModel:()=>n.MarianMTModel,MarianModel:()=>n.MarianModel,MarianPreTrainedModel:()=>n.MarianPreTrainedModel,MarianTokenizer:()=>r.MarianTokenizer,MaskedLMOutput:()=>n.MaskedLMOutput,MaxLengthCriteria:()=>h.MaxLengthCriteria,MistralForCausalLM:()=>n.MistralForCausalLM,MistralModel:()=>n.MistralModel,MistralPreTrainedModel:()=>n.MistralPreTrainedModel,MobileBertForMaskedLM:()=>n.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>n.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>n.MobileBertForSequenceClassification,MobileBertModel:()=>n.MobileBertModel,MobileBertPreTrainedModel:()=>n.MobileBertPreTrainedModel,MobileBertTokenizer:()=>r.MobileBertTokenizer,MobileNetV1FeatureExtractor:()=>o.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>n.MobileNetV1ForImageClassification,MobileNetV1Model:()=>n.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>n.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>o.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>n.MobileNetV2ForImageClassification,MobileNetV2Model:()=>n.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>n.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>o.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>n.MobileNetV3ForImageClassification,MobileNetV3Model:()=>n.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>n.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>o.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>n.MobileNetV4ForImageClassification,MobileNetV4Model:()=>n.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>n.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>o.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>n.MobileViTForImageClassification,MobileViTImageProcessor:()=>o.MobileViTImageProcessor,MobileViTModel:()=>n.MobileViTModel,MobileViTPreTrainedModel:()=>n.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>n.MobileViTV2ForImageClassification,MobileViTV2Model:()=>n.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>n.MobileViTV2PreTrainedModel,ModelOutput:()=>n.ModelOutput,Moondream1ForConditionalGeneration:()=>n.Moondream1ForConditionalGeneration,MptForCausalLM:()=>n.MptForCausalLM,MptModel:()=>n.MptModel,MptPreTrainedModel:()=>n.MptPreTrainedModel,MusicgenForCausalLM:()=>n.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>n.MusicgenForConditionalGeneration,MusicgenModel:()=>n.MusicgenModel,MusicgenPreTrainedModel:()=>n.MusicgenPreTrainedModel,NllbTokenizer:()=>r.NllbTokenizer,NomicBertModel:()=>n.NomicBertModel,NomicBertPreTrainedModel:()=>n.NomicBertPreTrainedModel,NougatImageProcessor:()=>o.NougatImageProcessor,NougatTokenizer:()=>r.NougatTokenizer,OPTForCausalLM:()=>n.OPTForCausalLM,OPTModel:()=>n.OPTModel,OPTPreTrainedModel:()=>n.OPTPreTrainedModel,ObjectDetectionPipeline:()=>t.ObjectDetectionPipeline,OpenELMForCausalLM:()=>n.OpenELMForCausalLM,OpenELMModel:()=>n.OpenELMModel,OpenELMPreTrainedModel:()=>n.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>o.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>n.OwlViTForObjectDetection,OwlViTModel:()=>n.OwlViTModel,OwlViTPreTrainedModel:()=>n.OwlViTPreTrainedModel,OwlViTProcessor:()=>o.OwlViTProcessor,Owlv2ForObjectDetection:()=>n.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>o.Owlv2ImageProcessor,Owlv2Model:()=>n.Owlv2Model,Owlv2PreTrainedModel:()=>n.Owlv2PreTrainedModel,Phi3ForCausalLM:()=>n.Phi3ForCausalLM,Phi3Model:()=>n.Phi3Model,Phi3PreTrainedModel:()=>n.Phi3PreTrainedModel,PhiForCausalLM:()=>n.PhiForCausalLM,PhiModel:()=>n.PhiModel,PhiPreTrainedModel:()=>n.PhiPreTrainedModel,Pipeline:()=>t.Pipeline,PreTrainedModel:()=>n.PreTrainedModel,PreTrainedTokenizer:()=>r.PreTrainedTokenizer,PretrainedConfig:()=>s.PretrainedConfig,PretrainedMixin:()=>n.PretrainedMixin,Processor:()=>o.Processor,PyAnnoteFeatureExtractor:()=>o.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>n.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>n.PyAnnoteModel,PyAnnotePreTrainedModel:()=>n.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>o.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>n.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>t.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>n.Qwen2ForCausalLM,Qwen2Model:()=>n.Qwen2Model,Qwen2PreTrainedModel:()=>n.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>r.Qwen2Tokenizer,RTDetrForObjectDetection:()=>n.RTDetrForObjectDetection,RTDetrImageProcessor:()=>o.RTDetrImageProcessor,RTDetrModel:()=>n.RTDetrModel,RTDetrObjectDetectionOutput:()=>n.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>n.RTDetrPreTrainedModel,RawImage:()=>c.RawImage,ResNetForImageClassification:()=>n.ResNetForImageClassification,ResNetModel:()=>n.ResNetModel,ResNetPreTrainedModel:()=>n.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>n.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>n.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>n.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>n.RoFormerForTokenClassification,RoFormerModel:()=>n.RoFormerModel,RoFormerPreTrainedModel:()=>n.RoFormerPreTrainedModel,RoFormerTokenizer:()=>r.RoFormerTokenizer,RobertaForMaskedLM:()=>n.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>n.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>n.RobertaForSequenceClassification,RobertaForTokenClassification:()=>n.RobertaForTokenClassification,RobertaModel:()=>n.RobertaModel,RobertaPreTrainedModel:()=>n.RobertaPreTrainedModel,RobertaTokenizer:()=>r.RobertaTokenizer,SamImageProcessor:()=>o.SamImageProcessor,SamImageSegmentationOutput:()=>n.SamImageSegmentationOutput,SamModel:()=>n.SamModel,SamPreTrainedModel:()=>n.SamPreTrainedModel,SamProcessor:()=>o.SamProcessor,SeamlessM4TFeatureExtractor:()=>o.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>o.SegformerFeatureExtractor,SegformerForImageClassification:()=>n.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>n.SegformerForSemanticSegmentation,SegformerModel:()=>n.SegformerModel,SegformerPreTrainedModel:()=>n.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>n.Seq2SeqLMOutput,SequenceClassifierOutput:()=>n.SequenceClassifierOutput,SiglipImageProcessor:()=>o.SiglipImageProcessor,SiglipModel:()=>n.SiglipModel,SiglipPreTrainedModel:()=>n.SiglipPreTrainedModel,SiglipTextModel:()=>n.SiglipTextModel,SiglipTokenizer:()=>r.SiglipTokenizer,SiglipVisionModel:()=>n.SiglipVisionModel,SpeechT5FeatureExtractor:()=>o.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>n.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>n.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>n.SpeechT5HifiGan,SpeechT5Model:()=>n.SpeechT5Model,SpeechT5PreTrainedModel:()=>n.SpeechT5PreTrainedModel,SpeechT5Processor:()=>o.SpeechT5Processor,SpeechT5Tokenizer:()=>r.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>n.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>n.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>n.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>n.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>n.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>r.SqueezeBertTokenizer,StableLmForCausalLM:()=>n.StableLmForCausalLM,StableLmModel:()=>n.StableLmModel,StableLmPreTrainedModel:()=>n.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>n.Starcoder2ForCausalLM,Starcoder2Model:()=>n.Starcoder2Model,Starcoder2PreTrainedModel:()=>n.Starcoder2PreTrainedModel,StoppingCriteria:()=>h.StoppingCriteria,StoppingCriteriaList:()=>h.StoppingCriteriaList,SummarizationPipeline:()=>t.SummarizationPipeline,Swin2SRForImageSuperResolution:()=>n.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>o.Swin2SRImageProcessor,Swin2SRModel:()=>n.Swin2SRModel,Swin2SRPreTrainedModel:()=>n.Swin2SRPreTrainedModel,SwinForImageClassification:()=>n.SwinForImageClassification,SwinModel:()=>n.SwinModel,SwinPreTrainedModel:()=>n.SwinPreTrainedModel,T5ForConditionalGeneration:()=>n.T5ForConditionalGeneration,T5Model:()=>n.T5Model,T5PreTrainedModel:()=>n.T5PreTrainedModel,T5Tokenizer:()=>r.T5Tokenizer,TableTransformerForObjectDetection:()=>n.TableTransformerForObjectDetection,TableTransformerModel:()=>n.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>n.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>n.TableTransformerPreTrainedModel,Tensor:()=>d.Tensor,Text2TextGenerationPipeline:()=>t.Text2TextGenerationPipeline,TextClassificationPipeline:()=>t.TextClassificationPipeline,TextGenerationPipeline:()=>t.TextGenerationPipeline,TextStreamer:()=>p.TextStreamer,TextToAudioPipeline:()=>t.TextToAudioPipeline,TokenClassificationPipeline:()=>t.TokenClassificationPipeline,TokenClassifierOutput:()=>n.TokenClassifierOutput,TokenizerModel:()=>r.TokenizerModel,TrOCRForCausalLM:()=>n.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>n.TrOCRPreTrainedModel,TranslationPipeline:()=>t.TranslationPipeline,UniSpeechForCTC:()=>n.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>n.UniSpeechForSequenceClassification,UniSpeechModel:()=>n.UniSpeechModel,UniSpeechPreTrainedModel:()=>n.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>n.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>n.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>n.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>n.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>n.UniSpeechSatPreTrainedModel,ViTFeatureExtractor:()=>o.ViTFeatureExtractor,ViTForImageClassification:()=>n.ViTForImageClassification,ViTImageProcessor:()=>o.ViTImageProcessor,ViTModel:()=>n.ViTModel,ViTPreTrainedModel:()=>n.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>n.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>n.VitMatteForImageMatting,VitMatteImageProcessor:()=>o.VitMatteImageProcessor,VitMattePreTrainedModel:()=>n.VitMattePreTrainedModel,VitsModel:()=>n.VitsModel,VitsModelOutput:()=>n.VitsModelOutput,VitsPreTrainedModel:()=>n.VitsPreTrainedModel,VitsTokenizer:()=>r.VitsTokenizer,Wav2Vec2BertForCTC:()=>n.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>n.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>n.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>n.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>r.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>o.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>n.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>n.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>n.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>n.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>n.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>o.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>n.WavLMForAudioFrameClassification,WavLMForCTC:()=>n.WavLMForCTC,WavLMForSequenceClassification:()=>n.WavLMForSequenceClassification,WavLMForXVector:()=>n.WavLMForXVector,WavLMModel:()=>n.WavLMModel,WavLMPreTrainedModel:()=>n.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>o.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>n.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>n.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>o.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>n.WhisperForConditionalGeneration,WhisperModel:()=>n.WhisperModel,WhisperPreTrainedModel:()=>n.WhisperPreTrainedModel,WhisperProcessor:()=>o.WhisperProcessor,WhisperTextStreamer:()=>p.WhisperTextStreamer,WhisperTokenizer:()=>r.WhisperTokenizer,XLMForQuestionAnswering:()=>n.XLMForQuestionAnswering,XLMForSequenceClassification:()=>n.XLMForSequenceClassification,XLMForTokenClassification:()=>n.XLMForTokenClassification,XLMModel:()=>n.XLMModel,XLMPreTrainedModel:()=>n.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>n.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>n.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>n.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>n.XLMRobertaForTokenClassification,XLMRobertaModel:()=>n.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>n.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>r.XLMRobertaTokenizer,XLMTokenizer:()=>r.XLMTokenizer,XLMWithLMHeadModel:()=>n.XLMWithLMHeadModel,XVectorOutput:()=>n.XVectorOutput,YolosFeatureExtractor:()=>o.YolosFeatureExtractor,YolosForObjectDetection:()=>n.YolosForObjectDetection,YolosModel:()=>n.YolosModel,YolosObjectDetectionOutput:()=>n.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>n.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>t.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>t.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>t.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>t.ZeroShotObjectDetectionPipeline,bankers_round:()=>u.bankers_round,cat:()=>d.cat,cos_sim:()=>u.cos_sim,dot:()=>u.dot,dynamic_time_warping:()=>u.dynamic_time_warping,env:()=>e.env,full:()=>d.full,full_like:()=>d.full_like,getKeyValueShapes:()=>s.getKeyValueShapes,hamming:()=>l.hamming,hanning:()=>l.hanning,interpolate:()=>d.interpolate,interpolate_4d:()=>d.interpolate_4d,interpolate_data:()=>u.interpolate_data,is_chinese_char:()=>r.is_chinese_char,layer_norm:()=>d.layer_norm,log_softmax:()=>u.log_softmax,magnitude:()=>u.magnitude,matmul:()=>d.matmul,max:()=>u.max,mean:()=>d.mean,mean_pooling:()=>d.mean_pooling,medianFilter:()=>u.medianFilter,mel_filter_bank:()=>l.mel_filter_bank,min:()=>u.min,ones:()=>d.ones,ones_like:()=>d.ones_like,permute:()=>d.permute,permute_data:()=>u.permute_data,pipeline:()=>t.pipeline,quantize_embeddings:()=>d.quantize_embeddings,read_audio:()=>l.read_audio,rfft:()=>d.rfft,round:()=>u.round,softmax:()=>u.softmax,spectrogram:()=>l.spectrogram,stack:()=>d.stack,std_mean:()=>d.std_mean,topk:()=>d.topk,window_function:()=>l.window_function,zeros:()=>d.zeros,zeros_like:()=>d.zeros_like});var e=a(/*! ./env.js */"./src/env.js"),t=a(/*! ./pipelines.js */"./src/pipelines.js"),n=a(/*! ./models.js */"./src/models.js"),r=a(/*! ./tokenizers.js */"./src/tokenizers.js"),o=a(/*! ./processors.js */"./src/processors.js"),s=a(/*! ./configs.js */"./src/configs.js"),l=a(/*! ./utils/audio.js */"./src/utils/audio.js"),c=a(/*! ./utils/image.js */"./src/utils/image.js"),d=a(/*! ./utils/tensor.js */"./src/utils/tensor.js"),u=a(/*! ./utils/maths.js */"./src/utils/maths.js"),p=a(/*! ./generation/streamers.js */"./src/generation/streamers.js"),h=a(/*! ./generation/stopping_criteria.js */"./src/generation/stopping_criteria.js")})();var l=i.ASTFeatureExtractor,c=i.ASTForAudioClassification,d=i.ASTModel,u=i.ASTPreTrainedModel,p=i.AlbertForMaskedLM,h=i.AlbertForQuestionAnswering,m=i.AlbertForSequenceClassification,_=i.AlbertModel,f=i.AlbertPreTrainedModel,g=i.AlbertTokenizer,M=i.AudioClassificationPipeline,w=i.AutoConfig,b=i.AutoModel,T=i.AutoModelForAudioClassification,x=i.AutoModelForAudioFrameClassification,y=i.AutoModelForCTC,k=i.AutoModelForCausalLM,F=i.AutoModelForDepthEstimation,C=i.AutoModelForDocumentQuestionAnswering,P=i.AutoModelForImageClassification,v=i.AutoModelForImageFeatureExtraction,S=i.AutoModelForImageMatting,A=i.AutoModelForImageSegmentation,E=i.AutoModelForImageToImage,L=i.AutoModelForMaskGeneration,z=i.AutoModelForMaskedLM,I=i.AutoModelForObjectDetection,B=i.AutoModelForQuestionAnswering,N=i.AutoModelForSemanticSegmentation,O=i.AutoModelForSeq2SeqLM,D=i.AutoModelForSequenceClassification,V=i.AutoModelForSpeechSeq2Seq,j=i.AutoModelForTextToSpectrogram,R=i.AutoModelForTextToWaveform,G=i.AutoModelForTokenClassification,q=i.AutoModelForVision2Seq,$=i.AutoModelForXVector,W=i.AutoModelForZeroShotObjectDetection,U=i.AutoProcessor,X=i.AutoTokenizer,Q=i.AutomaticSpeechRecognitionPipeline,H=i.BartForConditionalGeneration,Y=i.BartForSequenceClassification,K=i.BartModel,J=i.BartPretrainedModel,Z=i.BartTokenizer,ee=i.BaseModelOutput,te=i.BaseStreamer,ne=i.BeitFeatureExtractor,re=i.BeitForImageClassification,oe=i.BeitModel,se=i.BeitPreTrainedModel,ae=i.BertForMaskedLM,ie=i.BertForQuestionAnswering,le=i.BertForSequenceClassification,ce=i.BertForTokenClassification,de=i.BertModel,ue=i.BertPreTrainedModel,pe=i.BertTokenizer,he=i.BitImageProcessor,me=i.BlenderbotForConditionalGeneration,_e=i.BlenderbotModel,fe=i.BlenderbotPreTrainedModel,ge=i.BlenderbotSmallForConditionalGeneration,Me=i.BlenderbotSmallModel,we=i.BlenderbotSmallPreTrainedModel,be=i.BlenderbotSmallTokenizer,Te=i.BlenderbotTokenizer,xe=i.BloomForCausalLM,ye=i.BloomModel,ke=i.BloomPreTrainedModel,Fe=i.BloomTokenizer,Ce=i.CLIPFeatureExtractor,Pe=i.CLIPImageProcessor,ve=i.CLIPModel,Se=i.CLIPPreTrainedModel,Ae=i.CLIPSegForImageSegmentation,Ee=i.CLIPSegModel,Le=i.CLIPSegPreTrainedModel,ze=i.CLIPTextModelWithProjection,Ie=i.CLIPTokenizer,Be=i.CLIPVisionModelWithProjection,Ne=i.CamembertForMaskedLM,Oe=i.CamembertForQuestionAnswering,De=i.CamembertForSequenceClassification,Ve=i.CamembertForTokenClassification,je=i.CamembertModel,Re=i.CamembertPreTrainedModel,Ge=i.CamembertTokenizer,qe=i.CausalLMOutput,$e=i.CausalLMOutputWithPast,We=i.ChineseCLIPFeatureExtractor,Ue=i.ChineseCLIPModel,Xe=i.ChineseCLIPPreTrainedModel,Qe=i.ClapAudioModelWithProjection,He=i.ClapFeatureExtractor,Ye=i.ClapModel,Ke=i.ClapPreTrainedModel,Je=i.ClapTextModelWithProjection,Ze=i.CodeGenForCausalLM,et=i.CodeGenModel,tt=i.CodeGenPreTrainedModel,nt=i.CodeGenTokenizer,rt=i.CodeLlamaTokenizer,ot=i.CohereForCausalLM,st=i.CohereModel,at=i.CoherePreTrainedModel,it=i.CohereTokenizer,lt=i.ConvBertForMaskedLM,ct=i.ConvBertForQuestionAnswering,dt=i.ConvBertForSequenceClassification,ut=i.ConvBertForTokenClassification,pt=i.ConvBertModel,ht=i.ConvBertPreTrainedModel,mt=i.ConvBertTokenizer,_t=i.ConvNextFeatureExtractor,ft=i.ConvNextForImageClassification,gt=i.ConvNextImageProcessor,Mt=i.ConvNextModel,wt=i.ConvNextPreTrainedModel,bt=i.ConvNextV2ForImageClassification,Tt=i.ConvNextV2Model,xt=i.ConvNextV2PreTrainedModel,yt=i.DPTFeatureExtractor,kt=i.DPTForDepthEstimation,Ft=i.DPTImageProcessor,Ct=i.DPTModel,Pt=i.DPTPreTrainedModel,vt=i.DebertaForMaskedLM,St=i.DebertaForQuestionAnswering,At=i.DebertaForSequenceClassification,Et=i.DebertaForTokenClassification,Lt=i.DebertaModel,zt=i.DebertaPreTrainedModel,It=i.DebertaTokenizer,Bt=i.DebertaV2ForMaskedLM,Nt=i.DebertaV2ForQuestionAnswering,Ot=i.DebertaV2ForSequenceClassification,Dt=i.DebertaV2ForTokenClassification,Vt=i.DebertaV2Model,jt=i.DebertaV2PreTrainedModel,Rt=i.DebertaV2Tokenizer,Gt=i.DeiTFeatureExtractor,qt=i.DeiTForImageClassification,$t=i.DeiTModel,Wt=i.DeiTPreTrainedModel,Ut=i.DepthAnythingForDepthEstimation,Xt=i.DepthAnythingPreTrainedModel,Qt=i.DepthEstimationPipeline,Ht=i.DetrFeatureExtractor,Yt=i.DetrForObjectDetection,Kt=i.DetrForSegmentation,Jt=i.DetrModel,Zt=i.DetrObjectDetectionOutput,en=i.DetrPreTrainedModel,tn=i.DetrSegmentationOutput,nn=i.Dinov2ForImageClassification,rn=i.Dinov2Model,on=i.Dinov2PreTrainedModel,sn=i.DistilBertForMaskedLM,an=i.DistilBertForQuestionAnswering,ln=i.DistilBertForSequenceClassification,cn=i.DistilBertForTokenClassification,dn=i.DistilBertModel,un=i.DistilBertPreTrainedModel,pn=i.DistilBertTokenizer,hn=i.DocumentQuestionAnsweringPipeline,mn=i.DonutFeatureExtractor,_n=i.DonutSwinModel,fn=i.DonutSwinPreTrainedModel,gn=i.EfficientNetForImageClassification,Mn=i.EfficientNetImageProcessor,wn=i.EfficientNetModel,bn=i.EfficientNetPreTrainedModel,Tn=i.ElectraForMaskedLM,xn=i.ElectraForQuestionAnswering,yn=i.ElectraForSequenceClassification,kn=i.ElectraForTokenClassification,Fn=i.ElectraModel,Cn=i.ElectraPreTrainedModel,Pn=i.ElectraTokenizer,vn=i.EosTokenCriteria,Sn=i.EsmForMaskedLM,An=i.EsmForSequenceClassification,En=i.EsmForTokenClassification,Ln=i.EsmModel,zn=i.EsmPreTrainedModel,In=i.EsmTokenizer,Bn=i.FFT,Nn=i.FalconForCausalLM,On=i.FalconModel,Dn=i.FalconPreTrainedModel,Vn=i.FalconTokenizer,jn=i.FastViTForImageClassification,Rn=i.FastViTModel,Gn=i.FastViTPreTrainedModel,qn=i.FeatureExtractionPipeline,$n=i.FeatureExtractor,Wn=i.FillMaskPipeline,Un=i.Florence2ForConditionalGeneration,Xn=i.Florence2PreTrainedModel,Qn=i.Florence2Processor,Hn=i.GLPNFeatureExtractor,Yn=i.GLPNForDepthEstimation,Kn=i.GLPNModel,Jn=i.GLPNPreTrainedModel,Zn=i.GPT2LMHeadModel,er=i.GPT2Model,tr=i.GPT2PreTrainedModel,nr=i.GPT2Tokenizer,rr=i.GPTBigCodeForCausalLM,or=i.GPTBigCodeModel,sr=i.GPTBigCodePreTrainedModel,ar=i.GPTJForCausalLM,ir=i.GPTJModel,lr=i.GPTJPreTrainedModel,cr=i.GPTNeoForCausalLM,dr=i.GPTNeoModel,ur=i.GPTNeoPreTrainedModel,pr=i.GPTNeoXForCausalLM,hr=i.GPTNeoXModel,mr=i.GPTNeoXPreTrainedModel,_r=i.GPTNeoXTokenizer,fr=i.Gemma2ForCausalLM,gr=i.Gemma2Model,Mr=i.Gemma2PreTrainedModel,wr=i.GemmaForCausalLM,br=i.GemmaModel,Tr=i.GemmaPreTrainedModel,xr=i.GemmaTokenizer,yr=i.Grok1Tokenizer,kr=i.HerbertTokenizer,Fr=i.HubertForCTC,Cr=i.HubertForSequenceClassification,Pr=i.HubertModel,vr=i.HubertPreTrainedModel,Sr=i.ImageClassificationPipeline,Ar=i.ImageFeatureExtractionPipeline,Er=i.ImageFeatureExtractor,Lr=i.ImageMattingOutput,zr=i.ImageSegmentationPipeline,Ir=i.ImageToImagePipeline,Br=i.ImageToTextPipeline,Nr=i.InterruptableStoppingCriteria,Or=i.LlamaForCausalLM,Dr=i.LlamaModel,Vr=i.LlamaPreTrainedModel,jr=i.LlamaTokenizer,Rr=i.LlavaForConditionalGeneration,Gr=i.LlavaPreTrainedModel,qr=i.LongT5ForConditionalGeneration,$r=i.LongT5Model,Wr=i.LongT5PreTrainedModel,Ur=i.M2M100ForConditionalGeneration,Xr=i.M2M100Model,Qr=i.M2M100PreTrainedModel,Hr=i.M2M100Tokenizer,Yr=i.MBart50Tokenizer,Kr=i.MBartForCausalLM,Jr=i.MBartForConditionalGeneration,Zr=i.MBartForSequenceClassification,eo=i.MBartModel,to=i.MBartPreTrainedModel,no=i.MBartTokenizer,ro=i.MPNetForMaskedLM,oo=i.MPNetForQuestionAnswering,so=i.MPNetForSequenceClassification,ao=i.MPNetForTokenClassification,io=i.MPNetModel,lo=i.MPNetPreTrainedModel,co=i.MPNetTokenizer,uo=i.MT5ForConditionalGeneration,po=i.MT5Model,ho=i.MT5PreTrainedModel,mo=i.MarianMTModel,_o=i.MarianModel,fo=i.MarianPreTrainedModel,go=i.MarianTokenizer,Mo=i.MaskedLMOutput,wo=i.MaxLengthCriteria,bo=i.MistralForCausalLM,To=i.MistralModel,xo=i.MistralPreTrainedModel,yo=i.MobileBertForMaskedLM,ko=i.MobileBertForQuestionAnswering,Fo=i.MobileBertForSequenceClassification,Co=i.MobileBertModel,Po=i.MobileBertPreTrainedModel,vo=i.MobileBertTokenizer,So=i.MobileNetV1FeatureExtractor,Ao=i.MobileNetV1ForImageClassification,Eo=i.MobileNetV1Model,Lo=i.MobileNetV1PreTrainedModel,zo=i.MobileNetV2FeatureExtractor,Io=i.MobileNetV2ForImageClassification,Bo=i.MobileNetV2Model,No=i.MobileNetV2PreTrainedModel,Oo=i.MobileNetV3FeatureExtractor,Do=i.MobileNetV3ForImageClassification,Vo=i.MobileNetV3Model,jo=i.MobileNetV3PreTrainedModel,Ro=i.MobileNetV4FeatureExtractor,Go=i.MobileNetV4ForImageClassification,qo=i.MobileNetV4Model,$o=i.MobileNetV4PreTrainedModel,Wo=i.MobileViTFeatureExtractor,Uo=i.MobileViTForImageClassification,Xo=i.MobileViTImageProcessor,Qo=i.MobileViTModel,Ho=i.MobileViTPreTrainedModel,Yo=i.MobileViTV2ForImageClassification,Ko=i.MobileViTV2Model,Jo=i.MobileViTV2PreTrainedModel,Zo=i.ModelOutput,es=i.Moondream1ForConditionalGeneration,ts=i.MptForCausalLM,ns=i.MptModel,rs=i.MptPreTrainedModel,os=i.MusicgenForCausalLM,ss=i.MusicgenForConditionalGeneration,as=i.MusicgenModel,is=i.MusicgenPreTrainedModel,ls=i.NllbTokenizer,cs=i.NomicBertModel,ds=i.NomicBertPreTrainedModel,us=i.NougatImageProcessor,ps=i.NougatTokenizer,hs=i.OPTForCausalLM,ms=i.OPTModel,_s=i.OPTPreTrainedModel,fs=i.ObjectDetectionPipeline,gs=i.OpenELMForCausalLM,Ms=i.OpenELMModel,ws=i.OpenELMPreTrainedModel,bs=i.OwlViTFeatureExtractor,Ts=i.OwlViTForObjectDetection,xs=i.OwlViTModel,ys=i.OwlViTPreTrainedModel,ks=i.OwlViTProcessor,Fs=i.Owlv2ForObjectDetection,Cs=i.Owlv2ImageProcessor,Ps=i.Owlv2Model,vs=i.Owlv2PreTrainedModel,Ss=i.Phi3ForCausalLM,As=i.Phi3Model,Es=i.Phi3PreTrainedModel,Ls=i.PhiForCausalLM,zs=i.PhiModel,Is=i.PhiPreTrainedModel,Bs=i.Pipeline,Ns=i.PreTrainedModel,Os=i.PreTrainedTokenizer,Ds=i.PretrainedConfig,Vs=i.PretrainedMixin,js=i.Processor,Rs=i.PyAnnoteFeatureExtractor,Gs=i.PyAnnoteForAudioFrameClassification,qs=i.PyAnnoteModel,$s=i.PyAnnotePreTrainedModel,Ws=i.PyAnnoteProcessor,Us=i.QuestionAnsweringModelOutput,Xs=i.QuestionAnsweringPipeline,Qs=i.Qwen2ForCausalLM,Hs=i.Qwen2Model,Ys=i.Qwen2PreTrainedModel,Ks=i.Qwen2Tokenizer,Js=i.RTDetrForObjectDetection,Zs=i.RTDetrImageProcessor,ea=i.RTDetrModel,ta=i.RTDetrObjectDetectionOutput,na=i.RTDetrPreTrainedModel,ra=i.RawImage,oa=i.ResNetForImageClassification,sa=i.ResNetModel,aa=i.ResNetPreTrainedModel,ia=i.RoFormerForMaskedLM,la=i.RoFormerForQuestionAnswering,ca=i.RoFormerForSequenceClassification,da=i.RoFormerForTokenClassification,ua=i.RoFormerModel,pa=i.RoFormerPreTrainedModel,ha=i.RoFormerTokenizer,ma=i.RobertaForMaskedLM,_a=i.RobertaForQuestionAnswering,fa=i.RobertaForSequenceClassification,ga=i.RobertaForTokenClassification,Ma=i.RobertaModel,wa=i.RobertaPreTrainedModel,ba=i.RobertaTokenizer,Ta=i.SamImageProcessor,xa=i.SamImageSegmentationOutput,ya=i.SamModel,ka=i.SamPreTrainedModel,Fa=i.SamProcessor,Ca=i.SeamlessM4TFeatureExtractor,Pa=i.SegformerFeatureExtractor,va=i.SegformerForImageClassification,Sa=i.SegformerForSemanticSegmentation,Aa=i.SegformerModel,Ea=i.SegformerPreTrainedModel,La=i.Seq2SeqLMOutput,za=i.SequenceClassifierOutput,Ia=i.SiglipImageProcessor,Ba=i.SiglipModel,Na=i.SiglipPreTrainedModel,Oa=i.SiglipTextModel,Da=i.SiglipTokenizer,Va=i.SiglipVisionModel,ja=i.SpeechT5FeatureExtractor,Ra=i.SpeechT5ForSpeechToText,Ga=i.SpeechT5ForTextToSpeech,qa=i.SpeechT5HifiGan,$a=i.SpeechT5Model,Wa=i.SpeechT5PreTrainedModel,Ua=i.SpeechT5Processor,Xa=i.SpeechT5Tokenizer,Qa=i.SqueezeBertForMaskedLM,Ha=i.SqueezeBertForQuestionAnswering,Ya=i.SqueezeBertForSequenceClassification,Ka=i.SqueezeBertModel,Ja=i.SqueezeBertPreTrainedModel,Za=i.SqueezeBertTokenizer,ei=i.StableLmForCausalLM,ti=i.StableLmModel,ni=i.StableLmPreTrainedModel,ri=i.Starcoder2ForCausalLM,oi=i.Starcoder2Model,si=i.Starcoder2PreTrainedModel,ai=i.StoppingCriteria,ii=i.StoppingCriteriaList,li=i.SummarizationPipeline,ci=i.Swin2SRForImageSuperResolution,di=i.Swin2SRImageProcessor,ui=i.Swin2SRModel,pi=i.Swin2SRPreTrainedModel,hi=i.SwinForImageClassification,mi=i.SwinModel,_i=i.SwinPreTrainedModel,fi=i.T5ForConditionalGeneration,gi=i.T5Model,Mi=i.T5PreTrainedModel,wi=i.T5Tokenizer,bi=i.TableTransformerForObjectDetection,Ti=i.TableTransformerModel,xi=i.TableTransformerObjectDetectionOutput,yi=i.TableTransformerPreTrainedModel,ki=i.Tensor,Fi=i.Text2TextGenerationPipeline,Ci=i.TextClassificationPipeline,Pi=i.TextGenerationPipeline,vi=i.TextStreamer,Si=i.TextToAudioPipeline,Ai=i.TokenClassificationPipeline,Ei=i.TokenClassifierOutput,Li=i.TokenizerModel,zi=i.TrOCRForCausalLM,Ii=i.TrOCRPreTrainedModel,Bi=i.TranslationPipeline,Ni=i.UniSpeechForCTC,Oi=i.UniSpeechForSequenceClassification,Di=i.UniSpeechModel,Vi=i.UniSpeechPreTrainedModel,ji=i.UniSpeechSatForAudioFrameClassification,Ri=i.UniSpeechSatForCTC,Gi=i.UniSpeechSatForSequenceClassification,qi=i.UniSpeechSatModel,$i=i.UniSpeechSatPreTrainedModel,Wi=i.ViTFeatureExtractor,Ui=i.ViTForImageClassification,Xi=i.ViTImageProcessor,Qi=i.ViTModel,Hi=i.ViTPreTrainedModel,Yi=i.VisionEncoderDecoderModel,Ki=i.VitMatteForImageMatting,Ji=i.VitMatteImageProcessor,Zi=i.VitMattePreTrainedModel,el=i.VitsModel,tl=i.VitsModelOutput,nl=i.VitsPreTrainedModel,rl=i.VitsTokenizer,ol=i.Wav2Vec2BertForCTC,sl=i.Wav2Vec2BertForSequenceClassification,al=i.Wav2Vec2BertModel,il=i.Wav2Vec2BertPreTrainedModel,ll=i.Wav2Vec2CTCTokenizer,cl=i.Wav2Vec2FeatureExtractor,dl=i.Wav2Vec2ForAudioFrameClassification,ul=i.Wav2Vec2ForCTC,pl=i.Wav2Vec2ForSequenceClassification,hl=i.Wav2Vec2Model,ml=i.Wav2Vec2PreTrainedModel,_l=i.Wav2Vec2ProcessorWithLM,fl=i.WavLMForAudioFrameClassification,gl=i.WavLMForCTC,Ml=i.WavLMForSequenceClassification,wl=i.WavLMForXVector,bl=i.WavLMModel,Tl=i.WavLMPreTrainedModel,xl=i.WeSpeakerFeatureExtractor,yl=i.WeSpeakerResNetModel,kl=i.WeSpeakerResNetPreTrainedModel,Fl=i.WhisperFeatureExtractor,Cl=i.WhisperForConditionalGeneration,Pl=i.WhisperModel,vl=i.WhisperPreTrainedModel,Sl=i.WhisperProcessor,Al=i.WhisperTextStreamer,El=i.WhisperTokenizer,Ll=i.XLMForQuestionAnswering,zl=i.XLMForSequenceClassification,Il=i.XLMForTokenClassification,Bl=i.XLMModel,Nl=i.XLMPreTrainedModel,Ol=i.XLMRobertaForMaskedLM,Dl=i.XLMRobertaForQuestionAnswering,Vl=i.XLMRobertaForSequenceClassification,jl=i.XLMRobertaForTokenClassification,Rl=i.XLMRobertaModel,Gl=i.XLMRobertaPreTrainedModel,ql=i.XLMRobertaTokenizer,$l=i.XLMTokenizer,Wl=i.XLMWithLMHeadModel,Ul=i.XVectorOutput,Xl=i.YolosFeatureExtractor,Ql=i.YolosForObjectDetection,Hl=i.YolosModel,Yl=i.YolosObjectDetectionOutput,Kl=i.YolosPreTrainedModel,Jl=i.ZeroShotAudioClassificationPipeline,Zl=i.ZeroShotClassificationPipeline,ec=i.ZeroShotImageClassificationPipeline,tc=i.ZeroShotObjectDetectionPipeline,nc=i.bankers_round,rc=i.cat,oc=i.cos_sim,sc=i.dot,ac=i.dynamic_time_warping,ic=i.env,lc=i.full,cc=i.full_like,dc=i.getKeyValueShapes,uc=i.hamming,pc=i.hanning,hc=i.interpolate,mc=i.interpolate_4d,_c=i.interpolate_data,fc=i.is_chinese_char,gc=i.layer_norm,Mc=i.log_softmax,wc=i.magnitude,bc=i.matmul,Tc=i.max,xc=i.mean,yc=i.mean_pooling,kc=i.medianFilter,Fc=i.mel_filter_bank,Cc=i.min,Pc=i.ones,vc=i.ones_like,Sc=i.permute,Ac=i.permute_data,Ec=i.pipeline,Lc=i.quantize_embeddings,zc=i.read_audio,Ic=i.rfft,Bc=i.round,Nc=i.softmax,Oc=i.spectrogram,Dc=i.stack,Vc=i.std_mean,jc=i.topk,Rc=i.window_function,Gc=i.zeros,qc=i.zeros_like;export{l as ASTFeatureExtractor,c as ASTForAudioClassification,d as ASTModel,u as ASTPreTrainedModel,p as AlbertForMaskedLM,h as AlbertForQuestionAnswering,m as AlbertForSequenceClassification,_ as AlbertModel,f as AlbertPreTrainedModel,g as AlbertTokenizer,M as AudioClassificationPipeline,w as AutoConfig,b as AutoModel,T as AutoModelForAudioClassification,x as AutoModelForAudioFrameClassification,y as AutoModelForCTC,k as AutoModelForCausalLM,F as AutoModelForDepthEstimation,C as AutoModelForDocumentQuestionAnswering,P as AutoModelForImageClassification,v as AutoModelForImageFeatureExtraction,S as AutoModelForImageMatting,A as AutoModelForImageSegmentation,E as AutoModelForImageToImage,L as AutoModelForMaskGeneration,z as AutoModelForMaskedLM,I as AutoModelForObjectDetection,B as AutoModelForQuestionAnswering,N as AutoModelForSemanticSegmentation,O as AutoModelForSeq2SeqLM,D as AutoModelForSequenceClassification,V as AutoModelForSpeechSeq2Seq,j as AutoModelForTextToSpectrogram,R as AutoModelForTextToWaveform,G as AutoModelForTokenClassification,q as AutoModelForVision2Seq,$ as AutoModelForXVector,W as AutoModelForZeroShotObjectDetection,U as AutoProcessor,X as AutoTokenizer,Q as AutomaticSpeechRecognitionPipeline,H as BartForConditionalGeneration,Y as BartForSequenceClassification,K as BartModel,J as BartPretrainedModel,Z as BartTokenizer,ee as BaseModelOutput,te as BaseStreamer,ne as BeitFeatureExtractor,re as BeitForImageClassification,oe as BeitModel,se as BeitPreTrainedModel,ae as BertForMaskedLM,ie as BertForQuestionAnswering,le as BertForSequenceClassification,ce as BertForTokenClassification,de as BertModel,ue as BertPreTrainedModel,pe as BertTokenizer,he as BitImageProcessor,me as BlenderbotForConditionalGeneration,_e as BlenderbotModel,fe as BlenderbotPreTrainedModel,ge as BlenderbotSmallForConditionalGeneration,Me as BlenderbotSmallModel,we as BlenderbotSmallPreTrainedModel,be as BlenderbotSmallTokenizer,Te as BlenderbotTokenizer,xe as BloomForCausalLM,ye as BloomModel,ke as BloomPreTrainedModel,Fe as BloomTokenizer,Ce as CLIPFeatureExtractor,Pe as CLIPImageProcessor,ve as CLIPModel,Se as CLIPPreTrainedModel,Ae as CLIPSegForImageSegmentation,Ee as CLIPSegModel,Le as CLIPSegPreTrainedModel,ze as CLIPTextModelWithProjection,Ie as CLIPTokenizer,Be as CLIPVisionModelWithProjection,Ne as CamembertForMaskedLM,Oe as CamembertForQuestionAnswering,De as CamembertForSequenceClassification,Ve as CamembertForTokenClassification,je as CamembertModel,Re as CamembertPreTrainedModel,Ge as CamembertTokenizer,qe as CausalLMOutput,$e as CausalLMOutputWithPast,We as ChineseCLIPFeatureExtractor,Ue as ChineseCLIPModel,Xe as ChineseCLIPPreTrainedModel,Qe as ClapAudioModelWithProjection,He as ClapFeatureExtractor,Ye as ClapModel,Ke as ClapPreTrainedModel,Je as ClapTextModelWithProjection,Ze as CodeGenForCausalLM,et as CodeGenModel,tt as CodeGenPreTrainedModel,nt as CodeGenTokenizer,rt as CodeLlamaTokenizer,ot as CohereForCausalLM,st as CohereModel,at as CoherePreTrainedModel,it as CohereTokenizer,lt as ConvBertForMaskedLM,ct as ConvBertForQuestionAnswering,dt as ConvBertForSequenceClassification,ut as ConvBertForTokenClassification,pt as ConvBertModel,ht as ConvBertPreTrainedModel,mt as ConvBertTokenizer,_t as ConvNextFeatureExtractor,ft as ConvNextForImageClassification,gt as ConvNextImageProcessor,Mt as ConvNextModel,wt as ConvNextPreTrainedModel,bt as ConvNextV2ForImageClassification,Tt as ConvNextV2Model,xt as ConvNextV2PreTrainedModel,yt as DPTFeatureExtractor,kt as DPTForDepthEstimation,Ft as DPTImageProcessor,Ct as DPTModel,Pt as DPTPreTrainedModel,vt as DebertaForMaskedLM,St as DebertaForQuestionAnswering,At as DebertaForSequenceClassification,Et as DebertaForTokenClassification,Lt as DebertaModel,zt as DebertaPreTrainedModel,It as DebertaTokenizer,Bt as DebertaV2ForMaskedLM,Nt as DebertaV2ForQuestionAnswering,Ot as DebertaV2ForSequenceClassification,Dt as DebertaV2ForTokenClassification,Vt as DebertaV2Model,jt as DebertaV2PreTrainedModel,Rt as DebertaV2Tokenizer,Gt as DeiTFeatureExtractor,qt as DeiTForImageClassification,$t as DeiTModel,Wt as DeiTPreTrainedModel,Ut as DepthAnythingForDepthEstimation,Xt as DepthAnythingPreTrainedModel,Qt as DepthEstimationPipeline,Ht as DetrFeatureExtractor,Yt as DetrForObjectDetection,Kt as DetrForSegmentation,Jt as DetrModel,Zt as DetrObjectDetectionOutput,en as DetrPreTrainedModel,tn as DetrSegmentationOutput,nn as Dinov2ForImageClassification,rn as Dinov2Model,on as Dinov2PreTrainedModel,sn as DistilBertForMaskedLM,an as DistilBertForQuestionAnswering,ln as DistilBertForSequenceClassification,cn as DistilBertForTokenClassification,dn as DistilBertModel,un as DistilBertPreTrainedModel,pn as DistilBertTokenizer,hn as DocumentQuestionAnsweringPipeline,mn as DonutFeatureExtractor,_n as DonutSwinModel,fn as DonutSwinPreTrainedModel,gn as EfficientNetForImageClassification,Mn as EfficientNetImageProcessor,wn as EfficientNetModel,bn as EfficientNetPreTrainedModel,Tn as ElectraForMaskedLM,xn as ElectraForQuestionAnswering,yn as ElectraForSequenceClassification,kn as ElectraForTokenClassification,Fn as ElectraModel,Cn as ElectraPreTrainedModel,Pn as ElectraTokenizer,vn as EosTokenCriteria,Sn as EsmForMaskedLM,An as EsmForSequenceClassification,En as EsmForTokenClassification,Ln as EsmModel,zn as EsmPreTrainedModel,In as EsmTokenizer,Bn as FFT,Nn as FalconForCausalLM,On as FalconModel,Dn as FalconPreTrainedModel,Vn as FalconTokenizer,jn as FastViTForImageClassification,Rn as FastViTModel,Gn as FastViTPreTrainedModel,qn as FeatureExtractionPipeline,$n as FeatureExtractor,Wn as FillMaskPipeline,Un as Florence2ForConditionalGeneration,Xn as Florence2PreTrainedModel,Qn as Florence2Processor,Hn as GLPNFeatureExtractor,Yn as GLPNForDepthEstimation,Kn as GLPNModel,Jn as GLPNPreTrainedModel,Zn as GPT2LMHeadModel,er as GPT2Model,tr as GPT2PreTrainedModel,nr as GPT2Tokenizer,rr as GPTBigCodeForCausalLM,or as GPTBigCodeModel,sr as GPTBigCodePreTrainedModel,ar as GPTJForCausalLM,ir as GPTJModel,lr as GPTJPreTrainedModel,cr as GPTNeoForCausalLM,dr as GPTNeoModel,ur as GPTNeoPreTrainedModel,pr as GPTNeoXForCausalLM,hr as GPTNeoXModel,mr as GPTNeoXPreTrainedModel,_r as GPTNeoXTokenizer,fr as Gemma2ForCausalLM,gr as Gemma2Model,Mr as Gemma2PreTrainedModel,wr as GemmaForCausalLM,br as GemmaModel,Tr as GemmaPreTrainedModel,xr as GemmaTokenizer,yr as Grok1Tokenizer,kr as HerbertTokenizer,Fr as HubertForCTC,Cr as HubertForSequenceClassification,Pr as HubertModel,vr as HubertPreTrainedModel,Sr as ImageClassificationPipeline,Ar as ImageFeatureExtractionPipeline,Er as ImageFeatureExtractor,Lr as ImageMattingOutput,zr as ImageSegmentationPipeline,Ir as ImageToImagePipeline,Br as ImageToTextPipeline,Nr as InterruptableStoppingCriteria,Or as LlamaForCausalLM,Dr as LlamaModel,Vr as LlamaPreTrainedModel,jr as LlamaTokenizer,Rr as LlavaForConditionalGeneration,Gr as LlavaPreTrainedModel,qr as LongT5ForConditionalGeneration,$r as LongT5Model,Wr as LongT5PreTrainedModel,Ur as M2M100ForConditionalGeneration,Xr as M2M100Model,Qr as M2M100PreTrainedModel,Hr as M2M100Tokenizer,Yr as MBart50Tokenizer,Kr as MBartForCausalLM,Jr as MBartForConditionalGeneration,Zr as MBartForSequenceClassification,eo as MBartModel,to as MBartPreTrainedModel,no as MBartTokenizer,ro as MPNetForMaskedLM,oo as MPNetForQuestionAnswering,so as MPNetForSequenceClassification,ao as MPNetForTokenClassification,io as MPNetModel,lo as MPNetPreTrainedModel,co as MPNetTokenizer,uo as MT5ForConditionalGeneration,po as MT5Model,ho as MT5PreTrainedModel,mo as MarianMTModel,_o as MarianModel,fo as MarianPreTrainedModel,go as MarianTokenizer,Mo as MaskedLMOutput,wo as MaxLengthCriteria,bo as MistralForCausalLM,To as MistralModel,xo as MistralPreTrainedModel,yo as MobileBertForMaskedLM,ko as MobileBertForQuestionAnswering,Fo as MobileBertForSequenceClassification,Co as MobileBertModel,Po as MobileBertPreTrainedModel,vo as MobileBertTokenizer,So as MobileNetV1FeatureExtractor,Ao as MobileNetV1ForImageClassification,Eo as MobileNetV1Model,Lo as MobileNetV1PreTrainedModel,zo as MobileNetV2FeatureExtractor,Io as MobileNetV2ForImageClassification,Bo as MobileNetV2Model,No as MobileNetV2PreTrainedModel,Oo as MobileNetV3FeatureExtractor,Do as MobileNetV3ForImageClassification,Vo as MobileNetV3Model,jo as MobileNetV3PreTrainedModel,Ro as MobileNetV4FeatureExtractor,Go as MobileNetV4ForImageClassification,qo as MobileNetV4Model,$o as MobileNetV4PreTrainedModel,Wo as MobileViTFeatureExtractor,Uo as MobileViTForImageClassification,Xo as MobileViTImageProcessor,Qo as MobileViTModel,Ho as MobileViTPreTrainedModel,Yo as MobileViTV2ForImageClassification,Ko as MobileViTV2Model,Jo as MobileViTV2PreTrainedModel,Zo as ModelOutput,es as Moondream1ForConditionalGeneration,ts as MptForCausalLM,ns as MptModel,rs as MptPreTrainedModel,os as MusicgenForCausalLM,ss as MusicgenForConditionalGeneration,as as MusicgenModel,is as MusicgenPreTrainedModel,ls as NllbTokenizer,cs as NomicBertModel,ds as NomicBertPreTrainedModel,us as NougatImageProcessor,ps as NougatTokenizer,hs as OPTForCausalLM,ms as OPTModel,_s as OPTPreTrainedModel,fs as ObjectDetectionPipeline,gs as OpenELMForCausalLM,Ms as OpenELMModel,ws as OpenELMPreTrainedModel,bs as OwlViTFeatureExtractor,Ts as OwlViTForObjectDetection,xs as OwlViTModel,ys as OwlViTPreTrainedModel,ks as OwlViTProcessor,Fs as Owlv2ForObjectDetection,Cs as Owlv2ImageProcessor,Ps as Owlv2Model,vs as Owlv2PreTrainedModel,Ss as Phi3ForCausalLM,As as Phi3Model,Es as Phi3PreTrainedModel,Ls as PhiForCausalLM,zs as PhiModel,Is as PhiPreTrainedModel,Bs as Pipeline,Ns as PreTrainedModel,Os as PreTrainedTokenizer,Ds as PretrainedConfig,Vs as PretrainedMixin,js as Processor,Rs as PyAnnoteFeatureExtractor,Gs as PyAnnoteForAudioFrameClassification,qs as PyAnnoteModel,$s as PyAnnotePreTrainedModel,Ws as PyAnnoteProcessor,Us as QuestionAnsweringModelOutput,Xs as QuestionAnsweringPipeline,Qs as Qwen2ForCausalLM,Hs as Qwen2Model,Ys as Qwen2PreTrainedModel,Ks as Qwen2Tokenizer,Js as RTDetrForObjectDetection,Zs as RTDetrImageProcessor,ea as RTDetrModel,ta as RTDetrObjectDetectionOutput,na as RTDetrPreTrainedModel,ra as RawImage,oa as ResNetForImageClassification,sa as ResNetModel,aa as ResNetPreTrainedModel,ia as RoFormerForMaskedLM,la as RoFormerForQuestionAnswering,ca as RoFormerForSequenceClassification,da as RoFormerForTokenClassification,ua as RoFormerModel,pa as RoFormerPreTrainedModel,ha as RoFormerTokenizer,ma as RobertaForMaskedLM,_a as RobertaForQuestionAnswering,fa as RobertaForSequenceClassification,ga as RobertaForTokenClassification,Ma as RobertaModel,wa as RobertaPreTrainedModel,ba as RobertaTokenizer,Ta as SamImageProcessor,xa as SamImageSegmentationOutput,ya as SamModel,ka as SamPreTrainedModel,Fa as SamProcessor,Ca as SeamlessM4TFeatureExtractor,Pa as SegformerFeatureExtractor,va as SegformerForImageClassification,Sa as SegformerForSemanticSegmentation,Aa as SegformerModel,Ea as SegformerPreTrainedModel,La as Seq2SeqLMOutput,za as SequenceClassifierOutput,Ia as SiglipImageProcessor,Ba as SiglipModel,Na as SiglipPreTrainedModel,Oa as SiglipTextModel,Da as SiglipTokenizer,Va as SiglipVisionModel,ja as SpeechT5FeatureExtractor,Ra as SpeechT5ForSpeechToText,Ga as SpeechT5ForTextToSpeech,qa as SpeechT5HifiGan,$a as SpeechT5Model,Wa as SpeechT5PreTrainedModel,Ua as SpeechT5Processor,Xa as SpeechT5Tokenizer,Qa as SqueezeBertForMaskedLM,Ha as SqueezeBertForQuestionAnswering,Ya as SqueezeBertForSequenceClassification,Ka as SqueezeBertModel,Ja as SqueezeBertPreTrainedModel,Za as SqueezeBertTokenizer,ei as StableLmForCausalLM,ti as StableLmModel,ni as StableLmPreTrainedModel,ri as Starcoder2ForCausalLM,oi as Starcoder2Model,si as Starcoder2PreTrainedModel,ai as StoppingCriteria,ii as StoppingCriteriaList,li as SummarizationPipeline,ci as Swin2SRForImageSuperResolution,di as Swin2SRImageProcessor,ui as Swin2SRModel,pi as Swin2SRPreTrainedModel,hi as SwinForImageClassification,mi as SwinModel,_i as SwinPreTrainedModel,fi as T5ForConditionalGeneration,gi as T5Model,Mi as T5PreTrainedModel,wi as T5Tokenizer,bi as TableTransformerForObjectDetection,Ti as TableTransformerModel,xi as TableTransformerObjectDetectionOutput,yi as TableTransformerPreTrainedModel,ki as Tensor,Fi as Text2TextGenerationPipeline,Ci as TextClassificationPipeline,Pi as TextGenerationPipeline,vi as TextStreamer,Si as TextToAudioPipeline,Ai as TokenClassificationPipeline,Ei as TokenClassifierOutput,Li as TokenizerModel,zi as TrOCRForCausalLM,Ii as TrOCRPreTrainedModel,Bi as TranslationPipeline,Ni as UniSpeechForCTC,Oi as UniSpeechForSequenceClassification,Di as UniSpeechModel,Vi as UniSpeechPreTrainedModel,ji as UniSpeechSatForAudioFrameClassification,Ri as UniSpeechSatForCTC,Gi as UniSpeechSatForSequenceClassification,qi as UniSpeechSatModel,$i as UniSpeechSatPreTrainedModel,Wi as ViTFeatureExtractor,Ui as ViTForImageClassification,Xi as ViTImageProcessor,Qi as ViTModel,Hi as ViTPreTrainedModel,Yi as VisionEncoderDecoderModel,Ki as VitMatteForImageMatting,Ji as VitMatteImageProcessor,Zi as VitMattePreTrainedModel,el as VitsModel,tl as VitsModelOutput,nl as VitsPreTrainedModel,rl as VitsTokenizer,ol as Wav2Vec2BertForCTC,sl as Wav2Vec2BertForSequenceClassification,al as Wav2Vec2BertModel,il as Wav2Vec2BertPreTrainedModel,ll as Wav2Vec2CTCTokenizer,cl as Wav2Vec2FeatureExtractor,dl as Wav2Vec2ForAudioFrameClassification,ul as Wav2Vec2ForCTC,pl as Wav2Vec2ForSequenceClassification,hl as Wav2Vec2Model,ml as Wav2Vec2PreTrainedModel,_l as Wav2Vec2ProcessorWithLM,fl as WavLMForAudioFrameClassification,gl as WavLMForCTC,Ml as WavLMForSequenceClassification,wl as WavLMForXVector,bl as WavLMModel,Tl as WavLMPreTrainedModel,xl as WeSpeakerFeatureExtractor,yl as WeSpeakerResNetModel,kl as WeSpeakerResNetPreTrainedModel,Fl as WhisperFeatureExtractor,Cl as WhisperForConditionalGeneration,Pl as WhisperModel,vl as WhisperPreTrainedModel,Sl as WhisperProcessor,Al as WhisperTextStreamer,El as WhisperTokenizer,Ll as XLMForQuestionAnswering,zl as XLMForSequenceClassification,Il as XLMForTokenClassification,Bl as XLMModel,Nl as XLMPreTrainedModel,Ol as XLMRobertaForMaskedLM,Dl as XLMRobertaForQuestionAnswering,Vl as XLMRobertaForSequenceClassification,jl as XLMRobertaForTokenClassification,Rl as XLMRobertaModel,Gl as XLMRobertaPreTrainedModel,ql as XLMRobertaTokenizer,$l as XLMTokenizer,Wl as XLMWithLMHeadModel,Ul as XVectorOutput,Xl as YolosFeatureExtractor,Ql as YolosForObjectDetection,Hl as YolosModel,Yl as YolosObjectDetectionOutput,Kl as YolosPreTrainedModel,Jl as ZeroShotAudioClassificationPipeline,Zl as ZeroShotClassificationPipeline,ec as ZeroShotImageClassificationPipeline,tc as ZeroShotObjectDetectionPipeline,nc as bankers_round,rc as cat,oc as cos_sim,sc as dot,ac as dynamic_time_warping,ic as env,lc as full,cc as full_like,dc as getKeyValueShapes,uc as hamming,pc as hanning,hc as interpolate,mc as interpolate_4d,_c as interpolate_data,fc as is_chinese_char,gc as layer_norm,Mc as log_softmax,wc as magnitude,bc as matmul,Tc as max,xc as mean,yc as mean_pooling,kc as medianFilter,Fc as mel_filter_bank,Cc as min,Pc as ones,vc as ones_like,Sc as permute,Ac as permute_data,Ec as pipeline,Lc as quantize_embeddings,zc as read_audio,Ic as rfft,Bc as round,Nc as softmax,Oc as spectrogram,Dc as stack,Vc as std_mean,jc as topk,Rc as window_function,Gc as zeros,qc as zeros_like};
//# sourceMappingURL=transformers.min.mjs.map