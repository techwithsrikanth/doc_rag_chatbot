{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srika\\\\OneDrive\\\\Desktop\\\\backend_assgn\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  assetID,\n  chatThreadID: initialChatThreadID,\n  onNewChatThreadID\n}) => {\n  _s();\n  const [chatThreadID, setChatThreadID] = useState(initialChatThreadID);\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isChatStarted, setIsChatStarted] = useState(false);\n  useEffect(() => {\n    if (initialChatThreadID) {\n      setChatThreadID(initialChatThreadID);\n      fetchChatHistory(initialChatThreadID);\n    }\n  }, [initialChatThreadID]);\n  const startChat = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat/start', {\n        assetID\n      });\n      const newChatThreadID = response.data.chatThreadID;\n      setChatThreadID(newChatThreadID);\n      setChatHistory([]);\n      setIsChatStarted(true);\n      onNewChatThreadID(newChatThreadID);\n    } catch (error) {\n      console.error('Error starting chat:', error);\n    }\n  };\n  const sendMessage = async () => {\n    if (!chatThreadID) return;\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat/message', {\n        chatThreadID,\n        message,\n        assetID\n      });\n      setChatHistory(prevHistory => [...prevHistory, {\n        user: message,\n        agent: response.data.response\n      }]);\n      setMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const fetchChatHistory = async (threadID = chatThreadID) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/chat/history?chatThreadID=${threadID}`);\n      setChatHistory(response.data.history);\n    } catch (error) {\n      console.error('Error retrieving chat history:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Current Chat Thread ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this), \" \", chatThreadID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-chat-button\",\n      onClick: startChat,\n      children: \"Start New Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history\",\n        children: chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble user-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"You:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), \" \", entry.user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble agent-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Agent:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), \" \", entry.agent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"chat-input\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: sendMessage,\n          disabled: !chatThreadID,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"wymo4VGiCY8vRpo7Av/+9hZoLxo=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Chat","assetID","chatThreadID","initialChatThreadID","onNewChatThreadID","_s","setChatThreadID","message","setMessage","chatHistory","setChatHistory","isChatStarted","setIsChatStarted","fetchChatHistory","startChat","response","post","newChatThreadID","data","error","console","sendMessage","prevHistory","user","agent","threadID","get","history","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","entry","index","type","value","onChange","e","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/srika/OneDrive/Desktop/backend_assgn/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Chat.css';\r\n\r\nconst Chat = ({ assetID, chatThreadID: initialChatThreadID, onNewChatThreadID }) => {\r\n  const [chatThreadID, setChatThreadID] = useState(initialChatThreadID);\r\n  const [message, setMessage] = useState('');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [isChatStarted, setIsChatStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (initialChatThreadID) {\r\n      setChatThreadID(initialChatThreadID);\r\n      fetchChatHistory(initialChatThreadID);\r\n    }\r\n  }, [initialChatThreadID]);\r\n  const startChat = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/chat/start', { assetID });\r\n      const newChatThreadID = response.data.chatThreadID;\r\n      setChatThreadID(newChatThreadID);\r\n      setChatHistory([]); \r\n      setIsChatStarted(true);\r\n      onNewChatThreadID(newChatThreadID);  \r\n    } catch (error) {\r\n      console.error('Error starting chat:', error);\r\n    }\r\n  };\r\n  const sendMessage = async () => {\r\n    if (!chatThreadID) return;\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/chat/message', {\r\n        chatThreadID,\r\n        message,\r\n        assetID,\r\n      });\r\n      setChatHistory((prevHistory) => [...prevHistory, { user: message, agent: response.data.response }]);\r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  const fetchChatHistory = async (threadID = chatThreadID) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/chat/history?chatThreadID=${threadID}`);\r\n      setChatHistory(response.data.history);\r\n    } catch (error) {\r\n      console.error('Error retrieving chat history:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Chat</h2>\r\n      <p><strong>Current Chat Thread ID:</strong> {chatThreadID}</p>\r\n      <button className=\"start-chat-button\" onClick={startChat}>Start New Chat</button>\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-history\">\r\n          {chatHistory.map((entry, index) => (\r\n            <div key={index} className=\"chat-entry\">\r\n              <div className=\"chat-bubble user-bubble\">\r\n                <strong>You:</strong> {entry.user}\r\n              </div>\r\n              <div className=\"chat-bubble agent-bubble\">\r\n                <strong>Agent:</strong> {entry.agent}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-input-container\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"chat-input\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            placeholder=\"Type your message\"\r\n          />\r\n          <button className=\"send-button\" onClick={sendMessage} disabled={!chatThreadID}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}